import{_ as p,c as o,d as c,a as s,o as i,r as a}from"./app-CHrRue27.js";const l={};function r(u,n){const e=a("BackBtn"),t=a("CommentService");return i(),o("div",null,[n[0]||(n[0]=c(`<p>gin框架下对分页查询进行封装：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token function">Paginate</span><span class="token punctuation">(</span>page <span class="token builtin">int</span><span class="token punctuation">,</span>pageSize <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span>db <span class="token operator">*</span>gorm<span class="token punctuation">.</span>DB<span class="token punctuation">)</span> <span class="token operator">*</span>gorm<span class="token punctuation">.</span>DB <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>db <span class="token operator">*</span>gorm<span class="token punctuation">.</span>DB<span class="token punctuation">)</span> <span class="token operator">*</span>gorm<span class="token punctuation">.</span>DB <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">if</span> page <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span></span>
<span class="line">			page <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">		<span class="token keyword">switch</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">case</span> pageSize <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">:</span></span>
<span class="line">			pageSize <span class="token operator">=</span> <span class="token number">100</span></span>
<span class="line">		<span class="token keyword">case</span> pageSize <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">			pageSize <span class="token operator">=</span> <span class="token number">10</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">		offset <span class="token operator">:=</span> <span class="token punctuation">(</span>page <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pageSize</span>
<span class="line">		<span class="token keyword">return</span> db<span class="token punctuation">.</span><span class="token function">Offset</span><span class="token punctuation">(</span>offset<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Limit</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">使用：</span>
<span class="line">在gorm查询里，通过Scopes闭包查询</span>
<span class="line">common.Db.Scopes(common.Paginate(page,10)).Find(&amp;)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)),s(e),s(t)])}const k=p(l,[["render",r],["__file","gin框架下对分页查询进行封装.html.vue"]]),m=JSON.parse('{"path":"/content/go/gin/gin%E6%A1%86%E6%9E%B6%E4%B8%8B%E5%AF%B9%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E8%BF%9B%E8%A1%8C%E5%B0%81%E8%A3%85.html","title":"gin框架下对分页查询进行封装","lang":"en-US","frontmatter":{"sidebar":false,"title":"gin框架下对分页查询进行封装","description":"gin框架下对分页查询进行封装"},"headers":[],"git":{},"filePathRelative":"content/go/gin/gin框架下对分页查询进行封装.md"}');export{k as comp,m as data};
