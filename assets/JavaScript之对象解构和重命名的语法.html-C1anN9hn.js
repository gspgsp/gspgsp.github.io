import{_ as a,c as n,d as e,o as t}from"./app-CHrRue27.js";const p={};function i(o,s){return t(),n("div",null,s[0]||(s[0]=[e(`<p>JavaScript之对象解构和重命名的语法:</p><ul><li>对象解构：</li></ul><p>对象解构允许你从对象中提取属性并赋值给变量。基本语法如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> property1<span class="token punctuation">,</span> property2 <span class="token punctuation">}</span> <span class="token operator">=</span> object<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这等同于：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> property1 <span class="token operator">=</span> object<span class="token punctuation">.</span>property1<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> property2 <span class="token operator">=</span> object<span class="token punctuation">.</span>property2<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>重命名语法：</li></ul><p>在解构过程中，你可以给解构出来的属性指定一个新的名字。语法如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">originalName</span><span class="token operator">:</span> newName <span class="token punctuation">}</span> <span class="token operator">=</span> object<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这等同于：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> newName <span class="token operator">=</span> object<span class="token punctuation">.</span>originalName<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>组合使用：</li></ul><p>你可以在一个解构语句中同时使用普通解构和重命名：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> property1<span class="token punctuation">,</span> <span class="token literal-property property">originalName</span><span class="token operator">:</span> newName<span class="token punctuation">,</span> property2 <span class="token punctuation">}</span> <span class="token operator">=</span> object<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>在您的代码中的应用：</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">shouldShowLoader</span><span class="token operator">:</span> isLoading<span class="token punctuation">,</span> heading<span class="token punctuation">,</span> sidebarLinks <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>eventDashboardStore<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这行代码做了以下事情：</p><ul><li>从 <code>storeToRefs(eventDashboardStore)</code> 返回的对象中提取 <code>shouldShowLoader</code> 属性，并将其重命名为 <code>isLoading</code></li><li>同时提取 <code>heading</code> 和 <code>sidebarLinks</code> 属性，保持原名</li></ul><p>这种语法的主要优点是：</p><ul><li>代码更简洁</li><li>允许你在使用时给属性一个更有意义或更符合当前上下文的名字</li><li>可以避免命名冲突</li></ul>`,20)]))}const r=a(p,[["render",i],["__file","JavaScript之对象解构和重命名的语法.html.vue"]]),c=JSON.parse('{"path":"/content/front/js/JavaScript%E4%B9%8B%E5%AF%B9%E8%B1%A1%E8%A7%A3%E6%9E%84%E5%92%8C%E9%87%8D%E5%91%BD%E5%90%8D%E7%9A%84%E8%AF%AD%E6%B3%95.html","title":"JavaScript之对象解构和重命名的语法","lang":"en-US","frontmatter":{"sidebar":false,"title":"JavaScript之对象解构和重命名的语法","description":"JavaScript之对象解构和重命名的语法"},"headers":[],"git":{},"filePathRelative":"content/front/js/JavaScript之对象解构和重命名的语法.md"}');export{r as comp,c as data};
