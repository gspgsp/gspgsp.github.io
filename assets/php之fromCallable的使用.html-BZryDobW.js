import{_ as s,c as a,d as t,o as e}from"./app-CHrRue27.js";const p={};function l(o,n){return e(),a("div",null,n[0]||(n[0]=[t(`<p>最近做项目，遇到将函数转为闭包的场景，所以记录一下:</p><ul><li>将当前类下的 writeLog 方法，转化为闭包函数</li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$fn</span> <span class="token operator">=</span> <span class="token class-name static-context">Closure</span><span class="token operator">::</span><span class="token function">fromCallable</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$this</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;writeLog&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$fn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>将php自带的函数转为闭包函数</li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$fnStr</span> <span class="token operator">=</span> <span class="token class-name static-context">Closure</span><span class="token operator">::</span><span class="token function">fromCallable</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;strlen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$fnStr</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>将另一个类的静态方法转化为闭包函数</li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$fnRead</span> <span class="token operator">=</span> <span class="token class-name static-context">Closure</span><span class="token operator">::</span><span class="token function">fromCallable</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name static-context">TopicRepository</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;readLog&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$fnRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,7)]))}const i=s(p,[["render",l],["__file","php之fromCallable的使用.html.vue"]]),r=JSON.parse('{"path":"/content/php/base/php%E4%B9%8BfromCallable%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"php之fromCallable的使用","lang":"en-US","frontmatter":{"sidebar":false,"title":"php之fromCallable的使用","description":"php之fromCallable的使用"},"headers":[],"git":{},"filePathRelative":"content/php/base/php之fromCallable的使用.md"}');export{i as comp,r as data};
