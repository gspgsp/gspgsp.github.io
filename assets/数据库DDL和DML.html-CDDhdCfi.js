import{_ as e,c as s,d as t,o as n}from"./app-CHrRue27.js";const r={};function l(i,o){return n(),s("div",null,o[0]||(o[0]=[t('<p>数据库DDL和DML:</p><p>在 MySQL 中，DDL（Data Definition Language，数据定义语言）和 DML（Data Manipulation Language，数据操作语言）是两种不同类型的 SQL 语句，各自用于不同的操作：</p><h5 id="_1-ddl-数据定义语言" tabindex="-1"><a class="header-anchor" href="#_1-ddl-数据定义语言"><span>1. DDL（数据定义语言）</span></a></h5><ul><li><strong>作用</strong>：用于定义或更改数据库对象的结构，比如数据库、表、索引等。</li><li><strong>主要特点</strong>：DDL 语句会影响数据库的结构，一般不涉及具体的数据。</li><li><strong>常用语句</strong>： <ul><li><strong><code>CREATE</code></strong>：创建数据库、表、视图、索引等。例如，<code>CREATE TABLE users (id INT, name VARCHAR(50));</code>。</li><li><strong><code>ALTER</code></strong>：修改数据库对象的结构，例如修改表结构、增加/删除字段等。例如，<code>ALTER TABLE users ADD age INT;</code>。</li><li><strong><code>DROP</code></strong>：删除数据库对象，例如删除表或数据库。例如，<code>DROP TABLE users;</code>。</li><li><strong><code>TRUNCATE</code></strong>：清空表中所有数据，但保留表结构。例如，<code>TRUNCATE TABLE users;</code>。</li></ul></li><li><strong>事务特性</strong>：DDL 操作一般是自动提交的，不能回滚。</li></ul><h5 id="_2-dml-数据操作语言" tabindex="-1"><a class="header-anchor" href="#_2-dml-数据操作语言"><span>2. DML（数据操作语言）</span></a></h5><ul><li><strong>作用</strong>：用于对数据库中的数据进行增删改查。</li><li><strong>主要特点</strong>：DML 语句直接操作数据，并不会改变数据库结构。</li><li><strong>常用语句</strong>： <ul><li><strong><code>SELECT</code></strong>：查询数据。例如，<code>SELECT * FROM users;</code>。</li><li><strong><code>INSERT</code></strong>：插入数据。例如，<code>INSERT INTO users (id, name) VALUES (1, &#39;Alice&#39;);</code>。</li><li><strong><code>UPDATE</code></strong>：更新数据。例如，<code>UPDATE users SET name = &#39;Bob&#39; WHERE id = 1;</code>。</li><li><strong><code>DELETE</code></strong>：删除数据。例如，<code>DELETE FROM users WHERE id = 1;</code>。</li></ul></li><li><strong>事务特性</strong>：DML 操作通常在事务中使用，可以回滚。</li></ul><h5 id="区别总结" tabindex="-1"><a class="header-anchor" href="#区别总结"><span>区别总结</span></a></h5><ul><li><strong>作用不同</strong>：DDL 用于定义数据库结构，DML 用于操作数据。</li><li><strong>是否影响结构</strong>：DDL 改变表结构或数据库对象；DML 只改变数据内容。</li><li><strong>事务特性</strong>：DDL 语句一般自动提交，不支持回滚；DML 语句支持回滚和提交。</li></ul>',8)]))}const a=e(r,[["render",l],["__file","数据库DDL和DML.html.vue"]]),D=JSON.parse('{"path":"/content/other/spread/%E6%95%B0%E6%8D%AE%E5%BA%93DDL%E5%92%8CDML.html","title":"数据库DDL和DML","lang":"en-US","frontmatter":{"sidebar":false,"title":"数据库DDL和DML","description":"数据库DDL和DML概念，区别，使用"},"headers":[],"git":{},"filePathRelative":"content/other/spread/数据库DDL和DML.md"}');export{a as comp,D as data};
