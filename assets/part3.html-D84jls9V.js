import{_ as n,c as e,d as i,o as a}from"./app-CHrRue27.js";const l={};function d(c,s){return a(),e("div",null,s[0]||(s[0]=[i(`<h4 id="整个登陆模块主要涉及两个表-users-和-refresh-tokens" tabindex="-1"><a class="header-anchor" href="#整个登陆模块主要涉及两个表-users-和-refresh-tokens"><span>整个登陆模块主要涉及两个表 users 和 refresh_tokens</span></a></h4><h5 id="_1-users表" tabindex="-1"><a class="header-anchor" href="#_1-users表"><span>1.users表</span></a></h5><ul><li>1.在~/Entity/下定义User.php</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;?php</span>
<span class="line"></span>
<span class="line">namespace App\\Entity;</span>
<span class="line"></span>
<span class="line">use App\\Repository\\UserRepository;</span>
<span class="line">use Symfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface;</span>
<span class="line">use Symfony\\Component\\Security\\Core\\User\\UserInterface;</span>
<span class="line">use Doctrine\\ORM\\Mapping as ORM;</span>
<span class="line"></span>
<span class="line">#[ORm\\Entity(repositoryClass: UserRepository::class)]</span>
<span class="line">#[ORM\\Table(&quot;users&quot;)]</span>
<span class="line">class User implements UserInterface, PasswordAuthenticatedUserInterface</span>
<span class="line">{</span>
<span class="line">    #[ORM\\Id]</span>
<span class="line">    #[ORM\\GeneratedValue]</span>
<span class="line">    #[ORM\\Column]</span>
<span class="line">    private int $id;</span>
<span class="line"></span>
<span class="line">    #[ORM\\Column(length: 180, unique: true)]</span>
<span class="line">    private string $email;</span>
<span class="line"></span>
<span class="line">    #[ORM\\Column]</span>
<span class="line">    private array $roles = [];</span>
<span class="line"></span>
<span class="line">    #[ORM\\Column]</span>
<span class="line">    private string $password;</span>
<span class="line"></span>
<span class="line">    public function getId(): int</span>
<span class="line">    {</span>
<span class="line">        return $this-&gt;id;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function getEmail(): string</span>
<span class="line">    {</span>
<span class="line">        return $this-&gt;email;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function setEmail(string $email): self</span>
<span class="line">    {</span>
<span class="line">        $this-&gt;email = $email;</span>
<span class="line"></span>
<span class="line">        return $this;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    /**</span>
<span class="line">     * A visual identifier that represents this user.</span>
<span class="line">     */</span>
<span class="line">    public function getUserIdentifier(): string</span>
<span class="line">    {</span>
<span class="line">        return $this-&gt;email;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function getRoles(): array</span>
<span class="line">    {</span>
<span class="line">        $roles = $this-&gt;roles;</span>
<span class="line">        // 保证每个用户至少有 ROLE_USER</span>
<span class="line">        $roles[] = &#39;ROLE_USER&#39;;</span>
<span class="line"></span>
<span class="line">        return array_unique($roles);</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function setRoles(array $roles): self</span>
<span class="line">    {</span>
<span class="line">        $this-&gt;roles = $roles;</span>
<span class="line"></span>
<span class="line">        return $this;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function getPassword(): string</span>
<span class="line">    {</span>
<span class="line">        return $this-&gt;password;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function setPassword(string $password): self</span>
<span class="line">    {</span>
<span class="line">        $this-&gt;password = $password;</span>
<span class="line"></span>
<span class="line">        return $this;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function eraseCredentials(): void</span>
<span class="line">    {</span>
<span class="line">        // 如果你存储了任何临时敏感数据，请在这里清除</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>2.根据这个Entity生成迁移文件</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;?php</span>
<span class="line"></span>
<span class="line">declare(strict_types=1);</span>
<span class="line"></span>
<span class="line">namespace DoctrineMigrations;</span>
<span class="line"></span>
<span class="line">use Doctrine\\DBAL\\Schema\\Schema;</span>
<span class="line">use Doctrine\\Migrations\\AbstractMigration;</span>
<span class="line"></span>
<span class="line">/**</span>
<span class="line"> * Auto-generated Migration: Please modify to your needs!</span>
<span class="line"> */</span>
<span class="line">final class Version20250423152250 extends AbstractMigration</span>
<span class="line">{</span>
<span class="line">    public function getDescription(): string</span>
<span class="line">    {</span>
<span class="line">        return &#39;&#39;;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function up(Schema $schema): void</span>
<span class="line">    {</span>
<span class="line">        // this up() migration is auto-generated, please modify it to your needs</span>
<span class="line">        // 为什么现在生成的是 &lt;&lt;&lt;&#39;SQL&#39; 而不是普通字符串？</span>
<span class="line">        //这是因为：</span>
<span class="line">        //nowdoc 更安全、更清晰地表示“纯文本”</span>
<span class="line">        //不会解析其中的变量、特殊字符、换行</span>
<span class="line">        //非常适合写多行 SQL，避免用字符串拼接或者转义引号</span>
<span class="line">        $this-&gt;addSql(&lt;&lt;&lt;&#39;SQL&#39;</span>
<span class="line">            CREATE TABLE users (id INT AUTO_INCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_1483A5E9E7927C74 (email), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE \`utf8mb4_unicode_ci\` ENGINE = InnoDB</span>
<span class="line">        SQL);</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function down(Schema $schema): void</span>
<span class="line">    {</span>
<span class="line">        // this down() migration is auto-generated, please modify it to your needs</span>
<span class="line">        $this-&gt;addSql(&lt;&lt;&lt;&#39;SQL&#39;</span>
<span class="line">            DROP TABLE users</span>
<span class="line">        SQL);</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-refresh-tokens-表" tabindex="-1"><a class="header-anchor" href="#_2-refresh-tokens-表"><span>2.refresh_tokens 表</span></a></h5><ul><li>1.在~/Entity/下定义RefreshToken.php</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;?php</span>
<span class="line"></span>
<span class="line">namespace App\\Entity;</span>
<span class="line"></span>
<span class="line">use Doctrine\\ORM\\Mapping as ORM;</span>
<span class="line">use Gesdinet\\JWTRefreshTokenBundle\\Entity\\RefreshToken as BaseRefreshToken;</span>
<span class="line"></span>
<span class="line">#[ORM\\Entity(repositoryClass: &quot;Gesdinet\\JWTRefreshTokenBundle\\Entity\\RefreshTokenRepository&quot;)]</span>
<span class="line">#[ORM\\Table(name: &quot;refresh_tokens&quot;)]</span>
<span class="line">class RefreshToken extends BaseRefreshToken</span>
<span class="line">{</span>
<span class="line">// 注意！这里不需要再声明id字段了，父类 BaseRefreshToken 已经有了， 也就是说</span>
<span class="line">//你自己的 App\\Entity\\RefreshToken，只要 extends 它，就天然有了这4个字段，不需要再手动去定义。如下:</span>
<span class="line"></span>
<span class="line">//字段 | 类型 | 说明</span>
<span class="line">//id | int | 主键，自增</span>
<span class="line">//refreshToken | string | 生成的 refresh token 值</span>
<span class="line">//username | string | 用户名或者用户的标识</span>
<span class="line">//valid | DateTimeImmutable | refresh token 过期时间</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>2.根据这个Entity生成迁移文件</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;?php</span>
<span class="line"></span>
<span class="line">declare(strict_types=1);</span>
<span class="line"></span>
<span class="line">namespace DoctrineMigrations;</span>
<span class="line"></span>
<span class="line">use Doctrine\\DBAL\\Schema\\Schema;</span>
<span class="line">use Doctrine\\Migrations\\AbstractMigration;</span>
<span class="line"></span>
<span class="line">/**</span>
<span class="line"> * Auto-generated Migration: Please modify to your needs!</span>
<span class="line"> */</span>
<span class="line">final class Version20250426154026 extends AbstractMigration</span>
<span class="line">{</span>
<span class="line">    public function getDescription(): string</span>
<span class="line">    {</span>
<span class="line">        return &#39;&#39;;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function up(Schema $schema): void</span>
<span class="line">    {</span>
<span class="line">        // this up() migration is auto-generated, please modify it to your needs</span>
<span class="line">        $this-&gt;addSql(&lt;&lt;&lt;&#39;SQL&#39;</span>
<span class="line">            CREATE TABLE refresh_tokens (id INT AUTO_INCREMENT NOT NULL, refresh_token VARCHAR(128) NOT NULL, username VARCHAR(255) NOT NULL, valid DATETIME NOT NULL, UNIQUE INDEX UNIQ_9BACE7E1C74F2195 (refresh_token), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE \`utf8mb4_unicode_ci\` ENGINE = InnoDB</span>
<span class="line">        SQL);</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function down(Schema $schema): void</span>
<span class="line">    {</span>
<span class="line">        // this down() migration is auto-generated, please modify it to your needs</span>
<span class="line">        $this-&gt;addSql(&lt;&lt;&lt;&#39;SQL&#39;</span>
<span class="line">            DROP TABLE refresh_tokens</span>
<span class="line">        SQL);</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-执行迁移命令生成对应的表到数据库-相关的命令在文章部分查阅" tabindex="-1"><a class="header-anchor" href="#_3-执行迁移命令生成对应的表到数据库-相关的命令在文章部分查阅"><span>3.执行迁移命令生成对应的表到数据库(相关的命令在文章部分查阅)</span></a></h5><h5 id="_4-userrepository-仓库层" tabindex="-1"><a class="header-anchor" href="#_4-userrepository-仓库层"><span>4.UserRepository 仓库层</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;?php</span>
<span class="line"></span>
<span class="line">namespace App\\Repository;</span>
<span class="line"></span>
<span class="line">use App\\Entity;</span>
<span class="line">use Doctrine\\Bundle\\DoctrineBundle\\Repository\\ServiceEntityRepository;</span>
<span class="line">use Symfony\\Bridge\\Doctrine\\Security\\User\\UserLoaderInterface;</span>
<span class="line">use Symfony\\Component\\Security\\Core\\User\\UserInterface;</span>
<span class="line">use Doctrine\\Persistence\\ManagerRegistry;</span>
<span class="line"></span>
<span class="line">/**</span>
<span class="line"> * @extends ServiceEntityRepository&lt;Entity\\User&gt;</span>
<span class="line"> */</span>
<span class="line">class UserRepository extends ServiceEntityRepository implements UserLoaderInterface</span>
<span class="line">{</span>
<span class="line">    public function __construct(ManagerRegistry $registry)</span>
<span class="line">    {</span>
<span class="line">        parent::__construct($registry, Entity\\User::class);</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function loadUserByIdentifier(string $identifier): ?UserInterface</span>
<span class="line">    {</span>
<span class="line">        //TODO:: 自定义用户认证</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14)]))}const r=n(l,[["render",d],["__file","part3.html.vue"]]),v=JSON.parse('{"path":"/project/symfony/part3/part3.html","title":"","lang":"en-US","frontmatter":{},"headers":[],"git":{},"filePathRelative":"project/symfony/part3/part3.md"}');export{r as comp,v as data};
