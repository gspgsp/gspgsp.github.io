import{_ as o,c as e,d as c,a as s,o as i,r as a}from"./app-CHrRue27.js";const u={};function l(r,n){const t=a("BackBtn"),p=a("CommentService");return i(),e("div",null,[n[0]||(n[0]=c(`<p>我感觉这个操作很nice，直接分页同时返回总数：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">common<span class="token punctuation">.</span>Db<span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Attributes&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;kind = ? and name like ?&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>Kind<span class="token punctuation">.</span>Kind<span class="token punctuation">,</span> <span class="token string">&quot;%&quot;</span><span class="token operator">+</span>keywords<span class="token operator">+</span><span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Scopes</span><span class="token punctuation">(</span>common<span class="token punctuation">.</span><span class="token function">Paginate</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>Products<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Offset</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Limit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>count<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//重点是这个 Offset(-1).Limit(-1).Count(&amp;count) 操作</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),s(t),s(p)])}const m=o(u,[["render",l],["__file","gin框架下分页查询同时返回总数.html.vue"]]),d=JSON.parse('{"path":"/content/go/gin/gin%E6%A1%86%E6%9E%B6%E4%B8%8B%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E5%90%8C%E6%97%B6%E8%BF%94%E5%9B%9E%E6%80%BB%E6%95%B0.html","title":"gin框架下分页查询同时返回总数","lang":"en-US","frontmatter":{"sidebar":false,"title":"gin框架下分页查询同时返回总数","description":"gin框架下分页查询同时返回总数"},"headers":[],"git":{},"filePathRelative":"content/go/gin/gin框架下分页查询同时返回总数.md"}');export{m as comp,d as data};
