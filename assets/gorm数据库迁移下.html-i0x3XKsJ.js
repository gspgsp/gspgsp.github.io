import{_ as s,c as a,d as t,o as e}from"./app-CHrRue27.js";const o={};function p(i,n){return e(),a("div",null,n[0]||(n[0]=[t(`<p>gorm数据库迁移下</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"></span>
<span class="line"><span class="token keyword">type</span> Room <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">	Id             <span class="token builtin">uint</span>      <span class="token string">\`gorm:&quot;primarykey;not null;auto_increment;column:id;&quot;\`</span></span>
<span class="line">	Name           <span class="token builtin">string</span>    <span class="token string">\`gorm:&quot;type:varchar(15);default:NULL;column:name;comment:名称&quot;\`</span></span>
<span class="line">	Students       <span class="token punctuation">[</span><span class="token punctuation">]</span>Student <span class="token string">\`gorm:&quot;foreignKey:room_id;references:id;constraint:OnUpdate:RESTRICT,OnDelete:CASCADE;&quot;\`</span><span class="token comment">// foreignKey 和 references 配合，用于主表</span></span>
<span class="line">	CreatedAt      time<span class="token punctuation">.</span>Time <span class="token string">\`gorm:&quot;type:timestamp;default:NULL;column:created_at;comment:创建时间&quot;\`</span></span>
<span class="line">	DeletedAt      time<span class="token punctuation">.</span>Time <span class="token string">\`gorm:&quot;type:timestamp;default:NULL;column:deleted_at;comment:创建时间&quot;\`</span></span>
<span class="line">	UpdatedAt      time<span class="token punctuation">.</span>Time <span class="token string">\`gorm:&quot;type:timestamp;default:NULL;column:updated_at;comment:更新时间&quot;\`</span></span>
<span class="line">	CreatedAdminId <span class="token builtin">int</span>       <span class="token string">\`gorm:&quot;type:int;default:NULL;column:created_admin_id;comment:创建人ID&quot;\`</span></span>
<span class="line">	UpdatedAdminId <span class="token builtin">int</span>       <span class="token string">\`gorm:&quot;type:int;default:NULL;column:updated_admin_id;comment:更新人ID&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> Student <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">	Id     <span class="token builtin">uint</span>   <span class="token string">\`gorm:&quot;primarykey;not null;auto_increment;column:id;&quot;\`</span></span>
<span class="line">	Name   <span class="token builtin">string</span> <span class="token string">\`gorm:&quot;type:varchar(15);default:NULL;column:name;comment:名称&quot;\`</span></span>
<span class="line">	RoomId <span class="token builtin">int</span>    <span class="token string">\`gorm:&quot;type:int;default:NULL;column:room_id;comment:房间ID&quot;\`</span> <span class="token comment">//room_id 要在Student 表被声明为外键的话，必须要在 room 申明 \`gorm:&quot;foreignKey:room_id;references:id;constraint:OnUpdate:RESTRICT,OnDelete:CASCADE;&quot;\` 在执行了迁移文件以后才会将room_id声明为Student表的外键</span></span>
<span class="line">	<span class="token comment">//RoomInfo       Room    \`gorm:&quot;foreignKey:room_id,references:id&quot;\` //这一行在迁移文件应该注释掉(否则会报错，就是互相引用的问题，导致room表和student表的创建失败)，这个只是在业务逻辑操作的时候，才会有的，比如 我想查某个学生信息，同时又想知道这个学生的room</span></span>
<span class="line">	RoomInfo       Room      <span class="token string">\`gorm:&quot;foreignKey:room_id&quot;\`</span> <span class="token comment">//试验证明 这里只能定义 foreignKey，不能 定义 references ，否则通过Preload 查询 报错，至于 Association 更是不行。目前还没调通 Association 的使用</span></span>
<span class="line">	CreatedAt      time<span class="token punctuation">.</span>Time <span class="token string">\`gorm:&quot;type:timestamp;default:NULL;column:created_at;comment:创建时间&quot;\`</span></span>
<span class="line">	DeletedAt      time<span class="token punctuation">.</span>Time <span class="token string">\`gorm:&quot;type:timestamp;default:NULL;column:deleted_at;comment:创建时间&quot;\`</span></span>
<span class="line">	UpdatedAt      time<span class="token punctuation">.</span>Time <span class="token string">\`gorm:&quot;type:timestamp;default:NULL;column:updated_at;comment:更新时间&quot;\`</span></span>
<span class="line">	CreatedAdminId <span class="token builtin">int</span>       <span class="token string">\`gorm:&quot;type:int;default:NULL;column:created_admin_id;comment:创建人ID&quot;\`</span></span>
<span class="line">	UpdatedAdminId <span class="token builtin">int</span>       <span class="token string">\`gorm:&quot;type:int;default:NULL;column:updated_admin_id;comment:更新人ID&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">//一对一迁移数据库，一对多迁移数据库，注意会有相互引用的问题，所以我建议：单独建一个 migration文件，包括所有的数据表迁移信息，而不是直接用 model来控制迁移文件</span></span>
<span class="line">	err <span class="token operator">:=</span> common<span class="token punctuation">.</span>Db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>model<span class="token punctuation">.</span>Room<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>model<span class="token punctuation">.</span>Student<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;迁移错误:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;迁移完成&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">	<span class="token comment">//通过主表查询</span></span>
<span class="line">	<span class="token keyword">var</span> rooms <span class="token punctuation">[</span><span class="token punctuation">]</span>model<span class="token punctuation">.</span>Room</span>
<span class="line">	common<span class="token punctuation">.</span>Db<span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Students&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rooms<span class="token punctuation">)</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;rooms are:%+v/n&quot;</span><span class="token punctuation">,</span> rooms<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">//通过附表查询</span></span>
<span class="line">	<span class="token keyword">var</span> students <span class="token punctuation">[</span><span class="token punctuation">]</span>model<span class="token punctuation">.</span>Student</span>
<span class="line">	common<span class="token punctuation">.</span>Db<span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;RoomInfo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>students<span class="token punctuation">)</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;students is:%+v\\n&quot;</span><span class="token punctuation">,</span> students<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">	<span class="token comment">//下面两种使用 Association 的方法都调不通，都会报错 foreign key 定义错误的问题，还不知道 Association 刀子应该怎么使用，目前还是只能通过 Preload调用成功</span></span>
<span class="line">	<span class="token comment">//common.Db.Model(model.Student{}).Association(&quot;RoomInfo&quot;).Find(&amp;room)</span></span>
<span class="line">	<span class="token comment">//fmt.Printf(&quot;students are:%+v\\n&quot;, students)</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">//common.Db.Model(model.Room{}).Association(&quot;Students&quot;).Find(&amp;students)</span></span>
<span class="line">	<span class="token comment">//fmt.Printf(&quot;students are:%+v\\n&quot;, students)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">	<span class="token comment">//总结：foreignKey 和 references 放到主表和附表，它们的意义是不一样的，放到主表：foreignKey 其实是定义在附表的外键字段,references 为主表的id字段；放到附表：foreignKey 指的就是当前附表的外键，references 为主表的id(默认)[这是v2版本官网的定义,https://gorm.io/docs/belongs_to.html]</span></span>
<span class="line">	<span class="token comment">//还有就是：gorm的Related和Association 区别： Relate是v1版本才有的方法，Association是v2(1.2.+就是v2版本)才有的方法，没有了，网上的答案 真的是让人伤不起。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const c=s(o,[["render",p],["__file","gorm数据库迁移下.html.vue"]]),u=JSON.parse('{"path":"/content/go/base/gorm%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB%E4%B8%8B.html","title":"gorm数据库迁移下","lang":"en-US","frontmatter":{"sidebar":false,"title":"gorm数据库迁移下","description":"gorm数据库迁移下"},"headers":[],"git":{},"filePathRelative":"content/go/base/gorm数据库迁移下.md"}');export{c as comp,u as data};
