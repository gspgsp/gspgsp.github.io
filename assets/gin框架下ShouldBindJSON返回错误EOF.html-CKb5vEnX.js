import{_ as s,c as a,d as t,o as e}from"./app-CHrRue27.js";const p={};function o(i,n){return e(),a("div",null,n[0]||(n[0]=[t(`<p>这里做个记录吧，由于需要对前端参数进行验证，用到了 ShouldBindJSON ,比如我这里的注册接口：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>RegisterParam<span class="token punctuation">)</span> <span class="token function">VerifyJson</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindJSON</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> validator2<span class="token punctuation">.</span><span class="token function">FirstMessage</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发现 err 一直返回 EOF，后来想起来，如果用到了 ShouldBindJSON，那么前端数据必须是json格式，而我这里是通过 form-data传递的，所以会报这个问题</p>`,3)]))}const c=s(p,[["render",o],["__file","gin框架下ShouldBindJSON返回错误EOF.html.vue"]]),r=JSON.parse('{"path":"/content/go/gin/gin%E6%A1%86%E6%9E%B6%E4%B8%8BShouldBindJSON%E8%BF%94%E5%9B%9E%E9%94%99%E8%AF%AFEOF.html","title":"gin框架下ShouldBindJSON返回错误EOF","lang":"en-US","frontmatter":{"sidebar":false,"title":"gin框架下ShouldBindJSON返回错误EOF","description":"gin框架下ShouldBindJSON返回错误EOF"},"headers":[],"git":{},"filePathRelative":"content/go/gin/gin框架下ShouldBindJSON返回错误EOF.md"}');export{c as comp,r as data};
