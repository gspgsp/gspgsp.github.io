import{_ as s,c as a,d as e,o as p}from"./app-CHrRue27.js";const t={};function l(i,n){return p(),a("div",null,n[0]||(n[0]=[e(`<p>在实际使用中，有时候需要计算富文本字数，一估算阅读速度，所以就有必要剥去字符串中的 HTML、XML 以及 PHP 的标签,获取纯文本内容</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function-definition function">contentFormat</span><span class="token punctuation">(</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$content</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token variable">$formatData_01</span> <span class="token operator">=</span> <span class="token function">htmlspecialchars_decode</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//把一些预定义的 HTML 实体转换为字符</span></span>
<span class="line"></span>
<span class="line">    <span class="token variable">$formatData_02</span> <span class="token operator">=</span> <span class="token function">strip_tags</span><span class="token punctuation">(</span><span class="token variable">$formatData_01</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//函数剥去字符串中的 HTML、XML 以及 PHP 的标签,获取纯文本内容</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> <span class="token variable">$formatData_02</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//但是在前端使用的时候，还要再 htmlspecialchars_encode 字符串。比如 vue 渲染页面的时候</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const o=s(t,[["render",l],["__file","php之去掉富文本中的标签.html.vue"]]),r=JSON.parse('{"path":"/content/php/base/php%E4%B9%8B%E5%8E%BB%E6%8E%89%E5%AF%8C%E6%96%87%E6%9C%AC%E4%B8%AD%E7%9A%84%E6%A0%87%E7%AD%BE.html","title":"php之去掉富文本中的标签","lang":"en-US","frontmatter":{"sidebar":false,"title":"php之去掉富文本中的标签","description":"php之去掉富文本中的标签"},"headers":[],"git":{},"filePathRelative":"content/php/base/php之去掉富文本中的标签.md"}');export{o as comp,r as data};
