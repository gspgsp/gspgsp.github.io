import{_ as s,c as a,d as p,o as e}from"./app-CHrRue27.js";const l={};function t(i,n){return e(),a("div",null,n[0]||(n[0]=[p(`<p>在对象中调用一个不可访问的方法时，__call() 会被调用。它是 PHP 魔术方法 中的一种。</p><p>语法： __call ( string $name , array $arguments )</p><p>$name 参数是要调用的方法名称。 $arguments 参数是一个枚举数组，包含着要传递给方法 $name 的参数。</p><p>调用受限方法： 如果一个类没有设置 __call() ，对象无法调用受限方法。</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name-definition class-name">Person</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">eat</span><span class="token punctuation">(</span><span class="token variable">$arg</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">当对象调用受限方法时，会出现以下错误信息<span class="token punctuation">:</span></span>
<span class="line"><span class="token variable">$person</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//error: Uncaught Error: Call to protected method Person::eat()</span></span>
<span class="line"><span class="token variable">$person</span><span class="token operator">-&gt;</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;milk&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">设置魔术方法 <span class="token function">__call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name-definition class-name">Person</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">eat</span><span class="token punctuation">(</span><span class="token variable">$args</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$args</span> <span class="token keyword">as</span> <span class="token variable">$arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;Do you like eating, &#39;</span> <span class="token operator">.</span> <span class="token variable">$arg</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;?&lt;br /&gt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__call</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$arguments</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 如果类中有这个方法，就调用</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$name</span> <span class="token operator">===</span> <span class="token string single-quoted-string">&#39;eat&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token variable">$arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;Calling unavailable function &#39;</span> <span class="token operator">.</span> <span class="token variable">$name</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;().&lt;br /&gt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$person</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Do you like eating, Jack?</span></span>
<span class="line"><span class="token comment">// Do you like eating, Rose?</span></span>
<span class="line"><span class="token variable">$person</span><span class="token operator">-&gt;</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Jack&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Rose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">调用不存在的方法<span class="token punctuation">,</span>给出调用无效方法的信息提示<span class="token punctuation">:</span></span>
<span class="line"><span class="token comment">//Calling unavailable function drink().</span></span>
<span class="line"><span class="token variable">$person</span><span class="token operator">-&gt;</span><span class="token function">drink</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Jack&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Rose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)]))}const o=s(l,[["render",t],["__file","php魔术方法之_call.html.vue"]]),u=JSON.parse('{"path":"/content/php/base/php%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95%E4%B9%8B_call.html","title":"php魔术方法之_call","lang":"en-US","frontmatter":{"sidebar":false,"title":"php魔术方法之_call","description":"php魔术方法之_call"},"headers":[],"git":{},"filePathRelative":"content/php/base/php魔术方法之_call.md"}');export{o as comp,u as data};
