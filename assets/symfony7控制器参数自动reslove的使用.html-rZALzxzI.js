import{_ as e,c as n,d as l,o as a}from"./app-CHrRue27.js";const i={};function r(v,s){return a(),n("div",null,s[0]||(s[0]=[l(`<p>symfony7.2控制器参数自动reslove的使用:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">https://symfony.com/doc/current/controller/value_resolver.html#controller-argument-value-resolver</span>
<span class="line">  </span>
<span class="line">其中有一句描述很重要:</span>
<span class="line">This tag is automatically added to every service implementing ValueResolverInterface, but you can set it yourself to change its priority or name attributes.</span>
<span class="line">                  </span>
<span class="line">To ensure your resolvers are added in the right position you can run the following command to see which argument resolvers are present and in which order they run:</span>
<span class="line">root@ca4989b3147e:/app# php bin/console debug:container debug.argument_resolver.inner --show-arguments</span>
<span class="line">  </span>
<span class="line">Information for Service &quot;debug.argument_resolver.inner&quot;</span>
<span class="line">=======================================================</span>
<span class="line"></span>
<span class="line"> Responsible for resolving the arguments passed to an action.</span>
<span class="line"></span>
<span class="line"> ---------------- ----------------------------------------------------------------------------------------------------- </span>
<span class="line">  Option           Value                                                                                                </span>
<span class="line"> ---------------- ----------------------------------------------------------------------------------------------------- </span>
<span class="line">  Service ID       debug.argument_resolver.inner                                                                        </span>
<span class="line">  Class            Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver                                             </span>
<span class="line">  Tags             -                                                                                                    </span>
<span class="line">  Public           no                                                                                                   </span>
<span class="line">  Synthetic        no                                                                                                   </span>
<span class="line">  Lazy             no                                                                                                   </span>
<span class="line">  Shared           yes                                                                                                  </span>
<span class="line">  Abstract         no                                                                                                   </span>
<span class="line">  Autowired        no                                                                                                   </span>
<span class="line">  Autoconfigured   no                                                                                                   </span>
<span class="line">  Arguments        Service(argument_metadata_factory)                                                                   </span>
<span class="line">                   Iterator (25 element(s))                                                                             </span>
<span class="line">                   - Service(.debug.value_resolver.security.user_value_resolver)                                        </span>
<span class="line">                   - Service(.debug.value_resolver.security.security_token_value_resolver)                              </span>
<span class="line">                   - Service(.debug.value_resolver.doctrine.orm.entity_value_resolver)                                  </span>
<span class="line">                   - Service(.debug.value_resolver.argument_resolver.backed_enum_resolver)                              </span>
<span class="line">                   - Service(.debug.value_resolver.argument_resolver.datetime)                                          </span>
<span class="line">                   - Service(.debug.value_resolver.argument_resolver.request_attribute)                                 </span>
<span class="line">                   - Service(.debug.value_resolver.argument_resolver.request)                                           </span>
<span class="line">                   - Service(.debug.value_resolver.argument_resolver.session)                                           </span>
<span class="line">                   - Service(.debug.value_resolver.App\\Model\\Dto\\Resolver\\AddonCreateUpdateDtoResolver)                 </span>
<span class="line">                   - Service(.debug.value_resolver.App\\Model\\Dto\\Resolver\\CustomFieldCreateUpdateDtoResolver)           </span>
<span class="line">                   - Service(.debug.value_resolver.App\\Model\\Dto\\Resolver\\DiscountCreateUpdateDtoResolver)              </span>
<span class="line">                   - Service(.debug.value_resolver.App\\Model\\Dto\\Resolver\\EventContributionTypeDtoResolver)             </span>
<span class="line">                   - Service(.debug.value_resolver.App\\Model\\Dto\\Resolver\\EventPublicationOptionDtoResolver)            </span>
<span class="line">                   - Service(.debug.value_resolver.App\\Model\\Dto\\Resolver\\EventReviewOverallRecommendationDtoResolver)  </span>
<span class="line">                   - Service(.debug.value_resolver.App\\Model\\Dto\\Resolver\\EventSubmissionMarkingSchemeDtoResolver)      </span>
<span class="line">                   - Service(.debug.value_resolver.App\\Model\\Dto\\Resolver\\ProcessPaymentDtoResolver)                    </span>
<span class="line">                   - Service(.debug.value_resolver.App\\Model\\Dto\\Resolver\\ProposalCreateUpdateDtoResolver)              </span>
<span class="line">                   - Service(.debug.value_resolver.App\\Model\\Dto\\Resolver\\RegistrationInformationDtoResolver)           </span>
<span class="line">                   - Service(.debug.value_resolver.App\\Model\\Dto\\Resolver\\SectionCreateUpdateDtoResolver)               </span>
<span class="line">                   - Service(.debug.value_resolver.App\\Model\\Dto\\Resolver\\TicketCreateUpdateDtoResolver)                </span>
<span class="line">                   - Service(.debug.value_resolver.App\\ValueResolver\\FileUploadResolver)                                </span>
<span class="line">                   - Service(.debug.value_resolver.argument_resolver.service)                                           </span>
<span class="line">                   - Service(.debug.value_resolver.argument_resolver.default)                                           </span>
<span class="line">                   - Service(.debug.value_resolver.argument_resolver.variadic)                                          </span>
<span class="line">                   - Service(.debug.value_resolver.argument_resolver.not_tagged_controller)                             </span>
<span class="line">                   Service(.service_locator.ubj5Sie)                                                                    </span>
<span class="line">  Usages           debug.argument_resolver                                                                              </span>
<span class="line"> ---------------- ----------------------------------------------------------------------------------------------------- </span>
<span class="line"></span>
<span class="line"></span>
<span class="line"> ! [NOTE] The &quot;debug.argument_resolver.inner&quot; service or alias has been removed or inlined when the container was       </span>
<span class="line"> !        compiled.                                       </span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">  </span>
<span class="line">原来使用的是:</span>
<span class="line">#[MapRequestPayload] 来实现参数自动映射功能, </span>
<span class="line">和</span>
<span class="line">#[MapEntity(id: &#39;eventId&#39;)] 实现Entity映射功能</span>
<span class="line">  </span>
<span class="line">上面这两个都extends ValueResolver</span>
<span class="line">  </span>
<span class="line">不同的是，现在使用的是ValueResolverInterface， 这个是 use Symfony\\Component\\HttpKernel\\Controller\\ValueResolverInterface;</span>
<span class="line">  </span>
<span class="line">Symfony的Resolver注入原理主要基于依赖注入和参数解析机制：</span>
<span class="line">  </span>
<span class="line">类型自动识别:</span>
<span class="line">根据控制器方法的参数类型</span>
<span class="line">自动匹配对应的ValueResolver</span>
<span class="line">通过类型注入和推断实现参数解析</span>
<span class="line">  </span>
<span class="line">我自己测试发现，只要这样定义</span>
<span class="line">class EventSessionCreateEditDtoResolver extends AbstractRequestDtoResolver // 最终implemanets ValueResolverInterface</span>
<span class="line">那么 EventSessionCreateEditDto 都可以被自动注入</span>
<span class="line">  </span>
<span class="line">//查看指定resolver的注入情况:</span>
<span class="line">root@ca4989b3147e:/app# php bin/console debug:container App\\Model\\Dto\\Resolver\\EventSessionCreateEditDtoResolver</span>
<span class="line">  </span>
<span class="line">Information for Service &quot;App\\Model\\Dto\\Resolver\\EventSessionCreateEditDtoResolver&quot;</span>
<span class="line">==================================================================================</span>
<span class="line"></span>
<span class="line"> ---------------- -------------------------------------------------------------------------------- </span>
<span class="line">  Option           Value                                                                           </span>
<span class="line"> ---------------- -------------------------------------------------------------------------------- </span>
<span class="line">  Service ID       App\\Model\\Dto\\Resolver\\EventSessionCreateEditDtoResolver                        </span>
<span class="line">  Class            App\\Model\\Dto\\Resolver\\EventSessionCreateEditDtoResolver                        </span>
<span class="line">  Tags             controller.argument_value_resolver                                              </span>
<span class="line">  Public           no                                                                              </span>
<span class="line">  Synthetic        no                                                                              </span>
<span class="line">  Lazy             no                                                                              </span>
<span class="line">  Shared           yes                                                                             </span>
<span class="line">  Abstract         no                                                                              </span>
<span class="line">  Autowired        yes                                                                             </span>
<span class="line">  Autoconfigured   yes                                                                             </span>
<span class="line">  Usages           .debug.value_resolver.App\\Model\\Dto\\Resolver\\EventSessionCreateEditDtoResolver  </span>
<span class="line"> ---------------- -------------------------------------------------------------------------------- </span>
<span class="line"></span>
<span class="line"></span>
<span class="line"> ! [NOTE] The &quot;App\\Model\\Dto\\Resolver\\EventSessionCreateEditDtoResolver&quot; service or alias has been removed or inlined   </span>
<span class="line"> !        when the container was compiled.                                                                     </span>
<span class="line"></span>
<span class="line">  </span>
<span class="line">Symfony会自动注入。核心机制是：</span>
<span class="line">  </span>
<span class="line">通过EventSessionCreateEditDtoResolver专门处理EventSessionCreateEditDto类型</span>
<span class="line">控制器方法参数声明了Dto\\Input\\EventSessionCreateEditDto类型</span>
<span class="line">ArgumentResolver会调用匹配的Resolver</span>
<span class="line">Resolver负责创建或解析该对象实例</span>
<span class="line">  </span>
<span class="line">解析流程：</span>
<span class="line">  </span>
<span class="line">匹配参数类型</span>
<span class="line">调用对应Resolver</span>
<span class="line">创建EventSessionCreateEditDto实例</span>
<span class="line">注入到控制器方法</span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">其实最主要的一个方法是:</span>
<span class="line">public function resolve(Request $request, ArgumentMetadata $argument): iterable</span>
<span class="line">    {</span>
<span class="line">        if ($argument-&gt;getType() !== $this-&gt;getSupportedType()) {</span>
<span class="line">            return [];</span>
<span class="line">        }</span>
<span class="line"></span>
<span class="line">        $deserializedDto = $this-&gt;serializer-&gt;deserialize($request-&gt;getContent(), $this-&gt;getSupportedType(), &#39;json&#39;);</span>
<span class="line">        $dtoObject = $this-&gt;postResolve($deserializedDto);</span>
<span class="line"></span>
<span class="line">        $violations = $this-&gt;validator-&gt;validate($dtoObject);</span>
<span class="line">        if (\\count($violations)) {</span>
<span class="line">            throw new HttpException(Response::HTTP_UNPROCESSABLE_ENTITY, implode(&quot;\\n&quot;, array_map(static fn ($e) =&gt; $e-&gt;getMessage(), iterator_to_array($violations))), new ValidationFailedException($request-&gt;getPayload(), $violations));</span>
<span class="line">        }</span>
<span class="line"></span>
<span class="line">        return [$dtoObject];</span>
<span class="line">  }</span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">其中:</span>
<span class="line">if ($argument-&gt;getType() !== $this-&gt;getSupportedType()) {</span>
<span class="line">            return [];</span>
<span class="line">        } </span>
<span class="line">  </span>
<span class="line">这个$this-&gt;getSupportedType() 决定了，当前这个resolver会对哪个控制器的参数生效，如果没有这个判断，就会对所有的参数生效，这也是symfony的一个特色。和 EventSessionCreateEditDtoResolver 这个类名没关系，可以任意命名，最后都可以被请求到。我一直是根据这个类命名来决定处理哪个Dto的，其实不是的，就是根据上面的判断来决定对哪个类型($argument-&gt;getType())生效。</span>
<span class="line">  </span>
<span class="line">再来看文档中的这句:</span>
<span class="line">This tag is automatically added to every service implementing ValueResolverInterface. 说明只要定义了resolver, 实现了ValueResolverInterface，都会被注入，最后对哪个Dto生效，取决于前面的if 类型判断。</span>
<span class="line">  </span>
<span class="line">有人出现郭这个问题:</span>
<span class="line">https://stackoverflow.com/questions/79060922/symfony-7-x-custom-resolver-always-called</span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">同时还可以在service.yaml文件下配置(而不影响使用和之前一样的效果):</span>
<span class="line">App\\Model\\Dto\\Resolver\\AddonCreateUpdateDtoResolver:</span>
<span class="line">    tags:</span>
<span class="line">        - controller.argument_value_resolver:</span>
<span class="line">              name: addon_dto //取个名字</span>
<span class="line">              priority: 150 //设置优先级</span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">// 再次查看</span>
<span class="line">root@ca4989b3147e:/app# php bin/console debug:container App\\Model\\Dto\\Resolver\\AddonCreateUpdateDtoResolver</span>
<span class="line">  </span>
<span class="line">Information for Service &quot;App\\Model\\Dto\\Resolver\\AddonCreateUpdateDtoResolver&quot;</span>
<span class="line">=============================================================================</span>
<span class="line"></span>
<span class="line"> ---------------- --------------------------------------------------------------------------- </span>
<span class="line">  Option           Value                                                                      </span>
<span class="line"> ---------------- --------------------------------------------------------------------------- </span>
<span class="line">  Service ID       App\\Model\\Dto\\Resolver\\AddonCreateUpdateDtoResolver                        </span>
<span class="line">  Class            App\\Model\\Dto\\Resolver\\AddonCreateUpdateDtoResolver                        </span>
<span class="line">  Tags             controller.argument_value_resolver (name: addon_dto, priority: 150)        </span>
<span class="line">                   controller.argument_value_resolver                                         </span>
<span class="line">  Public           no                                                                         </span>
<span class="line">  Synthetic        no                                                                         </span>
<span class="line">  Lazy             no                                                                         </span>
<span class="line">  Shared           yes                                                                        </span>
<span class="line">  Abstract         no                                                                         </span>
<span class="line">  Autowired        yes                                                                        </span>
<span class="line">  Autoconfigured   yes                                                                        </span>
<span class="line">  Usages           .debug.value_resolver.App\\Model\\Dto\\Resolver\\AddonCreateUpdateDtoResolver  </span>
<span class="line"> ---------------- --------------------------------------------------------------------------- </span>
<span class="line"></span>
<span class="line"></span>
<span class="line"> ! [NOTE] The &quot;App\\Model\\Dto\\Resolver\\AddonCreateUpdateDtoResolver&quot; service or alias has been removed or inlined when   </span>
<span class="line"> !        the container was compiled.                                                                   </span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">证明了文档的这句:</span>
<span class="line">but you can set it yourself to change its priority or name attributes.</span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">总结:</span>
<span class="line">这个功能和larvel下自定义request验证类似，都可以提前获取参数，以及格式化参数(添加或者删除部分参数).</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const p=e(i,[["render",r],["__file","symfony7控制器参数自动reslove的使用.html.vue"]]),c=JSON.parse('{"path":"/content/php/symfony/symfony7%E6%8E%A7%E5%88%B6%E5%99%A8%E5%8F%82%E6%95%B0%E8%87%AA%E5%8A%A8reslove%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"symfony7控制器参数自动reslove的使用","lang":"en-US","frontmatter":{"sidebar":false,"title":"symfony7控制器参数自动reslove的使用","head":[["meta",{"name":"title","content":"symfony7控制器参数自动reslove的使用"}],["meta",{"name":"description","content":"symfony7控制器参数自动reslove的使用"}],["meta",{"name":"keywords","content":"symfony7"}],["meta",{"property":"og:title","content":"symfony7控制器参数自动reslove的使用"}],["meta",{"property":"og:description","content":"symfony7控制器参数自动reslove的使用"}]]},"headers":[],"git":{},"filePathRelative":"content/php/symfony/symfony7控制器参数自动reslove的使用.md"}');export{p as comp,c as data};
