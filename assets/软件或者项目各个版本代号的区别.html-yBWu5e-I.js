import{_ as l,c as t,d as a,o as s}from"./app-CHrRue27.js";const i={};function p(r,e){return s(),t("div",null,e[0]||(e[0]=[a("<p>软件或者项目各个版本代号的区别:</p><ul><li>Alpha 内部测试版本 (Alpha Releases) ，会引入新的功能和改进。Alpha 版是当前系列版本的最初版本。Alpha 版可能存在一些 bug，提供给尝鲜用户，可以用于测试最新的功能。</li></ul><p>示例：<br> 1.1 Alpha</p><ul><li>Beta 公开测试版本 (Beta Releases) ，会引入新的功能和改进，相对于内部测试版本已有了很大的改进，消除了严重的错误，但还是存在着一些 bug，提供给尝鲜用户，可以用于测试最新的功能。</li></ul><p>示例：<br> 1.1 Beta</p><ul><li>RC 候选发布版本 (Release Candidate Releases, RC) ，会引入新的功能和改进。RC 版本可用于早期测试，较公开测试版本的稳定性有较大改善，其稳定性足以开始测试，但不适合用于生产部署。</li></ul><p>示例：<br> RC1 2.0-RC1</p><ul><li>GA 正式发布版本 (General Availability Releases, GA) ，是当前系列版本的稳定版本，在候选发布版本 (Release Candidate Releases, RC) 之后发布，能够用于生产部署。</li></ul><p>示例：<br> 1.0 GA</p><ul><li>纯数字版本号 无代号的纯数字版本号，通常理解为正式版本，同GA</li></ul><p>示例：<br> 1.0.0 2.0</p><ul><li>DMR 开发里程碑版本 (Development Milestone Releases, DMR) ，通常理解为开发版，新功能尝鲜版本</li></ul><p>示例：<br> TiDB 6.3.0-DMR</p><ul><li>LTS 长期支持版本 (Long-Term Support Releases, LTS) ，通常理解为稳定版，可长期使用，不会有大功能变更，只修复bug和漏洞。大多数商业软件都提供长期支持版本，如Windows、Ubuntu、Node Js等</li></ul><p>示例：<br> Node 18.12.0 LTS<br> Ubuntu 22.04.1 LTS</p>",15)]))}const o=l(i,[["render",p],["__file","软件或者项目各个版本代号的区别.html.vue"]]),u=JSON.parse('{"path":"/content/other/spread/%E8%BD%AF%E4%BB%B6%E6%88%96%E8%80%85%E9%A1%B9%E7%9B%AE%E5%90%84%E4%B8%AA%E7%89%88%E6%9C%AC%E4%BB%A3%E5%8F%B7%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"软件或者项目各个版本代号的区别","lang":"en-US","frontmatter":{"sidebar":false,"title":"软件或者项目各个版本代号的区别","description":"软件或者项目各个版本代号的区别"},"headers":[],"git":{},"filePathRelative":"content/other/spread/软件或者项目各个版本代号的区别.md"}');export{o as comp,u as data};
