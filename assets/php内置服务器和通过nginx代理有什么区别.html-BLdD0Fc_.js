import{_ as n,c as e,d as r,o as i}from"./app-CHrRue27.js";const l={};function p(a,t){return i(),e("div",null,t[0]||(t[0]=[r('<h3 id="php内置服务器和通过nginx代理有什么区别" tabindex="-1"><a class="header-anchor" href="#php内置服务器和通过nginx代理有什么区别"><span>php内置服务器和通过nginx代理有什么区别</span></a></h3><p>Laravel 的 <strong>内置服务器</strong>（<code>php artisan serve</code>）和 <strong>通过 Nginx 代理运行 Laravel</strong>，主要区别在于 <strong>用途</strong> 和 <strong>性能</strong>：</p><hr><h3 id="_1-laravel-内置服务器-php-artisan-serve" tabindex="-1"><a class="header-anchor" href="#_1-laravel-内置服务器-php-artisan-serve"><span>1. Laravel 内置服务器 (<code>php artisan serve</code>)</span></a></h3><ul><li><p><strong>本质</strong>：PHP 自带的 <code>php -S</code> 内置 Web 服务器，单进程、同步阻塞。</p></li><li><p><strong>用途</strong>：开发测试用。</p></li><li><p><strong>特点</strong>：</p><ul><li>启动简单，不需要配置 Nginx/Apache。</li><li>支持基本的路由转发，满足调试需求。</li><li>单进程，<strong>并发能力极差</strong>（一个请求没处理完，下一个就得等）。</li><li>不适合生产环境（官方也明确写了：<code>php artisan serve</code> 仅供开发）。</li></ul></li></ul><hr><h3 id="_2-nginx-php-fpm" tabindex="-1"><a class="header-anchor" href="#_2-nginx-php-fpm"><span>2. Nginx + PHP-FPM</span></a></h3><ul><li><p><strong>本质</strong>：Nginx 作为前端 Web 服务器，接收请求并交给 PHP-FPM（FastCGI）处理。</p></li><li><p><strong>用途</strong>：生产环境的标准部署方式。</p></li><li><p><strong>特点</strong>：</p><ul><li>高性能（支持成千上万并发）。</li><li>可以做 <strong>负载均衡、缓存、静态文件处理、反向代理</strong> 等。</li><li>PHP-FPM 可以开多个 worker 进程，提高并发。</li><li>配置稍复杂，需要维护 Nginx 和 PHP-FPM 两部分。</li></ul></li></ul><hr><h3 id="简单对比" tabindex="-1"><a class="header-anchor" href="#简单对比"><span>简单对比</span></a></h3><table><thead><tr><th>特点</th><th>内置服务器 (<code>artisan serve</code>)</th><th>Nginx + PHP-FPM</th></tr></thead><tbody><tr><td>部署难度</td><td>简单，一条命令启动</td><td>需要配置 Nginx 与 PHP-FPM</td></tr><tr><td>并发性能</td><td>极差（单进程）</td><td>高（支持多进程 + 负载均衡）</td></tr><tr><td>静态文件</td><td>PHP 内置服务器处理（慢）</td><td>Nginx 原生处理（快）</td></tr><tr><td>可扩展性</td><td>无法扩展</td><td>支持缓存、SSL、负载均衡等</td></tr><tr><td>使用场景</td><td><strong>开发测试</strong></td><td><strong>生产环境</strong></td></tr></tbody></table><hr><p>✅ 结论：</p><ul><li><strong>开发调试</strong> → 用 <code>php artisan serve</code> 就够了。</li><li><strong>上线/压测</strong> → 必须用 <strong>Nginx + PHP-FPM</strong>（或 Apache）。</li></ul><hr><p>要不要我给你写一个 <strong>Nginx 配置示例</strong>，让你本地也可以用 Nginx 代理跑 Laravel 项目？这样你就能体验到生产环境的效果。</p><p>区别主要在于 <strong>用途</strong> 和 <strong>性能</strong>：</p><hr><h3 id="php-artisan-serve-内置服务器" tabindex="-1"><a class="header-anchor" href="#php-artisan-serve-内置服务器"><span><code>php artisan serve</code> 内置服务器</span></a></h3><ul><li><p>本质：<code>php -S</code>，PHP 自带的单进程内置 Web 服务器。</p></li><li><p>优点：一条命令就能跑起来，零配置，方便开发调试。</p></li><li><p>缺点：</p><ul><li>单进程，<strong>并发性能差</strong>（一个请求没结束，其他请求得等）。</li><li>静态文件（CSS/JS/图片）也要经过 PHP 处理，效率低。</li><li>没有反向代理、负载均衡、缓存等功能。</li><li><strong>只适合本地开发测试</strong>，不能用于生产环境。</li></ul></li></ul><hr><h3 id="nginx-php-fpm" tabindex="-1"><a class="header-anchor" href="#nginx-php-fpm"><span>Nginx + PHP-FPM</span></a></h3><ul><li><p>本质：Nginx 处理 HTTP 请求，静态资源自己直接返回；动态请求转给 PHP-FPM（FastCGI）。</p></li><li><p>优点：</p><ul><li>高性能（Nginx 可以处理成千上万并发，PHP-FPM 有多个 worker 进程）。</li><li>静态文件直接由 Nginx 处理，速度快。</li><li>支持 HTTPS、反向代理、负载均衡、缓存等高级功能。</li><li><strong>生产环境标准做法</strong>。</li></ul></li><li><p>缺点：需要配置和维护（Nginx 配置文件 + PHP-FPM 参数）。</p></li></ul><hr><h3 id="对比表" tabindex="-1"><a class="header-anchor" href="#对比表"><span>对比表</span></a></h3><table><thead><tr><th>特点</th><th><code>php artisan serve</code></th><th>Nginx + PHP-FPM</th></tr></thead><tbody><tr><td>部署难度</td><td>超简单，一条命令</td><td>需要配置</td></tr><tr><td>并发性能</td><td>差（单进程）</td><td>高（多进程 + 高并发）</td></tr><tr><td>静态文件</td><td>PHP 处理（慢）</td><td>Nginx 原生处理（快）</td></tr><tr><td>功能扩展</td><td>无</td><td>缓存、SSL、负载均衡等</td></tr><tr><td>使用场景</td><td><strong>开发调试</strong></td><td><strong>生产环境</strong></td></tr></tbody></table><hr><p>✅ 总结：</p><ul><li>开发环境：直接用 <code>php artisan serve</code>，方便快捷。</li><li>生产环境：必须用 <strong>Nginx + PHP-FPM</strong>，否则性能和稳定性都不够。</li></ul>',29)]))}const d=n(l,[["render",p],["__file","php内置服务器和通过nginx代理有什么区别.html.vue"]]),h=JSON.parse('{"path":"/content/other/spread/php%E5%86%85%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8C%E9%80%9A%E8%BF%87nginx%E4%BB%A3%E7%90%86%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","title":"php内置服务器和通过nginx代理有什么区别","lang":"en-US","frontmatter":{"sidebar":false,"title":"php内置服务器和通过nginx代理有什么区别","head":[["meta",{"name":"title","content":"php内置服务器和通过nginx代理有什么区别"}],["meta",{"name":"description","content":"php内置服务器和通过nginx代理有什么区别"}],["meta",{"name":"keywords","content":"php,nginx"}],["meta",{"property":"og:title","content":"php内置服务器和通过nginx代理有什么区别"}],["meta",{"property":"og:description","content":"php内置服务器和通过nginx代理有什么区别"}]]},"headers":[{"level":3,"title":"php内置服务器和通过nginx代理有什么区别","slug":"php内置服务器和通过nginx代理有什么区别","link":"#php内置服务器和通过nginx代理有什么区别","children":[]},{"level":3,"title":"1. Laravel 内置服务器 (php artisan serve)","slug":"_1-laravel-内置服务器-php-artisan-serve","link":"#_1-laravel-内置服务器-php-artisan-serve","children":[]},{"level":3,"title":"2. Nginx + PHP-FPM","slug":"_2-nginx-php-fpm","link":"#_2-nginx-php-fpm","children":[]},{"level":3,"title":"简单对比","slug":"简单对比","link":"#简单对比","children":[]},{"level":3,"title":"php artisan serve 内置服务器","slug":"php-artisan-serve-内置服务器","link":"#php-artisan-serve-内置服务器","children":[]},{"level":3,"title":"Nginx + PHP-FPM","slug":"nginx-php-fpm","link":"#nginx-php-fpm","children":[]},{"level":3,"title":"对比表","slug":"对比表","link":"#对比表","children":[]}],"git":{},"filePathRelative":"content/other/spread/php内置服务器和通过nginx代理有什么区别.md"}');export{d as comp,h as data};
