import{_ as s,c as a,d as e,o as i}from"./app-CHrRue27.js";const l={};function c(d,n){return i(),a("div",null,n[0]||(n[0]=[e(`<h5 id="symfony7之doctrine-yaml配置" tabindex="-1"><a class="header-anchor" href="#symfony7之doctrine-yaml配置"><span>symfony7之doctrine.yaml配置</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">doctrine:</span>
<span class="line">    dbal:</span>
<span class="line">        connections:</span>
<span class="line">            default: # 主数据库连接</span>
<span class="line">                server_version: &#39;8.0&#39;</span>
<span class="line">                url: &#39;%env(resolve:DATABASE_PRIMARY_URL)%&#39;</span>
<span class="line">                driver: pdo_mysql</span>
<span class="line">                charset: utf8mb4</span>
<span class="line">                default_table_options:</span>
<span class="line">                    collate: utf8mb4_unicode_ci</span>
<span class="line">                mapping_types:</span>
<span class="line">                    enum: string</span>
<span class="line">                schema_filter: ~^(?!(messenger_messages|migration_versions)$)~</span>
<span class="line">                replicas: # 让 SELECT 语句自动走 secondary（从库）</span>
<span class="line">                    secondary:</span>
<span class="line">                        url: &#39;%env(resolve:DATABASE_SECONDARY_URL)%&#39;</span>
<span class="line">            secondary: # 额外手动指定的从库连接</span>
<span class="line">                url: &#39;%env(resolve:DATABASE_SECONDARY_URL)%&#39;</span>
<span class="line">        default_connection: default</span>
<span class="line"></span>
<span class="line">    orm:</span>
<span class="line">        auto_generate_proxy_classes: true</span>
<span class="line">        enable_lazy_ghost_objects: true</span>
<span class="line"></span>
<span class="line">        default_entity_manager: default # 默认 entity_manager</span>
<span class="line">        entity_managers:</span>
<span class="line">            default:</span>
<span class="line">                connection: default # 绑定到 dbal.connections.default</span>
<span class="line">                mappings:</span>
<span class="line">                    App:</span>
<span class="line">                        dir: &#39;%kernel.project_dir%/src/Entity&#39;</span>
<span class="line">                        prefix: &#39;App\\Entity&#39;</span>
<span class="line">                        alias: App</span>
<span class="line">                    tree:</span>
<span class="line">                        type: attribute # or annotation or xml</span>
<span class="line">                        alias: Gedmo</span>
<span class="line">                        prefix: Gedmo\\Tree\\Entity</span>
<span class="line">                        dir: &quot;%kernel.project_dir%/vendor/gedmo/doctrine-extensions/src/Tree/Entity&quot;</span>
<span class="line">                # add qinhongpub databases so doctrine can ignore them while executing &#39;doctrine:migration:diff&#39; command</span>
<span class="line">                schema_ignore_classes:</span>
<span class="line">                    - App\\Entity\\qinhongpub\\User</span>
<span class="line">                    - App\\Entity\\qinhongpub\\Continent</span>
<span class="line">                    - App\\Entity\\qinhongpub\\Country</span>
<span class="line">                    - App\\Entity\\qinhongpub\\UserJobtype</span>
<span class="line">                    - App\\Entity\\qinhongpub\\UserMultipleEmail</span>
<span class="line">                    - App\\Entity\\qinhongpub\\UserTitle</span>
<span class="line">                    - App\\Entity\\qinhongpub\\UserWorkplace</span>
<span class="line">                    - App\\Entity\\qinhongpub\\EmailUserRel</span>
<span class="line">                    - App\\Entity\\qinhongpub\\ExchangeRate</span>
<span class="line">                dql:</span>
<span class="line">                    string_functions:</span>
<span class="line">                        concat_ws: DoctrineExtensions\\Query\\Mysql\\ConcatWs</span>
<span class="line"></span>
<span class="line">            secondary:</span>
<span class="line">                connection: secondary # 绑定 \`dbal.connections.secondary\`</span>
<span class="line">                mappings:</span>
<span class="line">                    App:</span>
<span class="line">                        dir: &#39;%kernel.project_dir%/src/Entity&#39;</span>
<span class="line">                        prefix: &#39;App\\Entity&#39;</span>
<span class="line">                        alias: App</span>
<span class="line">                    tree:</span>
<span class="line">                        type: attribute # or annotation or xml</span>
<span class="line">                        alias: Gedmo</span>
<span class="line">                        prefix: Gedmo\\Tree\\Entity</span>
<span class="line">                        dir: &quot;%kernel.project_dir%/vendor/gedmo/doctrine-extensions/src/Tree/Entity&quot;</span>
<span class="line">                dql:</span>
<span class="line">                    string_functions:</span>
<span class="line">                        concat_ws: DoctrineExtensions\\Query\\Mysql\\ConcatWs</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">先在 service.yaml下配置binbd参数</span>
<span class="line">bind:</span>
<span class="line">    $em: &quot;@doctrine.orm.default_entity_manager&quot; # _entity_manager 是一个固定的格式，通常是为了与 Doctrine 的内部约定保持一致。Doctrine 会根据配置的 entity_managers 部分的名称自动生成这些实体管理器的服务名称。如果您定义了多个实体管理器（如 default、secondary、third），Doctrine 会为每个管理器生成对应的服务名称，后缀 _entity_manager 是固定的。</span>
<span class="line">    $emSlave: &quot;@doctrine.orm.secondary_entity_manager&quot; # _entity_manager 是一个固定的格式，通常是为了与 Doctrine 的内部约定保持一致。Doctrine 会根据配置的 entity_managers 部分的名称自动生成这些实体管理器的服务名称。如果您定义了多个实体管理器（如 default、secondary、third），Doctrine 会为每个管理器生成对应的服务名称，后缀 _entity_manager 是固定的。</span>
<span class="line">    </span>
<span class="line">例子:</span>
<span class="line">use Doctrine\\ORM\\EntityManagerInterface;</span>
<span class="line"></span>
<span class="line">class MyService</span>
<span class="line">{</span>
<span class="line">    private EntityManagerInterface $em;</span>
<span class="line">    private EntityManagerInterface $emSlave;</span>
<span class="line"></span>
<span class="line">    public function __construct(EntityManagerInterface $em, EntityManagerInterface $emSlave)</span>
<span class="line">    {</span>
<span class="line">        $this-&gt;em = $em;</span>
<span class="line">        $this-&gt;emSlave = $emSlave;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function fetchData()</span>
<span class="line">    {</span>
<span class="line">        // 从主数据库查询</span>
<span class="line">        $data = $this-&gt;em-&gt;getRepository(SomeEntity::class)-&gt;findAll();</span>
<span class="line"></span>
<span class="line">        // 从从数据库查询</span>
<span class="line">        $dataSlave = $this-&gt;emSlave-&gt;getRepository(SomeEntity::class)-&gt;findAll();</span>
<span class="line"></span>
<span class="line">        return [$data, $dataSlave];</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">// 手动切换数据库连接</span>
<span class="line">use Doctrine\\ORM\\EntityManagerInterface;</span>
<span class="line">use Doctrine\\Persistence\\ManagerRegistry;</span>
<span class="line"></span>
<span class="line">class YourService</span>
<span class="line">{</span>
<span class="line">    public function __construct(</span>
<span class="line">        private readonly EntityManagerInterface $em,</span>
<span class="line">        private readonly ManagerRegistry $doctrine, // 允许手动获取不同的 EntityManager</span>
<span class="line">    ) {</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function getUserFromSlave(int $id)</span>
<span class="line">    {</span>
<span class="line">        $emSlave = $this-&gt;doctrine-&gt;getManager(&#39;secondary&#39;); // 获取 secondary EntityManager</span>
<span class="line">        return $emSlave-&gt;getRepository(User::class)-&gt;find($id);</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="分析" tabindex="-1"><a class="header-anchor" href="#分析"><span>分析</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">dbal（Database Abstraction Layer[数据库抽象层]） 和 orm（Object-Relational Mapper[ORM 映射层]） 是两个不同的部分，它们各自负责不同的任务，但相互配合使用。</span>
<span class="line"></span>
<span class="line">dbal:</span>
<span class="line">作用：</span>
<span class="line">负责管理数据库连接</span>
<span class="line">处理SQL 语句的执行</span>
<span class="line">支持多个数据库连接</span>
<span class="line">提供事务管理</span>
<span class="line"></span>
<span class="line">上面配置分析:</span>
<span class="line">dbal.connections.default</span>
<span class="line">这是主数据库连接</span>
<span class="line">replicas 让 SELECT 查询可以自动走 secondary (所以当前的配置，，默认就通过replicas实现了主从数据库操作)</span>
<span class="line"></span>
<span class="line">dbal.connections.secondary</span>
<span class="line">这是额外定义的从库连接</span>
<span class="line">主要用于手动切换 EntityManager 使用</span>
<span class="line"></span>
<span class="line">default_connection: default</span>
<span class="line">默认情况下，Doctrine 会使用 default 连接</span>
<span class="line">👉 结论：dbal 只管数据库连接，不涉及 ORM 映射</span>
<span class="line"></span>
<span class="line">orm:</span>
<span class="line">作用：</span>
<span class="line">负责实体（Entity）和数据库表的映射</span>
<span class="line">让你用 PHP 对象 而不是 SQL 语句操作数据库</span>
<span class="line">需要 EntityManager 来管理数据库操作</span>
<span class="line">支持 多个 EntityManager，每个 EntityManager 可以绑定不同的数据库连接</span>
<span class="line"></span>
<span class="line">上面配置分析:</span>
<span class="line">default_entity_manager: default</span>
<span class="line">默认 EntityManager 绑定 dbal.connections.default</span>
<span class="line"></span>
<span class="line">entity_managers.default.connection: default</span>
<span class="line">这个 EntityManager 绑定到 default（主数据库）</span>
<span class="line"></span>
<span class="line">entity_managers.secondary.connection: secondary</span>
<span class="line">这个 EntityManager 绑定到 secondary（从数据库）</span>
<span class="line"></span>
<span class="line">最终效果：</span>
<span class="line">默认 ORM 查询会自动使用 dbal.default</span>
<span class="line">如果是 SELECT 语句，Doctrine 会自动切换到 replicas.secondary</span>
<span class="line">如果是 INSERT/UPDATE/DELETE 语句，Doctrine 仍然使用 dbal.default（主库）</span>
<span class="line">如果手动指定 orm.entity_managers.secondary，那么所有操作都走 dbal.connections.secondary</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)]))}const r=s(l,[["render",c],["__file","symfony7之doctrine配置.html.vue"]]),t=JSON.parse('{"path":"/content/php/symfony/symfony7%E4%B9%8Bdoctrine%E9%85%8D%E7%BD%AE.html","title":"symfony7之doctrine配置","lang":"en-US","frontmatter":{"sidebar":false,"title":"symfony7之doctrine配置","head":[["meta",{"name":"title","content":"symfony7之doctrine配置"}],["meta",{"name":"description","content":"symfony7之doctrine配置"}],["meta",{"name":"keywords","content":"symfony7,doctrine,php"}],["meta",{"property":"og:title","content":"symfony7之doctrine配置"}],["meta",{"property":"og:description","content":"symfony7之doctrine配置"}]]},"headers":[],"git":{},"filePathRelative":"content/php/symfony/symfony7之doctrine配置.md"}');export{r as comp,t as data};
