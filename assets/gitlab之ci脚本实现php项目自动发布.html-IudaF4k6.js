import{_ as s,c as a,d as i,o as l}from"./app-CHrRue27.js";const e={};function p(d,n){return l(),a("div",null,n[0]||(n[0]=[i(`<h4 id="gitlab之ci脚本实现php项目自动发布" tabindex="-1"><a class="header-anchor" href="#gitlab之ci脚本实现php项目自动发布"><span>gitlab之ci脚本实现php项目自动发布</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">//在宿主机创建</span>
<span class="line">1.laravel项目创建, 通过命令行 composer create-project --prefer-dist laravel/laravel project_name</span>
<span class="line">$ composer create-project --prefer-dist laravel/laravel meta-known</span>
<span class="line"></span>
<span class="line">//在gitlab-runner 容器里内</span>
<span class="line">2.安装php8.3 ()</span>
<span class="line">ubuntu22下(如果是root用户，就不用sudo):</span>
<span class="line"></span>
<span class="line">添加php8.3官方源:</span>
<span class="line">sudo apt update</span>
<span class="line">sudo apt install -y software-properties-common ca-certificates lsb-release apt-transport-https</span>
<span class="line">sudo add-apt-repository ppa:ondrej/php -y</span>
<span class="line">sudo apt update</span>
<span class="line"></span>
<span class="line">安装php8.3:</span>
<span class="line">sudo apt install -y php8.3 php8.3-cli php8.3-mbstring php8.3-xml php8.3-zip php8.3-curl unzip</span>
<span class="line"></span>
<span class="line">根据需求安装拓展:</span>
<span class="line">sudo apt install -y php8.3-cli php8.3-fpm php8.3-mysql php8.3-mbstring php8.3-xml php8.3-curl php8.3-zip php8.3-bcmath php8.3-intl php8.3-gd php8.3-soap</span>
<span class="line"></span>
<span class="line">3.php -v 查看版本</span>
<span class="line"></span>
<span class="line">没有可以添加</span>
<span class="line">sudo ln -s /usr/bin/php8.3 /usr/local/bin/php</span>
<span class="line"></span>
<span class="line">再次执行</span>
<span class="line">php -v</span>
<span class="line"></span>
<span class="line">我这里安装完php,执行php -v 报：</span>
<span class="line">PHP 8.3.17 (cli) (built: Feb 15 2025 09:08:37) (NTS)</span>
<span class="line">Copyright (c) The PHP Group</span>
<span class="line">Zend Engine v4.3.17, Copyright (c) Zend Technologies</span>
<span class="line">with Zend OPcache v8.3.17, Copyright (c), by Zend Technologies</span>
<span class="line"></span>
<span class="line">说明已经做了软连接</span>
<span class="line"></span>
<span class="line">查看php指向:</span>
<span class="line"># which php</span>
<span class="line">/usr/bin/php</span>
<span class="line"></span>
<span class="line">查看具体指向:</span>
<span class="line">ls -l $(which php)</span>
<span class="line">lrwxrwxrwx 1 root root 21 Mar 12 15:20 /usr/bin/php -&gt; /etc/alternatives/php</span>
<span class="line"></span>
<span class="line">查看具体指向哪个版本:</span>
<span class="line">ls -l /etc/alternatives/php</span>
<span class="line">lrwxrwxrwx 1 root root 15 Mar 12 15:20 /etc/alternatives/php -&gt; /usr/bin/php8.3</span>
<span class="line"></span>
<span class="line">4.安装composer</span>
<span class="line">下载 Composer 安装脚本:</span>
<span class="line">curl -sS https://getcomposer.org/installer | php</span>
<span class="line"></span>
<span class="line">将 Composer 安装到全局路径： 将下载的 Composer 可执行文件移动到 /usr/local/bin，这样你可以在任何地方通过 composer 命令使用它：</span>
<span class="line">sudo mv composer.phar /usr/local/bin/composer</span>
<span class="line"></span>
<span class="line">查看版本:</span>
<span class="line">composer --version</span>
<span class="line">Composer version 2.8.6 2025-02-25 13:03:50</span>
<span class="line">PHP version 8.3.17 (/usr/bin/php8.3)</span>
<span class="line">Run the &quot;diagnose&quot; command to get more detailed diagnostics output.</span>
<span class="line"></span>
<span class="line">5.安装 rsync 工具，用于同步文件</span>
<span class="line">apt-get install -y rsync</span>
<span class="line"></span>
<span class="line">rsync --version</span>
<span class="line">rsync  version 3.1.3  protocol version 31</span>
<span class="line">Copyright (C) 1996-2018 by Andrew Tridgell, Wayne Davison, and others.</span>
<span class="line">Web site: http://rsync.samba.org/</span>
<span class="line">Capabilities:</span>
<span class="line">64-bit files, 64-bit inums, 64-bit timestamps, 64-bit long ints,</span>
<span class="line">socketpairs, hardlinks, symlinks, IPv6, batchfiles, inplace,</span>
<span class="line">append, ACLs, xattrs, iconv, symtimes, prealloc</span>
<span class="line"></span>
<span class="line">rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you</span>
<span class="line">are welcome to redistribute it under certain conditions.  See the GNU</span>
<span class="line">General Public Licence for details.</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">6.宿主机上执行:</span>
<span class="line">guoshipeng@tianyi510s:~/Documents/code/meta-known$ sudo mkdir -p /data/www/meta-known-backend-v1</span>
<span class="line"></span>
<span class="line">这里因为安装gitlab-runner的时候，没有将 宿主机的 /data 挂载到容器的 /data 上，所以这里我就直接在容器里创建 mkdir -p /data/www/meta-known-backend-v1</span>
<span class="line"></span>
<span class="line">默认有gitlab-runner用户和用户组:</span>
<span class="line">root@8446a748968a:/# chown -R gitlab-runner:gitlab-runner /data</span>
<span class="line">root@8446a748968a:/# chmod -R 775 /data</span>
<span class="line"></span>
<span class="line">但是我还是想分配给 www-data:www-data</span>
<span class="line"></span>
<span class="line">先查看www-data是否存在:</span>
<span class="line">root@8446a748968a:/# getent passwd www-data</span>
<span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span>
<span class="line">root@8446a748968a:/#</span>
<span class="line">root@8446a748968a:/#</span>
<span class="line">root@8446a748968a:/# getent group www-data</span>
<span class="line">www-data:x:33:</span>
<span class="line"></span>
<span class="line">说明 www-data 用户和用户组都存在</span>
<span class="line"></span>
<span class="line">或者直接:</span>
<span class="line">root@8446a748968a:/# id www-data</span>
<span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span>
<span class="line"></span>
<span class="line">如果不存在，先创建用户组，再创建用户，加到用户组:</span>
<span class="line">创建 www-data 组：</span>
<span class="line">sudo groupadd www-data</span>
<span class="line"></span>
<span class="line">创建 www-data 用户并加入 www-data 组：</span>
<span class="line">sudo useradd -r -g www-data -s /usr/sbin/nologin www-data</span>
<span class="line"></span>
<span class="line">解释 sudo useradd -r -g www-data -s /usr/sbin/nologin www-data：</span>
<span class="line">useradd → 添加一个新用户</span>
<span class="line">-r → 创建一个 系统用户（UID 小于 1000，一般用于守护进程）</span>
<span class="line">-g www-data → 指定主组为 www-data</span>
<span class="line">-s /usr/sbin/nologin → 让 www-data 用户无法直接登录系统</span>
<span class="line">www-data → 这个是用户名</span>
<span class="line"></span>
<span class="line">实际上可能需要sudo,但是gitlab-runner 容器默认没有装，所以需要手动安装:</span>
<span class="line">root@8446a748968a:/# apt-get update &amp;&amp; apt-get install -y sudo</span>
<span class="line"></span>
<span class="line">查看:</span>
<span class="line">root@8446a748968a:/# sudo --version</span>
<span class="line">Sudo version 1.8.31</span>
<span class="line">Configure options: --build=x86_64-linux-gnu --prefix=/usr --includedir=\${prefix}/include --mandir=\${prefix}/share/man --infodir=\${prefix}/share/info --sysconfdir=/etc --localstatedir=/var --disable-silent-rules --libdir=\${prefix}/lib/x86_64-linux-gnu --libexecdir=\${prefix}/lib/x86_64-linux-gnu --disable-maintainer-mode --disable-dependency-tracking -v --with-all-insults --with-pam --with-fqdn --with-logging=syslog --with-logfac=authpriv --with-env-editor --with-editor=/usr/bin/editor --with-exampledir=/usr/share/doc/sudo/examples --with-timeout=15 --with-password-timeout=0 --with-passprompt=[sudo] password for %p:  --without-lecture --with-tty-tickets --disable-root-mailer --enable-admin-flag --with-sendmail=/usr/sbin/sendmail --with-rundir=/run/sudo --libexecdir=/usr/lib --with-sssd --with-sssd-lib=/usr/lib/x86_64-linux-gnu --with-selinux --with-linux-audit --enable-tmpfiles.d=yes</span>
<span class="line">Sudoers policy plugin version 1.8.31</span>
<span class="line">Sudoers file grammar version 46</span>
<span class="line"></span>
<span class="line">Sudoers path: /etc/sudoers</span>
<span class="line">Authentication methods: &#39;pam&#39;</span>
<span class="line">...</span>
<span class="line">...</span>
<span class="line"></span>
<span class="line">gitlab-runner配置里面执行sudo,j结果需要密码，报:</span>
<span class="line">sudo: a terminal is required to read the password; either use the -S option to read from standard input or configure an askpass helper</span>
<span class="line"></span>
<span class="line">在gitlab-runner容器里执行:</span>
<span class="line">root@8446a748968a:/# sudo visudo</span>
<span class="line"></span>
<span class="line">然后在末端添加如下内容(修改 sudoers，允许 gitlab-runner 无密码执行 sudo):</span>
<span class="line">gitlab-runner ALL=(ALL) NOPASSWD: ALL</span>
<span class="line"></span>
<span class="line">如下:</span>
<span class="line">#</span>
<span class="line"># This file MUST be edited with the &#39;visudo&#39; command as root.</span>
<span class="line">#</span>
<span class="line"># Please consider adding local content in /etc/sudoers.d/ instead of</span>
<span class="line"># directly modifying this file.</span>
<span class="line">#</span>
<span class="line"># See the man page for details on how to write a sudoers file.</span>
<span class="line">#</span>
<span class="line">Defaults        env_reset</span>
<span class="line">Defaults        mail_badpass</span>
<span class="line">Defaults        secure_path=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin&quot;</span>
<span class="line"></span>
<span class="line"># Host alias specification</span>
<span class="line"></span>
<span class="line"># User alias specification</span>
<span class="line"></span>
<span class="line"># Cmnd alias specification</span>
<span class="line"></span>
<span class="line"># User privilege specification</span>
<span class="line">root    ALL=(ALL:ALL) ALL</span>
<span class="line"></span>
<span class="line"># Members of the admin group may gain root privileges</span>
<span class="line">%admin ALL=(ALL) ALL</span>
<span class="line"></span>
<span class="line"># Allow members of group sudo to execute any command</span>
<span class="line">%sudo   ALL=(ALL:ALL) ALL</span>
<span class="line"></span>
<span class="line"># See sudoers(5) for more information on &quot;#include&quot; directives:</span>
<span class="line"></span>
<span class="line">#includedir /etc/sudoers.d</span>
<span class="line">gitlab-runner ALL=(ALL) NOPASSWD: ALL</span>
<span class="line"></span>
<span class="line">保存退出</span>
<span class="line"></span>
<span class="line">现在gitlab-ci.yml脚本里的:</span>
<span class="line">script:</span>
<span class="line">- sudo rsync -rL --delete --exclude={&#39;.buildpath&#39;,&#39;.git&#39;,&#39;.gitignore&#39;} ./* /data/www/meta-known-backend-v1/</span>
<span class="line">- sudo chown -R www-data:www-data /data/www/meta-known-backend-v1/</span>
<span class="line"></span>
<span class="line">可以成功执行了，默认通过 gitlab-runner 用户无密码执行.</span>
<span class="line"></span>
<span class="line">分析 rsync 命令的行为:</span>
<span class="line">sudo rsync -rL --delete --exclude={&#39;.buildpath&#39;,&#39;.git&#39;,&#39;.gitignore&#39;} ./* /data/www/meta-known-backend-v1/</span>
<span class="line"></span>
<span class="line">1&gt;覆盖已有文件：rsync 会将 ./*（CI 运行目录下的所有文件）同步到 /data/www/meta-known-backend-v1/，如果目标目录已经有相同的文件，rsync 会用新文件覆盖旧文件。</span>
<span class="line">2&gt;删除目标目录中不存在的文件：--delete 选项会删除 /data/www/meta-known-backend-v1/ 中在源目录（CI 目录）中不存在的文件，确保目标目录和源目录完全一致。</span>
<span class="line">3&gt;保留排除的文件：--exclude={&#39;.buildpath&#39;,&#39;.git&#39;,&#39;.gitignore&#39;} 这些文件不会被同步（不会被上传到目标目录）。</span>
<span class="line"></span>
<span class="line">所以 /data/www/meta-known-backend-v1/ 的变化</span>
<span class="line">1&gt;新增的文件（在 CI 目录里但目标目录没有）会被添加到 /data/www/meta-known-backend-v1/。</span>
<span class="line">2&gt;已存在的文件会被覆盖为新版本。</span>
<span class="line">3&gt;目标目录中存在，但 CI 目录中已删除的文件，会被删除。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="下面以laravel12项目为例子分析" tabindex="-1"><a class="header-anchor" href="#下面以laravel12项目为例子分析"><span>下面以laravel12项目为例子分析</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1.通过命令行 composer create-project --prefer-dist laravel/laravel project_name</span>
<span class="line"></span>
<span class="line">$ composer create-project --prefer-dist laravel/laravel meta-known</span>
<span class="line"></span>
<span class="line">2.安装php8.3</span>
<span class="line"></span>
<span class="line">ubuntu22下(如果是root用户，就不用sudo):</span>
<span class="line"></span>
<span class="line">添加php8.3官方源:</span>
<span class="line">sudo apt update</span>
<span class="line">sudo apt install -y software-properties-common ca-certificates lsb-release apt-transport-https</span>
<span class="line">sudo add-apt-repository ppa:ondrej/php -y</span>
<span class="line">sudo apt update</span>
<span class="line"></span>
<span class="line">安装php8.3:</span>
<span class="line">sudo apt install -y php8.3 php8.3-cli php8.3-mbstring php8.3-xml php8.3-zip php8.3-curl unzip</span>
<span class="line"></span>
<span class="line">根据需求安装拓展:</span>
<span class="line">sudo apt install -y php8.3-cli php8.3-fpm php8.3-mysql php8.3-mbstring php8.3-xml php8.3-curl php8.3-zip php8.3-bcmath php8.3-intl php8.3-gd php8.3-soap</span>
<span class="line"></span>
<span class="line">3.php -v 查看版本</span>
<span class="line"></span>
<span class="line">没有可以添加</span>
<span class="line">sudo ln -s /usr/bin/php8.3 /usr/local/bin/php</span>
<span class="line"></span>
<span class="line">再次执行</span>
<span class="line">php -v</span>
<span class="line"></span>
<span class="line">我这里安装完php,执行php -v 报：</span>
<span class="line">PHP 8.3.17 (cli) (built: Feb 15 2025 09:08:37) (NTS)</span>
<span class="line">Copyright (c) The PHP Group</span>
<span class="line">Zend Engine v4.3.17, Copyright (c) Zend Technologies</span>
<span class="line">    with Zend OPcache v8.3.17, Copyright (c), by Zend Technologies</span>
<span class="line"></span>
<span class="line">说明已经做了软连接</span>
<span class="line"></span>
<span class="line">查看php指向:</span>
<span class="line"># which php</span>
<span class="line">/usr/bin/php</span>
<span class="line"></span>
<span class="line">查看具体指向:</span>
<span class="line">ls -l $(which php)</span>
<span class="line">lrwxrwxrwx 1 root root 21 Mar 12 15:20 /usr/bin/php -&gt; /etc/alternatives/php</span>
<span class="line"></span>
<span class="line">查看具体指向哪个版本:</span>
<span class="line">ls -l /etc/alternatives/php</span>
<span class="line">lrwxrwxrwx 1 root root 15 Mar 12 15:20 /etc/alternatives/php -&gt; /usr/bin/php8.3</span>
<span class="line"></span>
<span class="line">4.安装composer</span>
<span class="line">下载 Composer 安装脚本:</span>
<span class="line">curl -sS https://getcomposer.org/installer | php</span>
<span class="line"></span>
<span class="line">将 Composer 安装到全局路径： 将下载的 Composer 可执行文件移动到 /usr/local/bin，这样你可以在任何地方通过 composer 命令使用它：</span>
<span class="line">sudo mv composer.phar /usr/local/bin/composer</span>
<span class="line"></span>
<span class="line">查看版本:</span>
<span class="line">composer --version</span>
<span class="line">Composer version 2.8.6 2025-02-25 13:03:50</span>
<span class="line">PHP version 8.3.17 (/usr/bin/php8.3)</span>
<span class="line">Run the &quot;diagnose&quot; command to get more detailed diagnostics output.</span>
<span class="line"></span>
<span class="line">5.安装 rsync 工具，用于同步文件</span>
<span class="line">apt-get install -y rsync</span>
<span class="line"></span>
<span class="line">rsync --version</span>
<span class="line">rsync  version 3.1.3  protocol version 31</span>
<span class="line">Copyright (C) 1996-2018 by Andrew Tridgell, Wayne Davison, and others.</span>
<span class="line">Web site: http://rsync.samba.org/</span>
<span class="line">Capabilities:</span>
<span class="line">    64-bit files, 64-bit inums, 64-bit timestamps, 64-bit long ints,</span>
<span class="line">    socketpairs, hardlinks, symlinks, IPv6, batchfiles, inplace,</span>
<span class="line">    append, ACLs, xattrs, iconv, symtimes, prealloc</span>
<span class="line"></span>
<span class="line">rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you</span>
<span class="line">are welcome to redistribute it under certain conditions.  See the GNU</span>
<span class="line">General Public Licence for details.</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">6.宿主机上执行:</span>
<span class="line">guoshipeng@tianyi510s:~/Documents/code/meta-known$ sudo mkdir -p /data/www/meta-known-backend-v1</span>
<span class="line"></span>
<span class="line">这里因为安装gitlab-runner的时候，没有将 宿主机的 /data 挂载到容器的 /data 上，所以这里我就直接在容器里创建 mkdir -p /data/www/meta-known-backend-v1</span>
<span class="line"></span>
<span class="line">默认有gitlab-runner用户和用户组:</span>
<span class="line">root@8446a748968a:/# chown -R gitlab-runner:gitlab-runner /data</span>
<span class="line">root@8446a748968a:/# chmod -R 775 /data</span>
<span class="line"></span>
<span class="line">但是我还是想分配给 www-data:www-data</span>
<span class="line"></span>
<span class="line">先查看www-data是否存在:</span>
<span class="line">root@8446a748968a:/# getent passwd www-data</span>
<span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span>
<span class="line">root@8446a748968a:/# </span>
<span class="line">root@8446a748968a:/# </span>
<span class="line">root@8446a748968a:/# getent group www-data</span>
<span class="line">www-data:x:33:</span>
<span class="line"></span>
<span class="line">说明 www-data 用户和用户组都存在</span>
<span class="line"></span>
<span class="line">或者直接:</span>
<span class="line">root@8446a748968a:/# id www-data</span>
<span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span>
<span class="line"></span>
<span class="line">如果不存在，先创建用户组，再创建用户，加到用户组:</span>
<span class="line">创建 www-data 组：</span>
<span class="line">sudo groupadd www-data</span>
<span class="line"></span>
<span class="line">创建 www-data 用户并加入 www-data 组：</span>
<span class="line">sudo useradd -r -g www-data -s /usr/sbin/nologin www-data</span>
<span class="line"></span>
<span class="line">解释 sudo useradd -r -g www-data -s /usr/sbin/nologin www-data：</span>
<span class="line">useradd → 添加一个新用户</span>
<span class="line">-r → 创建一个 系统用户（UID 小于 1000，一般用于守护进程）</span>
<span class="line">-g www-data → 指定主组为 www-data</span>
<span class="line">-s /usr/sbin/nologin → 让 www-data 用户无法直接登录系统</span>
<span class="line">www-data → 这个是用户名</span>
<span class="line"></span>
<span class="line">实际上可能需要sudo,但是gitlab-runner 容器默认没有装，所以需要手动安装:</span>
<span class="line">root@8446a748968a:/# apt-get update &amp;&amp; apt-get install -y sudo</span>
<span class="line"></span>
<span class="line">查看:</span>
<span class="line">root@8446a748968a:/# sudo --version</span>
<span class="line">Sudo version 1.8.31</span>
<span class="line">Configure options: --build=x86_64-linux-gnu --prefix=/usr --includedir=\${prefix}/include --mandir=\${prefix}/share/man --infodir=\${prefix}/share/info --sysconfdir=/etc --localstatedir=/var --disable-silent-rules --libdir=\${prefix}/lib/x86_64-linux-gnu --libexecdir=\${prefix}/lib/x86_64-linux-gnu --disable-maintainer-mode --disable-dependency-tracking -v --with-all-insults --with-pam --with-fqdn --with-logging=syslog --with-logfac=authpriv --with-env-editor --with-editor=/usr/bin/editor --with-exampledir=/usr/share/doc/sudo/examples --with-timeout=15 --with-password-timeout=0 --with-passprompt=[sudo] password for %p:  --without-lecture --with-tty-tickets --disable-root-mailer --enable-admin-flag --with-sendmail=/usr/sbin/sendmail --with-rundir=/run/sudo --libexecdir=/usr/lib --with-sssd --with-sssd-lib=/usr/lib/x86_64-linux-gnu --with-selinux --with-linux-audit --enable-tmpfiles.d=yes</span>
<span class="line">Sudoers policy plugin version 1.8.31</span>
<span class="line">Sudoers file grammar version 46</span>
<span class="line"></span>
<span class="line">Sudoers path: /etc/sudoers</span>
<span class="line">Authentication methods: &#39;pam&#39;</span>
<span class="line">...</span>
<span class="line">...</span>
<span class="line"></span>
<span class="line">gitlab-runner配置里面执行sudo,j结果需要密码，报:</span>
<span class="line">sudo: a terminal is required to read the password; either use the -S option to read from standard input or configure an askpass helper</span>
<span class="line"></span>
<span class="line">在gitlab-runner容器里执行:</span>
<span class="line">root@8446a748968a:/# sudo visudo</span>
<span class="line"></span>
<span class="line">然后在末端添加如下内容(修改 sudoers，允许 gitlab-runner 无密码执行 sudo):</span>
<span class="line">gitlab-runner ALL=(ALL) NOPASSWD: ALL</span>
<span class="line"></span>
<span class="line">如下:</span>
<span class="line">#</span>
<span class="line"># This file MUST be edited with the &#39;visudo&#39; command as root.</span>
<span class="line">#</span>
<span class="line"># Please consider adding local content in /etc/sudoers.d/ instead of</span>
<span class="line"># directly modifying this file.</span>
<span class="line">#</span>
<span class="line"># See the man page for details on how to write a sudoers file.</span>
<span class="line">#</span>
<span class="line">Defaults        env_reset</span>
<span class="line">Defaults        mail_badpass</span>
<span class="line">Defaults        secure_path=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin&quot;</span>
<span class="line"></span>
<span class="line"># Host alias specification</span>
<span class="line"></span>
<span class="line"># User alias specification</span>
<span class="line"></span>
<span class="line"># Cmnd alias specification</span>
<span class="line"></span>
<span class="line"># User privilege specification</span>
<span class="line">root    ALL=(ALL:ALL) ALL</span>
<span class="line"></span>
<span class="line"># Members of the admin group may gain root privileges</span>
<span class="line">%admin ALL=(ALL) ALL</span>
<span class="line"></span>
<span class="line"># Allow members of group sudo to execute any command</span>
<span class="line">%sudo   ALL=(ALL:ALL) ALL</span>
<span class="line"></span>
<span class="line"># See sudoers(5) for more information on &quot;#include&quot; directives:</span>
<span class="line"></span>
<span class="line">#includedir /etc/sudoers.d</span>
<span class="line">gitlab-runner ALL=(ALL) NOPASSWD: ALL</span>
<span class="line"></span>
<span class="line">保存退出</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">现在gitlab-ci.yml脚本里的:</span>
<span class="line"># update the dev env on gitlab</span>
<span class="line">deploy:</span>
<span class="line">  stage: deploy</span>
<span class="line">  tags:</span>
<span class="line">    - tag1  # 使用 &quot;tag1&quot; 的 Runner</span>
<span class="line">  script:</span>
<span class="line">    - cat .env.example &gt; /tmp/.env_backup || echo &quot;No .env.example found, skipping&quot;</span>
<span class="line">    - sudo rsync -rL --delete --exclude={&#39;.buildpath&#39;,&#39;.git&#39;,&#39;.gitignore&#39;} ./* /data/www/meta-known-backend-v1/</span>
<span class="line">    - if [ ! -f /data/www/meta-known-backend-v1/.env ]; then sudo cp /tmp/.env_backup /data/www/meta-known-backend-v1/.env; fi</span>
<span class="line">    - sudo cp ./.env.dev /data/www/meta-known-backend-v1/.env</span>
<span class="line">    - sudo rm -f /tmp/.env_backup</span>
<span class="line">    - sudo chown -R www-data:www-data /data/www/meta-known-backend-v1/</span>
<span class="line">    - cd /data/www/meta-known-backend-v1 &amp;&amp; sudo -u www-data php artisan migrate --force</span>
<span class="line">  rules:</span>
<span class="line">    - if: $CI_PIPELINE_SOURCE == &#39;merge_request_event&#39;</span>
<span class="line">      when: never</span>
<span class="line">    - if: $CI_PIPELINE_SOURCE == &quot;schedule&quot;</span>
<span class="line">      when: never</span>
<span class="line">    - if: &#39;$CI_COMMIT_BRANCH == &quot;master&quot;&#39;</span>
<span class="line"></span>
<span class="line">可以成功执行了，默认通过 gitlab-runner 用户无密码执行.</span>
<span class="line"></span>
<span class="line">分析 rsync 命令的行为:</span>
<span class="line">sudo rsync -rL --delete --exclude={&#39;.buildpath&#39;,&#39;.git&#39;,&#39;.gitignore&#39;} ./* /data/www/meta-known-backend-v1/</span>
<span class="line"></span>
<span class="line">覆盖已有文件：rsync 会将 ./*（CI 运行目录下的所有文件）同步到 /data/www/meta-known-backend-v1/，如果目标目录已经有相同的文件，rsync 会用新文件覆盖旧文件。</span>
<span class="line">删除目标目录中不存在的文件：--delete 选项会删除 /data/www/meta-known-backend-v1/ 中在源目录（CI 目录）中不存在的文件，确保目标目录和源目录完全一致。</span>
<span class="line">保留排除的文件：--exclude={&#39;.buildpath&#39;,&#39;.git&#39;,&#39;.gitignore&#39;} 这些文件不会被同步（不会被上传到目标目录）。</span>
<span class="line"></span>
<span class="line">所以 /data/www/meta-known-backend-v1/ 的变化</span>
<span class="line">新增的文件（在 CI 目录里但目标目录没有）会被添加到 /data/www/meta-known-backend-v1/。</span>
<span class="line">已存在的文件会被覆盖为新版本。</span>
<span class="line">目标目录中存在，但 CI 目录中已删除的文件，会被删除。</span>
<span class="line"></span>
<span class="line">7.在gitlab-runner 安装 mysql 客户端</span>
<span class="line">apt-get update</span>
<span class="line">apt-get install mysql-client -y</span>
<span class="line"></span>
<span class="line">容器测试连接:</span>
<span class="line">root@8446a748968a:/# mysql -h laravel-dev-v2-mysql -P 3306 -u laravel -proot_pwd            </span>
<span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span>
<span class="line">ERROR 2005 (HY000): Unknown MySQL server host &#39;laravel-dev-v2-mysql&#39; (-2)</span>
<span class="line"></span>
<span class="line">通过国宿主机连接:</span>
<span class="line">root@8446a748968a:/# mysql -h 192.168.5.17 -P 3309 -u laravel -plaravel_pwd      </span>
<span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span>
<span class="line">Welcome to the MySQL monitor.  Commands end with ; or \\g.</span>
<span class="line">Your MySQL connection id is 10</span>
<span class="line">Server version: 8.0.34 MySQL Community Server - GPL</span>
<span class="line"></span>
<span class="line">Copyright (c) 2000, 2025, Oracle and/or its affiliates.</span>
<span class="line"></span>
<span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span>
<span class="line">affiliates. Other names may be trademarks of their respective</span>
<span class="line">owners.</span>
<span class="line"></span>
<span class="line">Type &#39;help;&#39; or &#39;\\h&#39; for help. Type &#39;\\c&#39; to clear the current input statement.</span>
<span class="line"></span>
<span class="line">mysql&gt; </span>
<span class="line"></span>
<span class="line"></span>
<span class="line">使用，报：</span>
<span class="line">could not find driver (Connection: mysql, SQL: select exists (select 1 from information_schema.tables where table_schema = schema() and table_name = &#39;migrations&#39; and table_type in (&#39;BASE TABLE&#39;, &#39;SYSTEM VERSIONED&#39;)) as exists)</span>
<span class="line">  at vendor/laravel/framework/src/Illuminate/Database/Connection.php:823</span>
<span class="line"></span>
<span class="line">root@8446a748968a:/# sudo apt install -y php8.3-mysql</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">在次运行, ok了</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">上面的操作，实现的是gitlab-ci下项目的rsync操作，如果/data/www 和宿主机挂载，那么接下来可以直接使用宿主机运行这个项目，这个rsync相当于实时同步了代码，但是当时启动gitlab-runner的时候，没有将/data和宿主机挂载，导致这个部署方式不能使用， </span>
<span class="line">接下来还是想基于docker部署laravel项目:</span>
<span class="line">1.项目下创建Dockerfile</span>
<span class="line"># 使用 PHP 8.3 + FPM</span>
<span class="line">FROM php:8.3-fpm</span>
<span class="line"></span>
<span class="line"># 安装必要的扩展</span>
<span class="line">RUN apt-get update &amp;&amp; apt-get install -y \\</span>
<span class="line">    unzip libpng-dev libjpeg-dev libfreetype6-dev \\</span>
<span class="line">    &amp;&amp; docker-php-ext-install pdo_mysql gd</span>
<span class="line"></span>
<span class="line"># 安装 Nginx</span>
<span class="line">RUN apt-get install -y nginx</span>
<span class="line"></span>
<span class="line"># 设置工作目录</span>
<span class="line">WORKDIR /var/www/html</span>
<span class="line"></span>
<span class="line"># 复制 Laravel 代码</span>
<span class="line">COPY . .</span>
<span class="line"></span>
<span class="line"># 安装 Composer 依赖</span>
<span class="line">RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer</span>
<span class="line">RUN composer install --no-dev --no-interaction --prefer-dist</span>
<span class="line"></span>
<span class="line"># 配置 Nginx</span>
<span class="line">COPY ./nginx/laravel.conf /etc/nginx/sites-available/default</span>
<span class="line"></span>
<span class="line"># 赋予 storage 目录权限</span>
<span class="line">RUN chmod -R 777 storage bootstrap/cache</span>
<span class="line"></span>
<span class="line"># 启动 Nginx 和 PHP-FPM</span>
<span class="line">CMD service nginx start &amp;&amp; php-fpm</span>
<span class="line"></span>
<span class="line">2.项目下创建 nginx/laravel.conf</span>
<span class="line">server {</span>
<span class="line">    listen 80;</span>
<span class="line">    server_name localhost;</span>
<span class="line"></span>
<span class="line">    root /var/www/html/public;</span>
<span class="line">    index index.php index.html index.htm;</span>
<span class="line"></span>
<span class="line">    location / {</span>
<span class="line">        try_files $uri $uri/ /index.php?$query_string;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    location ~ \\.php$ {</span>
<span class="line">        include snippets/fastcgi-php.conf;</span>
<span class="line">        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;</span>
<span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span>
<span class="line">        include fastcgi_params;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    location ~ /\\.ht {</span>
<span class="line">        deny all;</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">3.构建和运行</span>
<span class="line"># 构建 Docker 镜像</span>
<span class="line">docker build -t laravel-app .</span>
<span class="line"></span>
<span class="line"># 运行容器</span>
<span class="line">docker run -d -p 8990:80 --name my-laravel-app laravel-app</span>
<span class="line"></span>
<span class="line">此时，Nginx 将在容器的 80 端口运行，而 PHP 将通过 php-fpm 处理请求。你可以访问 http://localhost:8990 来查看 Laravel 项目。</span>
<span class="line"></span>
<span class="line">但是报nginx 错误</span>
<span class="line">然后到 my-laravel-app 容器里查看nginx错误日志:</span>
<span class="line">2025/03/18 14:47:34 [crit] 22#22: *5 connect() to unix:/var/run/php/php8.3-fpm.sock failed (2: No such file or directory) while connecting to upstream, client: 172.17.0.1, server: localhost, request: &quot;GET / HTTP/1.1&quot;, upstream: &quot;fastcgi://unix:/var/run/php/php8.3-fpm.sock:&quot;, host: &quot;localhost:8990</span>
<span class="line"></span>
<span class="line">发现 php8.3-fpm.sock 文件没有，但是 127.0.0.1:9000 端口有服务，于是修改</span>
<span class="line">fastcgi_pass 127.0.0.1:9000;</span>
<span class="line"></span>
<span class="line">然后重启nginx</span>
<span class="line"># service nginx restart</span>
<span class="line">Restarting nginx: nginx.</span>
<span class="line"></span>
<span class="line"># service nginx status </span>
<span class="line">nginx is running.</span>
<span class="line"></span>
<span class="line">再次访问 http://localhost:8990 可以访问成功</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="终极版本" tabindex="-1"><a class="header-anchor" href="#终极版本"><span>终极版本</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1.Dockerfile文件</span>
<span class="line"># 使用 PHP 8.3 + FPM</span>
<span class="line">FROM php:8.3-fpm</span>
<span class="line"></span>
<span class="line"># 安装必要的扩展</span>
<span class="line">RUN apt-get update &amp;&amp; apt-get install -y \\</span>
<span class="line">    unzip libpng-dev libjpeg-dev libfreetype6-dev vim \\</span>
<span class="line">    &amp;&amp; docker-php-ext-install pdo_mysql gd</span>
<span class="line"></span>
<span class="line"># 安装 Nginx</span>
<span class="line">RUN apt-get install -y nginx</span>
<span class="line"></span>
<span class="line"># 设置工作目录</span>
<span class="line">WORKDIR /var/www/html</span>
<span class="line"></span>
<span class="line"># 复制 Laravel 代码</span>
<span class="line">COPY . .</span>
<span class="line"></span>
<span class="line"># 复制 .env.dev 到 .env</span>
<span class="line">RUN cp .env.dev .env</span>
<span class="line"></span>
<span class="line"># 安装 Composer 依赖</span>
<span class="line">RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer</span>
<span class="line">RUN composer install --no-dev --no-interaction --prefer-dist</span>
<span class="line"></span>
<span class="line"># 生成 Laravel APP_KEY</span>
<span class="line">RUN php artisan key:generate</span>
<span class="line"></span>
<span class="line"># 配置 Nginx</span>
<span class="line">COPY ./nginx/laravel.conf /etc/nginx/sites-available/default</span>
<span class="line"></span>
<span class="line"># 赋予 storage 和 bootstrap/cache 目录权限</span>
<span class="line">RUN chown -R www-data:www-data /var/www/html \\</span>
<span class="line">    &amp;&amp; chmod -R 775 storage bootstrap/cache</span>
<span class="line"></span>
<span class="line"># 创建启动脚本，这个方式其实和我之前的效果一样，并不需要在启动nginx或者php-fpm的时候切换到www-data，需要root</span>
<span class="line">RUN echo &#39;#!/bin/bash\\nservice nginx start\\nphp-fpm&#39; &gt; /start.sh \\</span>
<span class="line">    &amp;&amp; chmod +x /start.sh</span>
<span class="line"></span>
<span class="line"># 使用启动脚本</span>
<span class="line">CMD [&quot;/start.sh&quot;]</span>
<span class="line"></span>
<span class="line">2.gitlab-ci.yml文件</span>
<span class="line">stages:</span>
<span class="line">  - build</span>
<span class="line">  - deploy</span>
<span class="line"></span>
<span class="line">variables:</span>
<span class="line">  IMAGE_NAME: &quot;meta-known-image&quot;  # 替换为你的镜像名称</span>
<span class="line">  CONTAINER_NAME: &quot;meta-known-app&quot;</span>
<span class="line">  DOCKER_REGISTRY: &quot;localhost:5000&quot;  # 替换为你的 Docker 注册表（如果使用私有仓库）</span>
<span class="line"></span>
<span class="line">before_script:</span>
<span class="line">  - echo &quot;Logging into Docker Registry...&quot;</span>
<span class="line">  - docker login -u &quot;$CI_REGISTRY_USER&quot; -p &quot;$CI_REGISTRY_PASSWORD&quot; &quot;$DOCKER_REGISTRY&quot;  # 登录 Docker 仓库</span>
<span class="line"></span>
<span class="line">build:</span>
<span class="line">  stage: build</span>
<span class="line">  tags:</span>
<span class="line">    - tag1  # 使用 &quot;tag1&quot; 的 Runner</span>
<span class="line">  script:</span>
<span class="line">    - IMAGE_TAG=$(date +%Y%m%d%H%M%S)  # 生成时间戳作为 tag</span>
<span class="line">    - docker build --rm -t $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG .</span>
<span class="line">    - docker push $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG</span>
<span class="line">    - docker tag $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG $DOCKER_REGISTRY/$IMAGE_NAME:latest</span>
<span class="line">    - docker push $DOCKER_REGISTRY/$IMAGE_NAME:latest # 推送镜像到 Docker 仓库</span>
<span class="line">  only:</span>
<span class="line">    - master  # 仅在 master 分支执行才可以u</span>
<span class="line"></span>
<span class="line">deploy:</span>
<span class="line">  stage: deploy</span>
<span class="line">  tags:</span>
<span class="line">    - tag1  # 使用 &quot;tag1&quot; 的 Runner</span>
<span class="line">  script:</span>
<span class="line">    - docker stop $CONTAINER_NAME || true  # 停止旧容器（如果存在）</span>
<span class="line">    - docker rm $CONTAINER_NAME || true  # 删除旧容器（如果存在）</span>
<span class="line">    - docker pull $DOCKER_REGISTRY/$IMAGE_NAME:latest  # 拉取最新镜像</span>
<span class="line">    - docker run -d --name $CONTAINER_NAME -p 8990:80 --restart=always $DOCKER_REGISTRY/$IMAGE_NAME:latest  # 运行容器</span>
<span class="line">  only:</span>
<span class="line">    - master  # 部署仅在 master 分支执行</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="其它命令" tabindex="-1"><a class="header-anchor" href="#其它命令"><span>其它命令</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># ps aux | grep php-fpm</span>
<span class="line">bash: ps: command not found</span>
<span class="line"></span>
<span class="line">安装ps:</span>
<span class="line">apt install procps</span>
<span class="line"></span>
<span class="line">再次查看 php-fpm:</span>
<span class="line"># ps aux | grep php-fpm</span>
<span class="line">root           1  0.0  0.0   2580  1536 ?        Ss   14:41   0:00 /bin/sh -c service nginx start &amp;&amp; php-fpm</span>
<span class="line">root          25  0.0  0.1  82528 23168 ?        Ss   14:41   0:00 php-fpm: master process (/usr/local/etc/php-fpm.conf)</span>
<span class="line">www-data      33  0.0  0.1  91248 24404 ?        S    14:41   0:00 php-fpm: pool www</span>
<span class="line">www-data      34  0.0  0.1  91184 23432 ?        S    14:41   0:00 php-fpm: pool www</span>
<span class="line">root         342  0.0  0.0   3328  1664 pts/0    S+   15:23   0:00 grep php-fpm</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"># netstat -tulnp | grep php-fpm</span>
<span class="line">bash: netstat: command not found</span>
<span class="line"></span>
<span class="line">安装netstat:</span>
<span class="line">apt update &amp;&amp; apt install -y net-tools</span>
<span class="line"></span>
<span class="line">再次查看php-fpm 端口情况：</span>
<span class="line"># netstat -tulnp | grep php-fpm</span>
<span class="line">tcp6       0      0 :::9000                 :::*                    LISTEN      25/php-fpm: master </span>
<span class="line"></span>
<span class="line"></span>
<span class="line">php-fpm 监听在 :::9000，这表示它监听的是 IPv6（tcp6）, 既然 php-fpm 监听在 9000 端口，可以修改你的 Nginx 配置，让它通过 127.0.0.1:9000 连接，而不是 Unix Socket。(前面的步骤就是这么解决问题的)</span>
<span class="line">造成这个现象的俄原因是,之前的Dockerfile的最后CMD命令操作:</span>
<span class="line"></span>
<span class="line">CMD service nginx start &amp;&amp; php-fpm</span>
<span class="line"></span>
<span class="line">会直接通过执行 php-fpm 启动PHP-FPM 进程，它会自动作为守护进程在容器内运行，等待处理 PHP 请求，而没有使用像 service 这样的服务管理工具。</span>
<span class="line"></span>
<span class="line">如果在容器下再次执行，会报错:</span>
<span class="line"># php-fpm</span>
<span class="line">[18-Mar-2025 15:51:47] NOTICE: Failed implicitly binding to ::, retrying with 0.0.0.0</span>
<span class="line">[18-Mar-2025 15:51:47] ERROR: unable to bind listening socket for address &#39;9000&#39;: Address already in use (98)</span>
<span class="line">[18-Mar-2025 15:51:47] ERROR: FPM initialization failed</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">默认配置：</span>
<span class="line">PHP-FPM 默认会监听 9000 端口。这是 PHP-FPM 配置中的默认设置。</span>
<span class="line">可以在 PHP-FPM 配置文件中调整监听方式，例如使用 Unix 套接字或 TCP 端口。常见的配置文件路径为 /etc/php/8.3/fpm/pool.d/www.conf</span>
<span class="line"></span>
<span class="line">但是在容器下，/etc/php/8.3/ 目录不存在，于是想知道php8.3-fpm被安装到哪里了</span>
<span class="line"></span>
<span class="line"># which php-fpm</span>
<span class="line">/usr/local/sbin/php-fpm</span>
<span class="line">root@e9c062a5ddf1:/etc/nginx/sites-available# </span>
<span class="line">root@e9c062a5ddf1:/etc/nginx/sites-available# php -v</span>
<span class="line">PHP 8.3.19 (cli) (built: Mar 17 2025 23:16:41) (NTS)</span>
<span class="line">Copyright (c) The PHP Group</span>
<span class="line">Zend Engine v4.3.19, Copyright (c) Zend Technologies</span>
<span class="line"></span>
<span class="line"># php -i | grep &quot;Configuration File&quot;</span>
<span class="line">Configuration File (php.ini) Path =&gt; /usr/local/etc/php</span>
<span class="line">Loaded Configuration File =&gt; (none)</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">发现php8.3-fpm的配置在(但是路径却没有php8.3-fpm)</span>
<span class="line"># cd /usr/local/etc/php-fpm.d/</span>
<span class="line">root@e9c062a5ddf1:/usr/local/etc/php-fpm.d# ls</span>
<span class="line">docker.conf  www.conf  www.conf.default  zz-docker.conf</span>
<span class="line"></span>
<span class="line">查看默认开启的是监听9000端口:</span>
<span class="line">root@e9c062a5ddf1:/usr/local/etc/php-fpm.d# vim www.conf</span>
<span class="line">listen = 127.0.0.1:9000</span>
<span class="line"></span>
<span class="line">而不是sock文件，难怪nginx不能使用sock文件了</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">还有个疑问，为什么一直不展示php8.3-fpm,而是php-fpm</span>
<span class="line"></span>
<span class="line"># php -v</span>
<span class="line">PHP 8.3.19 (cli) (built: Mar 17 2025 23:16:41) (NTS)</span>
<span class="line">Copyright (c) The PHP Group</span>
<span class="line">Zend Engine v4.3.19, Copyright (c) Zend Technologies</span>
<span class="line">root@e9c062a5ddf1:/usr/local/etc/php-fpm.d# </span>
<span class="line">root@e9c062a5ddf1:/usr/local/etc/php-fpm.d# </span>
<span class="line">root@e9c062a5ddf1:/usr/local/etc/php-fpm.d# php-fpm -v</span>
<span class="line">PHP 8.3.19 (fpm-fcgi) (built: Mar 17 2025 23:16:48)</span>
<span class="line">Copyright (c) The PHP Group</span>
<span class="line">Zend Engine v4.3.19, Copyright (c) Zend Technologies</span>
<span class="line"></span>
<span class="line">都表明，使用了php8.3-fpm</span>
<span class="line">没有显式使用 php8.3-fpm，因为在 php:8.3-fpm 镜像中，php-fpm 命令默认指向 PHP 8.3 版本的 FPM 服务，所以直接执行 php-fpm 即可启动 PHP 8.3 的 FPM 进程。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)]))}const v=s(e,[["render",p],["__file","gitlab之ci脚本实现php项目自动发布.html.vue"]]),r=JSON.parse('{"path":"/content/service/docker/gitlab%E4%B9%8Bci%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0php%E9%A1%B9%E7%9B%AE%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83.html","title":"gitlab之ci脚本实现php项目自动发布","lang":"en-US","frontmatter":{"sidebar":false,"title":"gitlab之ci脚本实现php项目自动发布","head":[["meta",{"name":"title","content":"gitlab之ci脚本实现php项目自动发布"}],["meta",{"name":"description","content":"gitlab之ci脚本实现php项目自动发布"}],["meta",{"name":"keywords","content":"gitlab,ci,自动发布"}],["meta",{"property":"og:title","content":"gitlab之ci脚本实现php项目自动发布"}],["meta",{"property":"og:description","content":"gitlab之ci脚本实现php项目自动发布"}]]},"headers":[],"git":{},"filePathRelative":"content/service/docker/gitlab之ci脚本实现php项目自动发布.md"}');export{v as comp,r as data};
