import{_ as n,c as a,d as e,o as l}from"./app-CHrRue27.js";const i={};function p(t,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h5 id="dnsmasq的使用" tabindex="-1"><a class="header-anchor" href="#dnsmasq的使用"><span>dnsmasq的使用</span></a></h5><p><code>dnsmasq</code> 是一个轻量级的 DNS 转发器和 DHCP 服务器，广泛用于小型网络、开发环境或嵌入式设备中。它配置简单、占用资源少，非常适合以下用途：</p><hr><h5 id="📌-常见用途" tabindex="-1"><a class="header-anchor" href="#📌-常见用途"><span>📌 常见用途</span></a></h5><ol><li><p><strong>DNS 缓存与转发</strong><br> 提高域名解析速度，将请求转发给上游 DNS（如 8.8.8.8）。</p></li><li><p><strong>本地域名解析</strong><br> 比如将 <code>myapp.local</code> 指向某个本地 IP（适合本地开发环境）。</p></li><li><p><strong>DHCP 服务器</strong><br> 给局域网内设备自动分配 IP 地址。</p></li><li><p><strong>PXE 网络启动、TFTP 支持</strong><br> 常用于自动化部署或嵌入式系统。</p></li></ol><hr><h5 id="✅-示例-配置本地域名解析和-dns-缓存" tabindex="-1"><a class="header-anchor" href="#✅-示例-配置本地域名解析和-dns-缓存"><span>✅ 示例：配置本地域名解析和 DNS 缓存</span></a></h5><p>假设你希望将 <code>myapp.local</code> 解析到本地服务器 IP <code>192.168.1.100</code>，并启用 DNS 缓存：</p><h5 id="etc-dnsmasq-conf-示例" tabindex="-1"><a class="header-anchor" href="#etc-dnsmasq-conf-示例"><span><code>/etc/dnsmasq.conf</code> 示例：</span></a></h5><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token comment"># 指定上游 DNS 服务器</span></span>
<span class="line"><span class="token key attr-name">server</span><span class="token punctuation">=</span><span class="token value attr-value">8.8.8.8</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启用缓存</span></span>
<span class="line"><span class="token key attr-name">cache-size</span><span class="token punctuation">=</span><span class="token value attr-value">1000</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 自定义域名解析</span></span>
<span class="line"><span class="token key attr-name">address</span><span class="token punctuation">=</span><span class="token value attr-value">/myapp.local/192.168.1.100</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h5 id="✅-示例-同时启用-dhcp" tabindex="-1"><a class="header-anchor" href="#✅-示例-同时启用-dhcp"><span>✅ 示例：同时启用 DHCP</span></a></h5><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token comment"># 设置 DHCP 范围</span></span>
<span class="line"><span class="token key attr-name">dhcp-range</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.1.50,192.168.1.150,12h</span></span>
<span class="line"></span>
<span class="line">同时启用 DHCP 的作用，可以为局域网内的设备分配IP，要让这个配置生效，可以通过如下步骤实现:</span>
<span class="line">1.用网线（或热点）把其他设备连接到你电脑（桥接或共享网络）</span>
<span class="line">2.禁用局域网中其他 DHCP（如路由器 DHCP）</span>
<span class="line">3.动你电脑的 dnsmasq，分配 IP（如 192.168.1.50~150）</span>
<span class="line">4.其他设备会自动获得 IP 并使用你的电脑作为 DNS / 网关</span>
<span class="line"></span>
<span class="line">如果只是想测试一下 dnsmasq 的 DHCP 功能，可以这样：</span>
<span class="line">使用笔记本 → 开热点 → 运行 dnsmasq → 其他设备连接这个热点</span>
<span class="line">1.用 Linux 笔记本开 Wi-Fi 热点（或者 USB 网络共享）</span>
<span class="line">2.设置热点子网为如 192.168.8.1</span>
<span class="line">3.在热点网卡上启用 dnsmasq，配置为：</span>
<span class="line"><span class="token key attr-name">interface</span><span class="token punctuation">=</span><span class="token value attr-value">wlp3s0   # ← 你开启热点的那个网卡</span></span>
<span class="line"><span class="token key attr-name">dhcp-range</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.8.50,192.168.8.150,12h</span></span>
<span class="line"><span class="token key attr-name">dhcp-option</span><span class="token punctuation">=</span><span class="token value attr-value">3,192.168.8.1       # 默认网关</span></span>
<span class="line"><span class="token key attr-name">dhcp-option</span><span class="token punctuation">=</span><span class="token value attr-value">6,192.168.8.1       # DNS</span></span>
<span class="line">4.手机、电脑连上你的热点后，会自动分配 IP，并能通过你电脑访问自建服务。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h5 id="启动服务-在-linux-上" tabindex="-1"><a class="header-anchor" href="#启动服务-在-linux-上"><span>启动服务（在 Linux 上）</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> systemctl start dnsmasq</span>
<span class="line"><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> dnsmasq</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>或者使用 Docker 启动（如果不想改本机配置）：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-p</span> <span class="token number">53</span>:53/udp --cap-add<span class="token operator">=</span>NET_ADMIN <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>/dnsmasq.conf:/etc/dnsmasq.conf <span class="token punctuation">\\</span> <span class="token comment"># 可以现在本地定义好\`dnsmasq\`的配置文件, 然后挂载</span></span>
<span class="line">  andyshinn/dnsmasq</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,19)]))}const d=n(i,[["render",p],["__file","dnsmasq的使用.html.vue"]]),r=JSON.parse('{"path":"/content/other/spread/dnsmasq%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"dnsmasq的使用","lang":"en-US","frontmatter":{"sidebar":false,"title":"dnsmasq的使用","head":[["meta",{"name":"title","content":"dnsmasq的使用"}],["meta",{"name":"description","content":"dnsmasq的使用"}],["meta",{"name":"keywords","content":"dnsmasq,dns,dhcp"}],["meta",{"property":"og:title","content":"dnsmasq的使用"}],["meta",{"property":"og:description","content":"dnsmasq的使用"}]]},"headers":[],"git":{},"filePathRelative":"content/other/spread/dnsmasq的使用.md"}');export{d as comp,r as data};
