import{_ as a,c as s,d as n,o as i}from"./app-CHrRue27.js";const l={};function p(t,e){return i(),s("div",null,e[0]||(e[0]=[n(`<h5 id="docker下安装php的imagick拓展" tabindex="-1"><a class="header-anchor" href="#docker下安装php的imagick拓展"><span>docker下安装php的imagick拓展</span></a></h5><h5 id="_1-刚开始是这么安装的" tabindex="-1"><a class="header-anchor" href="#_1-刚开始是这么安装的"><span><strong>1.刚开始是这么安装的</strong></span></a></h5><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line"><span class="token instruction"><span class="token keyword">RUN</span> apt-get install -y <span class="token operator">\\</span></span>
<span class="line">        libxslt1-dev <span class="token operator">\\</span></span>
<span class="line">        imagick <span class="token operator">\\</span></span>
<span class="line">    &amp;&amp; docker-php-ext-install xsl <span class="token operator">\\</span></span>
<span class="line">    &amp;&amp; docker-php-ext-install bcmath <span class="token operator">\\</span></span>
<span class="line">    &amp;&amp; docker-php-ext-install imagick</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-这个写法分析" tabindex="-1"><a class="header-anchor" href="#_2-这个写法分析"><span><strong>2.这个写法分析</strong></span></a></h5><h5 id="这个写法的问题在于" tabindex="-1"><a class="header-anchor" href="#这个写法的问题在于"><span>这个写法的问题在于：</span></a></h5><p><code>docker-php-ext-install imagick</code> 是无效的，因为 <strong><code>imagick</code> 并不是 PHP 自带的扩展</strong>，而是一个通过 <strong>PECL</strong> 安装的扩展。 <code>docker-php-ext-install</code> 只能安装 <strong>PHP 官方内置的扩展</strong>（比如 <code>xsl</code>、<code>bcmath</code>、<code>pdo_mysql</code> 等）。</p><hr><h5 id="正确写法应该是" tabindex="-1"><a class="header-anchor" href="#正确写法应该是"><span>正确写法应该是</span></a></h5><p>（基于 Debian 系的官方 PHP 镜像）</p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line"><span class="token instruction"><span class="token keyword">RUN</span> apt-get update &amp;&amp; apt-get install -y <span class="token operator">\\</span></span>
<span class="line">        libxslt1-dev <span class="token operator">\\</span></span>
<span class="line">        libmagickwand-dev --no-install-recommends <span class="token operator">\\</span></span>
<span class="line">    &amp;&amp; docker-php-ext-install xsl <span class="token operator">\\</span></span>
<span class="line">    &amp;&amp; docker-php-ext-install bcmath <span class="token operator">\\</span></span>
<span class="line">    &amp;&amp; pecl install imagick <span class="token operator">\\</span></span>
<span class="line">    &amp;&amp; docker-php-ext-enable imagick <span class="token operator">\\</span></span>
<span class="line">    &amp;&amp; rm -rf /var/lib/apt/lists/*</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h5 id="关键点" tabindex="-1"><a class="header-anchor" href="#关键点"><span>关键点</span></a></h5><ol><li><strong>系统库安装</strong></li></ol><ul><li><code>libmagickwand-dev</code> 是 Imagick 必需的头文件和库。</li><li>不要直接装 <code>imagick</code> 这个 apt 包，因为那是系统的 CLI 工具或旧版扩展，不一定适配 PHP 版本。</li></ul><ol start="2"><li><strong>PECL 安装</strong></li></ol><ul><li><code>pecl install imagick</code> 会从官方源下载编译 PHP Imagick 扩展。</li></ul><ol start="3"><li><strong>启用扩展</strong></li></ol><ul><li><code>docker-php-ext-enable imagick</code> 会在 <code>php.ini</code> 里注册它。</li></ul><ol start="4"><li>对于 PHP 自带的内置扩展，如果它需要依赖，就先 <strong>apt-get install</strong> 对应的系统库，然后 <strong>docker-php-ext-install xxx</strong></li></ol><hr><h5 id="_3-apt-get-install-和-docker-php-ext-install-关系" tabindex="-1"><a class="header-anchor" href="#_3-apt-get-install-和-docker-php-ext-install-关系"><span><strong>3.apt-get install 和 docker-php-ext-install 关系</strong></span></a></h5><p>它们的关系其实可以这么理解：</p><hr><h5 id="_1️⃣-角色不同" tabindex="-1"><a class="header-anchor" href="#_1️⃣-角色不同"><span>1️⃣ 角色不同</span></a></h5><ul><li><p><strong><code>apt-get install</code></strong> 安装的是<strong>系统级软件包</strong>（包括编译 PHP 扩展时需要的头文件和库文件）。</p><ul><li>来源：Debian/Ubuntu 系统的 APT 软件仓库</li><li>作用：提供 PHP 扩展编译时的依赖环境（例如 <code>.h</code> 头文件、<code>.so</code> 动态库等）</li></ul></li><li><p><strong><code>docker-php-ext-install</code></strong> 安装的是 <strong>PHP 自带的内置扩展</strong>（<code>ext/</code> 目录里的源码），它会调用 <code>docker-php-source</code> + <code>docker-php-ext-configure</code> + <code>docker-php-ext-install</code> 的组合脚本去编译这些扩展。</p><ul><li>来源：PHP 官方 Docker 镜像自带的源码</li><li>作用：在已有的系统依赖支持下，把扩展编译成 <code>.so</code> 并在 PHP 里启用</li></ul></li></ul><hr><h5 id="_2️⃣-依赖关系" tabindex="-1"><a class="header-anchor" href="#_2️⃣-依赖关系"><span>2️⃣ 依赖关系</span></a></h5><p>很多内置扩展并不是“裸装”就能编译成功，它们会用到系统级的库。 这时：</p><ol><li><code>apt-get install</code> 装好依赖</li><li><code>docker-php-ext-install</code> 编译安装扩展</li></ol><p>举个例子：</p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line"><span class="token instruction"><span class="token keyword">RUN</span> apt-get update &amp;&amp; apt-get install -y <span class="token operator">\\</span></span>
<span class="line">    libxslt1-dev <span class="token operator">\\</span></span>
<span class="line">    libzip-dev <span class="token operator">\\</span></span>
<span class="line"> &amp;&amp; docker-php-ext-install xsl zip</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>流程是：</p><ul><li><code>apt-get install libxslt1-dev libzip-dev</code> → 安装系统库和头文件</li><li><code>docker-php-ext-install xsl zip</code> → 编译 xsl 和 zip 扩展（依赖上一步装的库）</li></ul><hr><h5 id="_3️⃣-什么时候不需要-apt-get-install" tabindex="-1"><a class="header-anchor" href="#_3️⃣-什么时候不需要-apt-get-install"><span>3️⃣ 什么时候不需要 <code>apt-get install</code></span></a></h5><ul><li><p>扩展完全不依赖系统库（例如 <code>bcmath</code>、<code>mysqli</code>）：</p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line"><span class="token instruction"><span class="token keyword">RUN</span> docker-php-ext-install bcmath mysqli</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><hr><h5 id="_4️⃣-什么时候用不到-docker-php-ext-install" tabindex="-1"><a class="header-anchor" href="#_4️⃣-什么时候用不到-docker-php-ext-install"><span>4️⃣ 什么时候用不到 <code>docker-php-ext-install</code></span></a></h5><ul><li><p>如果是 <strong>PECL 扩展</strong>（imagick、redis、xdebug 等），它们不在 PHP 内置源码里，需要用：</p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line"><span class="token instruction"><span class="token keyword">RUN</span> apt-get install -y libmagickwand-dev <span class="token operator">\\</span></span>
<span class="line"> &amp;&amp; pecl install imagick <span class="token operator">\\</span></span>
<span class="line"> &amp;&amp; docker-php-ext-enable imagick</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里就不走 <code>docker-php-ext-install</code> 了。</p></li></ul><hr><p>✅ 总结一句： <code>apt-get install</code> 是“买原材料”，<code>docker-php-ext-install</code> 是“用这些材料把 PHP 扩展做出来并装进 PHP 里”。 没有材料就做不出来，有材料但不去做，PHP 里也不会有这个扩展。</p><hr><h5 id="_4-上面的配置好了-但是实际运行中会有如下报错" tabindex="-1"><a class="header-anchor" href="#_4-上面的配置好了-但是实际运行中会有如下报错"><span><strong>4.上面的配置好了，但是实际运行中会有如下报错</strong></span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&gt; [php  2/11] RUN apt-get update &amp;&amp; apt-get install -y         libxslt1-dev         libmagickwand-dev --no-install-recommends     &amp;&amp; docker-php-ext-install xsl     &amp;&amp; docker-php-ext-install bcmath     &amp;&amp; pecl install imagick     &amp;&amp; docker-php-ext-enable imagick:                                                                                                                                                               </span>
<span class="line">0.524 Ign:1 http://deb.debian.org/debian buster InRelease                                                                                                                                                          </span>
<span class="line">0.589 Ign:2 http://deb.debian.org/debian-security buster/updates InRelease                                                                                                                                         </span>
<span class="line">0.661 Ign:3 http://deb.debian.org/debian buster-updates InRelease                                                                                                                                                  </span>
<span class="line">0.724 Err:4 http://deb.debian.org/debian buster Release</span>
<span class="line">0.724   404  Not Found [IP: 151.101.90.132 80]</span>
<span class="line">0.787 Err:5 http://deb.debian.org/debian-security buster/updates Release</span>
<span class="line">0.787   404  Not Found [IP: 151.101.90.132 80]</span>
<span class="line">0.852 Err:6 http://deb.debian.org/debian buster-updates Release</span>
<span class="line">0.852   404  Not Found [IP: 151.101.90.132 80]</span>
<span class="line">0.860 Reading package lists...</span>
<span class="line">1.425 E: The repository &#39;http://deb.debian.org/debian buster Release&#39; no longer has a Release file.</span>
<span class="line">1.425 E: The repository &#39;http://deb.debian.org/debian-security buster/updates Release&#39; no longer has a Release file.</span>
<span class="line">1.425 E: The repository &#39;http://deb.debian.org/debian buster-updates Release&#39; no longer has a Release file.</span>
<span class="line">------</span>
<span class="line">failed to solve: process &quot;/bin/sh -c apt-get update &amp;&amp; apt-get install -y         libxslt1-dev         libmagickwand-dev --no-install-recommends     &amp;&amp; docker-php-ext-install xsl     &amp;&amp; docker-php-ext-install bcmath     &amp;&amp; pecl install imagick     &amp;&amp; docker-php-ext-enable imagick&quot; did not complete successfully: exit code: 100</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>出现问题原因分析 <ul><li>和imagick 安装无关，根本原因是你的 PHP Docker 镜像基于 Debian buster，而 buster 已经 停止维护（EOL）， 官方的 APT 仓库被移到了归档站，所以 apt-get update 会直接 404。</li><li>对于我这里的原因是: 我使用了自建的php镜像源，但是这个镜像里对于php景象的依赖是Debian buster, 所以现在有如下解决方案 <ul><li>1.改成归档源<div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line"><span class="token instruction"><span class="token keyword">RUN</span> sed -i <span class="token string">&#39;s|deb.debian.org|archive.debian.org|g&#39;</span> /etc/apt/sources.list <span class="token operator">\\</span></span>
<span class="line">&amp;&amp; sed -i <span class="token string">&#39;/security.debian.org/d&#39;</span> /etc/apt/sources.list <span class="token operator">\\</span></span>
<span class="line">&amp;&amp; apt-get update <span class="token operator">\\</span></span>
<span class="line">&amp;&amp; apt-get install -y <span class="token operator">\\</span></span>
<span class="line">libxslt1-dev <span class="token operator">\\</span></span>
<span class="line">libmagickwand-dev --no-install-recommends <span class="token operator">\\</span></span>
<span class="line">&amp;&amp; docker-php-ext-install xsl <span class="token operator">\\</span></span>
<span class="line">&amp;&amp; docker-php-ext-install bcmath <span class="token operator">\\</span></span>
<span class="line">&amp;&amp; pecl install imagick <span class="token operator">\\</span></span>
<span class="line">&amp;&amp; docker-php-ext-enable imagick <span class="token operator">\\</span></span>
<span class="line">&amp;&amp; rm -rf /var/lib/apt/lists/*</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><code>部分配置分析:</code><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">  sed -i &#39;s|deb.debian.org|archive.debian.org|g&#39; /etc/apt/sources.list</span>
<span class="line">  sed -i &#39;/security.debian.org/d&#39; /etc/apt/sources.list</span>
<span class="line">  apt-get update</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><code>这三条命令的作用是修改 Debian 系统的 APT 软件源配置，让系统从归档（archive）服务器下载旧版本的软件包，解决官方源因为版本停止维护而导致的 404 错误。具体解释如下：</code><ol><li><code>sed -i &#39;s|deb.debian.org|archive.debian.org|g&#39; /etc/apt/sources.list</code></li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"> sed 是文本替换命令，-i 表示直接修改文件。</span>
<span class="line"> 作用：把 /etc/apt/sources.list 文件中所有 deb.debian.org 的字符串替换成 archive.debian.org。</span>
<span class="line"> 为什么要替换？</span>
<span class="line">   deb.debian.org 是 Debian 正常的软件仓库地址，但对于停止维护的旧版本，它会被移除包，访问会 404。</span>
<span class="line">   archive.debian.org 是 Debian 的归档仓库，保留了旧版本的完整包。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>sed -i &#39;/security.debian.org/d&#39; /etc/apt/sources.list</code><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">作用：删除 /etc/apt/sources.list 文件中包含 security.debian.org 的所有行。</span>
<span class="line">为什么要删除？</span>
<span class="line">  Debian 的安全更新源 security.debian.org 对旧版本（比如 buster）已经停止服务，访问会 404。</span>
<span class="line">  删除后防止 apt-get update 报错。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>apt-get update</code><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">执行更新软件包索引，重新加载修改后的源列表。</span>
<span class="line">这一步能成功，说明之前的替换和删除操作正确，APT 能够从归档服务器正常拉取软件包索引。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li>2.从镜像源头升级 <blockquote><p>如果能改这个私有镜像的构建方式，建议让它基于 php:8.3-fpm-bullseye 或 php:8.3-fpm-bookworm， 这样 apt 源是活的，不需要 archive 站。这个是最好的方式，这样所有使用这个自定义源的都可以生效</p></blockquote></li></ul></li></ul></li></ul>`,45)]))}const c=a(l,[["render",p],["__file","docker下安装php的imagick拓展.html.vue"]]),r=JSON.parse('{"path":"/content/php/base/docker%E4%B8%8B%E5%AE%89%E8%A3%85php%E7%9A%84imagick%E6%8B%93%E5%B1%95.html","title":"docker下安装php的imagick拓展","lang":"en-US","frontmatter":{"sidebar":false,"title":"docker下安装php的imagick拓展","head":[["meta",{"name":"title","content":"docker下安装php的imagick拓展"}],["meta",{"name":"description","content":"docker下安装php的imagick拓展"}],["meta",{"name":"keywords","content":"php,imagick"}],["meta",{"property":"og:title","content":"docker下安装php的imagick拓展"}],["meta",{"property":"og:description","content":"docker下安装php的imagick拓展"}]]},"headers":[],"git":{},"filePathRelative":"content/php/base/docker下安装php的imagick拓展.md"}');export{c as comp,r as data};
