import{_ as e,c as n,d as l,o as r}from"./app-CHrRue27.js";const a={};function i(d,t){return r(),n("div",null,t[0]||(t[0]=[l('<table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">零值</th></tr></thead><tbody><tr><td style="text-align:center;">数值类型(int、float等)</td><td style="text-align:center;">0</td></tr><tr><td style="text-align:center;">bool</td><td style="text-align:center;">false</td></tr><tr><td style="text-align:center;">string</td><td style="text-align:center;">&quot;&quot;(空字符串)</td></tr><tr><td style="text-align:center;">struct</td><td style="text-align:center;">内部字段的零值</td></tr><tr><td style="text-align:center;">slice</td><td style="text-align:center;">nil</td></tr><tr><td style="text-align:center;">map</td><td style="text-align:center;">nil</td></tr><tr><td style="text-align:center;">指针</td><td style="text-align:center;">nil</td></tr><tr><td style="text-align:center;">函数</td><td style="text-align:center;">nil</td></tr><tr><td style="text-align:center;">chan</td><td style="text-align:center;">nil</td></tr><tr><td style="text-align:center;">interface</td><td style="text-align:center;">nil</td></tr></tbody></table><p>这个有什么用，主要用处就是 初始化变量的时候夫默认值： 如下： // 这个会报错：Cannot assign nil without the explicit type var a = nil</p><p>// 这个没问题 var a interface{} = nil</p><p>// 这个会报错：Cannot use &#39;nil&#39; as the type string var a string = nil</p><p>// 这个没问题 var a error = nil</p><p>fmt.Println(&quot;a is:&quot;, a)</p>',6)]))}const c=e(a,[["render",i],["__file","golang之数据类型对应的零值.html.vue"]]),g=JSON.parse('{"path":"/content/go/base/golang%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%AF%B9%E5%BA%94%E7%9A%84%E9%9B%B6%E5%80%BC.html","title":"golang之数据类型对应的零值","lang":"en-US","frontmatter":{"sidebar":false,"title":"golang之数据类型对应的零值","description":"golang之数据类型对应的零值"},"headers":[],"git":{},"filePathRelative":"content/go/base/golang之数据类型对应的零值.md"}');export{c as comp,g as data};
