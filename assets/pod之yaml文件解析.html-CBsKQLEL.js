import{_ as t,c as l,d as c,a as s,o,r as a}from"./app-CHrRue27.js";const i={};function u(k,n){const e=a("BackBtn"),p=a("CommentService");return o(),l("div",null,[n[0]||(n[0]=c(`<p>pod之yaml文件解析</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1       <span class="token comment">#必选，版本号，例如v1</span></span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod       <span class="token comment">#必选，Pod</span></span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span>       <span class="token comment">#必选，元数据</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> string       <span class="token comment">#必选，Pod名称</span></span>
<span class="line">  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> string    <span class="token comment">#必选，Pod所属的命名空间</span></span>
<span class="line">  <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token comment">#自定义标签</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> string     <span class="token comment">#自定义标签名字</span></span>
<span class="line">  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>       <span class="token comment">#自定义注释列表</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> string</span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span>         <span class="token comment">#必选，Pod中容器的详细定义</span></span>
<span class="line">  <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token comment">#必选，Pod中容器列表</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> string     <span class="token comment">#必选，容器名称</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> string    <span class="token comment">#必选，容器的镜像名称</span></span>
<span class="line">    <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>Always <span class="token punctuation">|</span> Never <span class="token punctuation">|</span> IfNotPresent<span class="token punctuation">]</span> <span class="token comment">#获取镜像的策略 Alawys表示下载镜像 IfnotPresent表示优先使用本地镜像，否则下载镜像，Nerver表示仅使用本地镜像</span></span>
<span class="line">    <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>string<span class="token punctuation">]</span>    <span class="token comment">#容器的启动命令列表，如不指定，使用打包时使用的启动命令</span></span>
<span class="line">    <span class="token key atrule">args</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>string<span class="token punctuation">]</span>     <span class="token comment">#容器的启动命令参数列表</span></span>
<span class="line">    <span class="token key atrule">workingDir</span><span class="token punctuation">:</span> string     <span class="token comment">#容器的工作目录</span></span>
<span class="line">    <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>    <span class="token comment">#挂载到容器内部的存储卷配置</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> string     <span class="token comment">#引用pod定义的共享存储卷的名称，需用volumes[]部分定义的的卷名</span></span>
<span class="line">      <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> string    <span class="token comment">#存储卷在容器内mount的绝对路径，应少于512字符</span></span>
<span class="line">      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> boolean    <span class="token comment">#是否为只读模式</span></span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span>       <span class="token comment">#需要暴露的端口库号列表</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> string     <span class="token comment">#端口号名称</span></span>
<span class="line">      <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> int   <span class="token comment">#容器需要监听的端口号</span></span>
<span class="line">      <span class="token key atrule">hostPort</span><span class="token punctuation">:</span> int    <span class="token comment">#容器所在主机需要监听的端口号，默认与Container相同</span></span>
<span class="line">      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> string     <span class="token comment">#端口协议，支持TCP和UDP，默认TCP</span></span>
<span class="line">    <span class="token key atrule">env</span><span class="token punctuation">:</span>       <span class="token comment">#容器运行前需设置的环境变量列表</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> string     <span class="token comment">#环境变量名称</span></span>
<span class="line">      <span class="token key atrule">value</span><span class="token punctuation">:</span> string    <span class="token comment">#环境变量的值</span></span>
<span class="line">    <span class="token key atrule">resources</span><span class="token punctuation">:</span>       <span class="token comment">#资源限制和请求的设置</span></span>
<span class="line">      <span class="token key atrule">limits</span><span class="token punctuation">:</span>      <span class="token comment">#资源限制的设置</span></span>
<span class="line">        <span class="token key atrule">cpu</span><span class="token punctuation">:</span> string    <span class="token comment">#Cpu的限制，单位为core数，将用于docker run --cpu-shares参数</span></span>
<span class="line">        <span class="token key atrule">memory</span><span class="token punctuation">:</span> string     <span class="token comment">#内存限制，单位可以为Mib/Gib，将用于docker run --memory参数</span></span>
<span class="line">      <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token comment">#资源请求的设置</span></span>
<span class="line">        <span class="token key atrule">cpu</span><span class="token punctuation">:</span> string    <span class="token comment">#Cpu请求，容器启动的初始可用数量</span></span>
<span class="line">        <span class="token key atrule">memory</span><span class="token punctuation">:</span> string     <span class="token comment">#内存清楚，容器启动的初始可用数量</span></span>
<span class="line">    <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>     <span class="token comment">#对Pod内个容器健康检查的设置，当探测无响应几次后将自动重启该容器，检查方法有exec、httpGet和tcpSocket，对一个容器只需设置其中一种方法即可</span></span>
<span class="line">      <span class="token key atrule">exec</span><span class="token punctuation">:</span>      <span class="token comment">#对Pod容器内检查方式设置为exec方式</span></span>
<span class="line">        <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>string<span class="token punctuation">]</span>  <span class="token comment">#exec方式需要制定的命令或脚本</span></span>
<span class="line">      <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>       <span class="token comment">#对Pod内个容器健康检查方法设置为HttpGet，需要制定Path、port</span></span>
<span class="line">        <span class="token key atrule">path</span><span class="token punctuation">:</span> string</span>
<span class="line">        <span class="token key atrule">port</span><span class="token punctuation">:</span> number</span>
<span class="line">        <span class="token key atrule">host</span><span class="token punctuation">:</span> string</span>
<span class="line">        <span class="token key atrule">scheme</span><span class="token punctuation">:</span> string</span>
<span class="line">        <span class="token key atrule">HttpHeaders</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> string</span>
<span class="line">          <span class="token key atrule">value</span><span class="token punctuation">:</span> string</span>
<span class="line">      <span class="token key atrule">tcpSocket</span><span class="token punctuation">:</span>     <span class="token comment">#对Pod内个容器健康检查方式设置为tcpSocket方式</span></span>
<span class="line">         <span class="token key atrule">port</span><span class="token punctuation">:</span> number</span>
<span class="line">       <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token comment">#容器启动完成后首次探测的时间，单位为秒</span></span>
<span class="line">       <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">0</span>   <span class="token comment">#对容器健康检查探测等待响应的超时时间，单位秒，默认1秒</span></span>
<span class="line">       <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">0</span>    <span class="token comment">#对容器监控检查的定期探测时间设置，单位秒，默认10秒一次</span></span>
<span class="line">       <span class="token key atrule">successThreshold</span><span class="token punctuation">:</span> <span class="token number">0</span></span>
<span class="line">       <span class="token key atrule">failureThreshold</span><span class="token punctuation">:</span> <span class="token number">0</span></span>
<span class="line">       <span class="token key atrule">securityContext</span><span class="token punctuation">:</span></span>
<span class="line">         privileged<span class="token punctuation">:</span><span class="token boolean important">false</span></span>
<span class="line">    <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>Always <span class="token punctuation">|</span> Never <span class="token punctuation">|</span> OnFailure<span class="token punctuation">]</span><span class="token comment">#Pod的重启策略，Always表示一旦不管以何种方式终止运行，kubelet都将重启，OnFailure表示只有Pod以非0退出码退出才重启，Nerver表示不再重启该Pod</span></span>
<span class="line">    <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span> obeject  <span class="token comment">#设置NodeSelector表示将该Pod调度到包含这个label的node上，以key：value的格式指定</span></span>
<span class="line">    <span class="token key atrule">imagePullSecrets</span><span class="token punctuation">:</span>    <span class="token comment">#Pull镜像时使用的secret名称，以key：secretkey格式指定</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> string</span>
<span class="line">    hostNetwork<span class="token punctuation">:</span><span class="token boolean important">false</span>      <span class="token comment">#是否使用主机网络模式，默认为false，如果设置为true，表示使用宿主机网络</span></span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>       <span class="token comment">#在该pod上定义共享存储卷列表</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> string     <span class="token comment">#共享存储卷名称 （volumes类型有很多种）</span></span>
<span class="line">      <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>     <span class="token comment">#类型为emtyDir的存储卷，与Pod同生命周期的一个临时目录。为空值</span></span>
<span class="line">      <span class="token key atrule">hostPath</span><span class="token punctuation">:</span> string     <span class="token comment">#类型为hostPath的存储卷，表示挂载Pod所在宿主机的目录</span></span>
<span class="line">        <span class="token key atrule">path</span><span class="token punctuation">:</span> string     <span class="token comment">#Pod所在宿主机的目录，将被用于同期中mount的目录</span></span>
<span class="line">      <span class="token key atrule">secret</span><span class="token punctuation">:</span>      <span class="token comment">#类型为secret的存储卷，挂载集群与定义的secre对象到容器内部</span></span>
<span class="line">        <span class="token key atrule">scretname</span><span class="token punctuation">:</span> string</span>
<span class="line">        <span class="token key atrule">items</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> string</span>
<span class="line">          <span class="token key atrule">path</span><span class="token punctuation">:</span> string</span>
<span class="line">      <span class="token key atrule">configMap</span><span class="token punctuation">:</span>     <span class="token comment">#类型为configMap的存储卷，挂载预定义的configMap对象到容器内部</span></span>
<span class="line">        <span class="token key atrule">name</span><span class="token punctuation">:</span> string</span>
<span class="line">        <span class="token key atrule">items</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> string</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),s(e),s(p)])}const m=t(i,[["render",u],["__file","pod之yaml文件解析.html.vue"]]),d=JSON.parse('{"path":"/content/service/k8s/pod%E4%B9%8Byaml%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90.html","title":"pod之yaml文件解析","lang":"en-US","frontmatter":{"sidebar":false,"title":"pod之yaml文件解析","description":"pod之yaml文件解析"},"headers":[],"git":{},"filePathRelative":"content/service/k8s/pod之yaml文件解析.md"}');export{m as comp,d as data};
