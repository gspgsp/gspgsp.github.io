import{_ as n,c as a,d as s,o as t}from"./app-CHrRue27.js";const l={};function i(d,e){return t(),a("div",null,e[0]||(e[0]=[s(`<h5 id="npm包名前带-和不带-的区别" tabindex="-1"><a class="header-anchor" href="#npm包名前带-和不带-的区别"><span>npm包名前带@和不带@的区别</span></a></h5><p>在 npm 中，包名前带 <code>@</code> 和不带 <code>@</code> 的区别如下：</p><hr><h3 id="✅-1-带-符号的包-作用域包-scoped-package" tabindex="-1"><a class="header-anchor" href="#✅-1-带-符号的包-作用域包-scoped-package"><span>✅ 1. 带 <code>@</code> 符号的包（作用域包 Scoped Package）</span></a></h3><p>格式：<code>@scope/package-name</code></p><p>例如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">@vue/compiler-sfc</span>
<span class="line">@nestjs/core</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="意义" tabindex="-1"><a class="header-anchor" href="#意义"><span>意义：</span></a></h4><ul><li><code>@scope</code> 是一个命名空间（通常是组织或用户）。</li><li>用于将包组织在一起，便于管理和发布。</li><li><strong>私有包</strong> 和 <strong>大组织内部的包</strong> 常用这种形式。</li><li>可以发布到 npm 或私有 npm registry。</li></ul><h4 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例：</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> @vue/compiler-sfc</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="✅-2-不带-的包-普通包" tabindex="-1"><a class="header-anchor" href="#✅-2-不带-的包-普通包"><span>✅ 2. 不带 <code>@</code> 的包（普通包）</span></a></h3><p>格式：<code>package-name</code></p><p>例如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">axios</span>
<span class="line">lodash</span>
<span class="line">vue</span>
<span class="line">express</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="意义-1" tabindex="-1"><a class="header-anchor" href="#意义-1"><span>意义：</span></a></h4><ul><li>这是 npm 的传统命名方式。</li><li>所有开发者都可以发布这样的包，只要名字不冲突。</li></ul><h4 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例：</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> axios</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="🚩-补充说明" tabindex="-1"><a class="header-anchor" href="#🚩-补充说明"><span>🚩 补充说明</span></a></h3><table><thead><tr><th>形式</th><th>举例</th><th>是否必须公开</th><th>是否支持私有</th></tr></thead><tbody><tr><td><code>package-name</code></td><td><code>axios</code>, <code>vue</code></td><td>是</td><td>否（要私有需加作用域）</td></tr><tr><td><code>@scope/name</code></td><td><code>@vue/compiler-sfc</code></td><td>否</td><td>✅ 是（可私有）</td></tr></tbody></table><hr><h3 id="📦-私有包示例-your-org-internal-lib" tabindex="-1"><a class="header-anchor" href="#📦-私有包示例-your-org-internal-lib"><span>📦 私有包示例（<code>@your-org/internal-lib</code>）：</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@your-org/internal-lib&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;private&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>如你公司内部有多个团队，可以这样划分作用域：</p><ul><li><code>@company/frontend-utils</code></li><li><code>@company/backend-core</code></li><li><code>@company/shared-config</code></li></ul><hr>`,30)]))}const r=n(l,[["render",i],["__file","npm包名前带@和不带@的区别.html.vue"]]),c=JSON.parse('{"path":"/content/tool/front/npm%E5%8C%85%E5%90%8D%E5%89%8D%E5%B8%A6@%E5%92%8C%E4%B8%8D%E5%B8%A6@%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"npm包名前带@和不带@的区别","lang":"en-US","frontmatter":{"sidebar":false,"title":"npm包名前带@和不带@的区别","head":[["meta",{"name":"title","content":"npm包名前带@和不带@的区别"}],["meta",{"name":"description","content":"npm包名前带@和不带@的区别"}],["meta",{"name":"keywords","content":"npm"}],["meta",{"property":"og:title","content":"npm包名前带@和不带@的区别"}],["meta",{"property":"og:description","content":"npm包名前带@和不带@的区别"}]]},"headers":[{"level":3,"title":"✅ 1. 带 @ 符号的包（作用域包 Scoped Package）","slug":"✅-1-带-符号的包-作用域包-scoped-package","link":"#✅-1-带-符号的包-作用域包-scoped-package","children":[]},{"level":3,"title":"✅ 2. 不带 @ 的包（普通包）","slug":"✅-2-不带-的包-普通包","link":"#✅-2-不带-的包-普通包","children":[]},{"level":3,"title":"🚩 补充说明","slug":"🚩-补充说明","link":"#🚩-补充说明","children":[]},{"level":3,"title":"📦 私有包示例（@your-org/internal-lib）：","slug":"📦-私有包示例-your-org-internal-lib","link":"#📦-私有包示例-your-org-internal-lib","children":[]}],"git":{},"filePathRelative":"content/tool/front/npm包名前带@和不带@的区别.md"}');export{r as comp,c as data};
