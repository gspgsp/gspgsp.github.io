import{_ as s,c as a,d as p,o as e}from"./app-CHrRue27.js";const t={};function o(l,n){return e(),a("div",null,n[0]||(n[0]=[p(`<p>nuxt3在middleware中请求api，获取数据，判断用户登录状态，这个功能主要是，有些页面是需要用户登录以后才能访问的，避免用户直接访问到 需要登陆的页面，所以就在需要登的页面设置middleware，进行控制，具体代码如下，我自定义的<br> middleware/learnAuth.ts:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// @ts-ignore</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>defineNuxtRouteMiddleware<span class="token punctuation">,</span> navigateTo<span class="token punctuation">,</span> useRuntimeConfig<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;#app&quot;</span></span>
<span class="line"><span class="token keyword">import</span> utils <span class="token keyword">from</span> <span class="token string">&#39;../utils/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;nuxt/app&quot;</span><span class="token punctuation">;</span><span class="token comment">// 开始将 navigateTo, useRuntimeConfig 全部都放在这个里面，但是一运行就报：Failed to import dynamic modules，后来在官方的issue 有人直接放到了 #app, 我也这样改了，再运行就不会报错了,这里 import {} 是为了的代码不报红，去掉import {} from &quot;nuxt/app&quot; 也是可以的，只是下面的代码会报红，很不舒服，所以就加上了; 或者在报红的代码那里加上：// @ts-ignore 也是可以的</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>createError<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;h3&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// async function isJoinTheCourse(id){</span></span>
<span class="line"><span class="token comment">//     let userInfo = utils.getUserInfo()</span></span>
<span class="line"><span class="token comment">//     await $fetch(&#39;/api/user/course&#39;, {</span></span>
<span class="line"><span class="token comment">//         method: &#39;post&#39;,</span></span>
<span class="line"><span class="token comment">//         body: {userId: userInfo.id, courseId: id},</span></span>
<span class="line"><span class="token comment">//         headers: {&#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;},</span></span>
<span class="line"><span class="token comment">//     })</span></span>
<span class="line"><span class="token comment">// }</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineNuxtRouteMiddleware</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>to<span class="token punctuation">,</span> from<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>server<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token comment">// 跳过server端验证 直接验证client 端</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">let</span> isLogin <span class="token operator">=</span> utils<span class="token punctuation">.</span><span class="token function">isLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">useRuntimeConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">let</span> loginUrl <span class="token operator">=</span> config<span class="token punctuation">.</span>public<span class="token punctuation">.</span>envData<span class="token punctuation">.</span><span class="token constant">VITE_LOGIN_URL</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>isLogin<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>loginUrl<span class="token punctuation">)</span></span>
<span class="line">      <span class="token comment">// window.location.href = loginUrl;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// isJoinTheCourse(to.query.id).then(r =&gt; {</span></span>
<span class="line">    <span class="token comment">//     console.log(r)</span></span>
<span class="line">    <span class="token comment">// })</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">$fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api/user/test&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 调用api 只能通过$fetch 这个全局方法实现</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> redirectCode<span class="token operator">:</span> <span class="token number">403</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token function">createError</span><span class="token punctuation">(</span><span class="token punctuation">{</span> statusCode<span class="token operator">:</span> <span class="token number">404</span><span class="token punctuation">,</span> statusMessage<span class="token operator">:</span> <span class="token string">&#39;Page Not Found&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">//精简以后的版本，只做是否登录验证，接口调用去掉了</span></span>
<span class="line"><span class="token comment">// @ts-ignore</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>defineNuxtRouteMiddleware<span class="token punctuation">,</span> navigateTo<span class="token punctuation">,</span> useRuntimeConfig<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;#app&quot;</span></span>
<span class="line"><span class="token keyword">import</span> utils <span class="token keyword">from</span> <span class="token string">&#39;../utils/utils&#39;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineNuxtRouteMiddleware</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>to<span class="token punctuation">,</span> from<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// @ts-ignore</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>client<span class="token punctuation">)</span> <span class="token keyword">return</span></span>
<span class="line">    <span class="token keyword">let</span> isLogin <span class="token operator">=</span> utils<span class="token punctuation">.</span><span class="token function">isLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">useRuntimeConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">let</span> loginUrl <span class="token operator">=</span> config<span class="token punctuation">.</span>public<span class="token punctuation">.</span>envData<span class="token punctuation">.</span><span class="token constant">VITE_LOGIN_URL</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLogin<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">navigateTo</span><span class="token punctuation">(</span>loginUrl<span class="token punctuation">,</span> <span class="token punctuation">{</span> redirectCode<span class="token operator">:</span> <span class="token number">403</span> <span class="token punctuation">,</span> external<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当初按之前的写法一直报：Failed to import dynamic modules，后来查看issue 发现另外一种<a href="https://github.com/nuxt/nuxt/issues/15658" target="_blank" rel="noopener noreferrer">写法</a>，就如上所示</p>`,3)]))}const c=s(t,[["render",o],["__file","nuxt3在middleware中请求api.html.vue"]]),u=JSON.parse('{"path":"/content/front/js/nuxt3%E5%9C%A8middleware%E4%B8%AD%E8%AF%B7%E6%B1%82api.html","title":"nuxt3在middleware中请求api，获取数据，判断用户登录状态","lang":"en-US","frontmatter":{"sidebar":false,"title":"nuxt3在middleware中请求api，获取数据，判断用户登录状态","description":"nuxt3在middleware中请求api，获取数据，判断用户登录状态"},"headers":[],"git":{},"filePathRelative":"content/front/js/nuxt3在middleware中请求api.md"}');export{c as comp,u as data};
