import{_ as t,c as n,d as s,o as a}from"./app-CHrRue27.js";const r={};function i(l,e){return a(),n("div",null,e[0]||(e[0]=[s(`<p>执行测试用例，只展示执行报错的用例，可以考虑使用PHPUnit的 --testdox 选项，该选项会生成测试文档，其中包含每个测试的名称和结果。你可以使用grep来筛选出包含 &quot;Error&quot; 的行:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">./vendor/bin/simple-phpunit --testdox | grep &quot;Error&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,2)]))}const d=t(r,[["render",i],["__file","PHP之执行测试用例.html.vue"]]),p=JSON.parse('{"path":"/content/php/base/PHP%E4%B9%8B%E6%89%A7%E8%A1%8C%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B.html","title":"PHP之执行测试用例","lang":"en-US","frontmatter":{"sidebar":false,"title":"PHP之执行测试用例","description":"PHP之执行测试用例"},"headers":[],"git":{},"filePathRelative":"content/php/base/PHP之执行测试用例.md"}');export{d as comp,p as data};
