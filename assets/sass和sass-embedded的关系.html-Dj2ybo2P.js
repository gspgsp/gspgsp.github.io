import{_ as a,c as n,d as e,o as t}from"./app-CHrRue27.js";const d={};function p(l,s){return t(),n("div",null,s[0]||(s[0]=[e(`<h5 id="sass和sass-embedded的关系" tabindex="-1"><a class="header-anchor" href="#sass和sass-embedded的关系"><span>sass和sass-embedded的关系</span></a></h5><p><code>sass</code> 和 <code>sass-embedded</code> 是 Sass 编译体系中两个密切相关但职责不同的模块。下面我会从<strong>概念、角色、关系、用法</strong>四个方面给你完整梳理。</p><hr><h5 id="🧩-一句话总结" tabindex="-1"><a class="header-anchor" href="#🧩-一句话总结"><span>🧩 一句话总结</span></a></h5><blockquote><p><code>sass</code> 是 JS 层的 API 接口，提供编译入口；<br><code>sass-embedded</code> 是 Dart Sass 的高性能后端，实现实际的 Sass 编译逻辑。</p></blockquote><hr><h5 id="✅-各自的角色详解" tabindex="-1"><a class="header-anchor" href="#✅-各自的角色详解"><span>✅ 各自的角色详解</span></a></h5><table><thead><tr><th>名称</th><th>类型</th><th>作用描述</th></tr></thead><tbody><tr><td><code>sass</code></td><td>JS 库（npm 包）</td><td>提供 JavaScript 编译接口，供工具链（Vite、Webpack、Nuxt）调用</td></tr><tr><td><code>sass-embedded</code></td><td>编译器后端</td><td>是 Dart Sass 的“嵌入式实现”，<code>sass</code> 可以选择调用它来提升编译性能</td></tr></tbody></table><hr><h5 id="🔗-它们之间的关系" tabindex="-1"><a class="header-anchor" href="#🔗-它们之间的关系"><span>🔗 它们之间的关系</span></a></h5><h6 id="🧠-类比理解" tabindex="-1"><a class="header-anchor" href="#🧠-类比理解"><span>🧠 类比理解：</span></a></h6><table><thead><tr><th>类比组成</th><th>sass</th><th>sass-embedded</th></tr></thead><tbody><tr><td>你写的 JS 项目</td><td>调用者</td><td>被调用者（底层工具）</td></tr><tr><td>浏览器 + V8</td><td>应用逻辑</td><td>底层执行引擎</td></tr></tbody></table><p>所以：</p><ul><li><code>sass</code> 是你调用的 npm 包，提供接口如 <code>render()</code>、<code>compile()</code></li><li>如果发现你装了 <code>sass-embedded</code>，它会选择用它来<strong>执行底层编译任务</strong></li><li>如果没有安装 <code>sass-embedded</code>，它就使用<strong>内置 Dart CLI 编译器</strong></li></ul><hr><h5 id="🧪-工作流程图" tabindex="-1"><a class="header-anchor" href="#🧪-工作流程图"><span>🧪 工作流程图</span></a></h5><div class="language-plaintext line-numbers-mode" data-highlighter="prismjs" data-ext="plaintext" data-title="plaintext"><pre><code><span class="line">你的 Nuxt/Vite 项目</span>
<span class="line">      │</span>
<span class="line">      ▼</span>
<span class="line">    使用 \`.scss\` 文件</span>
<span class="line">      │</span>
<span class="line">      ▼</span>
<span class="line">    Vite 调用 sass (JS)</span>
<span class="line">      │</span>
<span class="line">      ├── 若发现安装了 sass-embedded → 调用它（更快 ✅）</span>
<span class="line">      └── 否则使用 Dart Sass CLI （也能正常跑 ✅）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h5 id="🔧-是否需要都安装" tabindex="-1"><a class="header-anchor" href="#🔧-是否需要都安装"><span>🔧 是否需要都安装？</span></a></h5><table><thead><tr><th>场景</th><th>安装建议</th></tr></thead><tbody><tr><td>一般使用</td><td><strong>只装 <code>sass</code> 即可</strong> ✅</td></tr><tr><td>想提升构建性能</td><td><code>sass</code> + <code>sass-embedded</code> ✅</td></tr><tr><td>只装 <code>sass-embedded</code></td><td>❌ 无法运行，会报错</td></tr><tr><td>用 Webpack/Vite/Nuxt 构建 <code>.scss</code></td><td>✅ 需要 <code>sass</code> 提供 JS 接口</td></tr></tbody></table><hr><h5 id="📦-安装方式" tabindex="-1"><a class="header-anchor" href="#📦-安装方式"><span>📦 安装方式</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> sass              <span class="token comment"># 必须</span></span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> sass-embedded     <span class="token comment"># 可选，用于提升性能</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h5 id="🧪-是否启用-sass-embedded-怎么查看" tabindex="-1"><a class="header-anchor" href="#🧪-是否启用-sass-embedded-怎么查看"><span>🧪 是否启用 <code>sass-embedded</code>，怎么查看？</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable">SASS_LOG</span><span class="token operator">=</span>debug <span class="token function">npm</span> run dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出含有：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">[info] Using Embedded Dart Sass</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>就说明 <code>sass-embedded</code> 生效了 ✅</p><hr><h5 id="✅-总结对比表" tabindex="-1"><a class="header-anchor" href="#✅-总结对比表"><span>✅ 总结对比表</span></a></h5><table><thead><tr><th>特性</th><th><code>sass</code></th><th><code>sass-embedded</code></th></tr></thead><tbody><tr><td>是否必须</td><td>✅ 是</td><td>⚠️ 可选</td></tr><tr><td>提供 JS API？</td><td>✅ 提供 (<code>render</code>)</td><td>❌ 不提供</td></tr><tr><td>是否能单独使用？</td><td>✅ 可以</td><td>❌ 不可以（依赖 <code>sass</code> 调用）</td></tr><tr><td>是否用于加速？</td><td>⚠️ 本身不加速</td><td>✅ 是（提升 Dart 编译速度）</td></tr><tr><td>谁调用谁？</td><td><code>sass</code> 调用它</td><td>被动执行</td></tr></tbody></table><hr><p><strong>对于 <code>sass</code> 和 <code>sass-embedded</code> 这类构建时使用的依赖</strong>，应该将它们放在 <code>devDependencies</code> 下 ✅。</p><hr><h5 id="✅-结论-sass-和-sass-embedded-应该放在-devdependencies" tabindex="-1"><a class="header-anchor" href="#✅-结论-sass-和-sass-embedded-应该放在-devdependencies"><span>✅ 结论：<code>sass</code> 和 <code>sass-embedded</code> 应该放在 <code>devDependencies</code></span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> sass sass-embedded</span>
<span class="line"><span class="token comment"># or</span></span>
<span class="line"><span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> sass sass-embedded</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原因如下：</p><hr><h5 id="🧠-它们只在构建阶段用-不在运行时使用" tabindex="-1"><a class="header-anchor" href="#🧠-它们只在构建阶段用-不在运行时使用"><span>🧠 它们只在构建阶段用，不在运行时使用</span></a></h5><table><thead><tr><th>包名</th><th>用途</th><th>运行时是否需要</th><th>放在哪</th></tr></thead><tbody><tr><td><code>sass</code></td><td>编译 <code>.scss</code> 到 CSS</td><td>❌ 不需要</td><td><code>devDependencies</code> ✅</td></tr><tr><td><code>sass-embedded</code></td><td>Dart Sass 的底层优化后端</td><td>❌ 不需要</td><td><code>devDependencies</code> ✅</td></tr></tbody></table><hr><h5 id="🚀-nuxt-vite-构建流程中它们的作用" tabindex="-1"><a class="header-anchor" href="#🚀-nuxt-vite-构建流程中它们的作用"><span>🚀 Nuxt/Vite 构建流程中它们的作用：</span></a></h5><ol><li><p>开发阶段 / 构建阶段：</p><ul><li><code>.scss</code> 文件被加载</li><li><code>vite</code> 使用 <code>sass</code> 作为 CSS 预处理器，调用 <code>sass</code> 编译器</li><li><code>sass</code> 检测是否存在 <code>sass-embedded</code>，如果有则使用它提升性能</li></ul></li><li><p>构建完成后：</p><ul><li>所有 <code>.scss</code> 已被编译为 <code>.css</code></li><li><strong>运行时根本不需要 <code>sass</code> 或 <code>sass-embedded</code></strong></li></ul></li></ol><hr><h5 id="🧪-nuxt-项目中实际表现" tabindex="-1"><a class="header-anchor" href="#🧪-nuxt-项目中实际表现"><span>🧪 Nuxt 项目中实际表现</span></a></h5><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token comment">// nuxt.config.ts</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineNuxtConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  css<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;~/assets/styles/main.scss&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  vite<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    css<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      preprocessorOptions<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        scss<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">          additionalData<span class="token operator">:</span> <span class="token string">&#39;@use &quot;@/assets/styles/variables.scss&quot; as *;&#39;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段配置在 <strong>dev 或 build 阶段需要 <code>sass</code></strong>，但生成的 <code>.output/public/_nuxt/*.css</code> 早已是纯 CSS，不需要任何 Sass 依赖。</p><hr><h5 id="📦-总结-依赖分类建议" tabindex="-1"><a class="header-anchor" href="#📦-总结-依赖分类建议"><span>📦 总结：依赖分类建议</span></a></h5><table><thead><tr><th>类型</th><th>放在 dependencies？</th><th>放在 devDependencies？</th><th>备注</th></tr></thead><tbody><tr><td><code>sass</code></td><td>❌</td><td>✅</td><td>构建工具</td></tr><tr><td><code>sass-embedded</code></td><td>❌</td><td>✅</td><td>编译加速器</td></tr><tr><td><code>vue</code></td><td>✅</td><td>❌</td><td>运行时必须依赖</td></tr><tr><td><code>tailwindcss</code></td><td>❌</td><td>✅</td><td>只编译时用</td></tr></tbody></table><hr><h5 id="✅-最佳实践" tabindex="-1"><a class="header-anchor" href="#✅-最佳实践"><span>✅ 最佳实践</span></a></h5><p>你的 <code>package.json</code> 应该像这样：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;sass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.77.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;sass-embedded&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.77.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;tailwindcss&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.4.1&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;nuxt&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.10.0&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>在 Nuxt 3 中，<strong>不需要</strong>手动安装 <code>sass</code> 和 <code>sass-embedded</code>。</p><p>Nuxt 3 对 Sass 的支持是开箱即用的，它内置了对 Sass/SCSS 的处理能力。你只需要：</p><ol><li><p><strong>直接使用 <code>.scss</code> 或 <code>.sass</code> 文件</strong>：</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line">$<span class="token property">primary-color</span><span class="token punctuation">:</span> #007bff<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">.my-component</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> $primary-color<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>或者在组件中直接写 SCSS</strong>：</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line">// 你的 SCSS 代码</span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>Nuxt 3 会自动检测到你使用了 Sass，并在需要时自动安装相关依赖。</p><p><strong>什么时候需要手动安装？</strong></p><p>只有在以下情况下才可能需要手动安装：</p><ul><li>你遇到了特定的版本兼容性问题</li><li>你需要使用特定版本的 Sass</li><li>你的项目有特殊的构建需求</li></ul><p>如果遇到 Sass 相关的错误，那时候再考虑手动安装：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> sass</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,65)]))}const i=a(d,[["render",p],["__file","sass和sass-embedded的关系.html.vue"]]),o=JSON.parse('{"path":"/content/front/js/sass%E5%92%8Csass-embedded%E7%9A%84%E5%85%B3%E7%B3%BB.html","title":"sass和sass-embedded的关系","lang":"en-US","frontmatter":{"sidebar":false,"title":"sass和sass-embedded的关系","head":[["meta",{"name":"title","content":"sass和sass-embedded的关系"}],["meta",{"name":"description","content":"sass和sass-embedded的关系"}],["meta",{"name":"keywords","content":"sass"}],["meta",{"property":"og:title","content":"sass和sass-embedded的关系"}],["meta",{"property":"og:description","content":"sass和sass-embedded的关系"}]]},"headers":[],"git":{},"filePathRelative":"content/front/js/sass和sass-embedded的关系.md"}');export{i as comp,o as data};
