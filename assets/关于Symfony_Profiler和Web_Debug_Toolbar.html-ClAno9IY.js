import{_ as e,c as s,d as a,o as l}from"./app-CHrRue27.js";const i={};function o(p,n){return l(),s("div",null,n[0]||(n[0]=[a(`<p>关于Symfony_Profiler和Web_Debug_Toolbar: Symfony Profiler 和 Web Debug Toolbar 是 Symfony 框架中非常强大的调试工具。让我为你详细介绍它们的使用方法：</p><p>1.Web Debug Toolbar</p><p>Web Debug Toolbar 是在浏览器底部显示的一个工具栏，提供了关于当前请求的各种信息。</p><p>使用方法：</p><ul><li>确保你的应用运行在开发环境（<code>APP_ENV=dev</code>）。</li><li>访问你的应用的任何页面，你应该能在底部看到这个工具栏。</li></ul><p>主要功能：</p><ul><li>显示 Symfony 版本</li><li>显示当前路由信息</li><li>显示请求和响应信息</li><li>显示性能数据（如执行时间、内存使用）</li><li>数据库查询数量和时间</li><li>显示日志信息</li><li>提供链接直接进入 Symfony Profiler</li></ul><p>2.Symfony Profiler</p><p>Symfony Profiler 提供了更详细的调试信息。</p><p>使用方法：</p><ul><li>点击 Web Debug Toolbar 上的任何链接，或者直接访问 <code>/_profiler</code> 路由。</li><li>你也可以在控制器中使用 <code>$this-&gt;getDoctrine()-&gt;getManager()-&gt;getConnection()-&gt;getConfiguration()-&gt;setSQLLogger(new \\Doctrine\\DBAL\\Logging\\DebugStack());</code> 来记录数据库查询。</li></ul><p>主要功能：</p><ul><li>请求/响应信息</li><li>性能时间线</li><li>数据库查询详情</li><li>日志和异常</li><li>安全信息</li><li>路由详情</li><li>缓存使用情况</li></ul><p>3.配置和使用技巧</p><ul><li>在 <code>config/packages/dev/web_profiler.yaml</code> 中可以配置 Profiler：</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">web_profiler</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">toolbar</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">    <span class="token key atrule">intercept_redirects</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>你可以在控制器中注入 Profiler 服务：</li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>HttpKernel<span class="token punctuation">\\</span>Profiler<span class="token punctuation">\\</span>Profiler</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">someAction</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Profiler</span> <span class="token variable">$profiler</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 使用 profiler</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在模板中，你可以使用 <code>{{ profiler_dump(var) }}</code> 来输出变量的详细信息。</li></ul><p>4.性能考虑</p><p>记住，Profiler 和 Debug Toolbar 会对应用性能产生影响，所以只应在开发环境中使用。在生产环境中，确保它们被禁用。</p><p>5.远程调试</p><p>Symfony Profiler 还支持远程调试。你可以在一台机器上收集数据，然后在另一台机器上查看。这对于调试生产环境的问题特别有用。</p><p>6.自定义 Data Collectors</p><p>你可以创建自定义的 Data Collectors 来收集和显示特定的信息。这对于监控应用的特定方面非常有用。</p><p>symfony7项目可以通过如下命令查看 /_profiler/ 路径</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">其实是通过 web_profiler.yaml 配置的</span>
<span class="line">这个基于 symfony/web-profiler-bundle 包</span>
<span class="line">php bin/console debug:router</span>
<span class="line">我发现和 安装symfony/debug-bundle 包 没关系，没安装也可以访问</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27)]))}const r=e(i,[["render",o],["__file","关于Symfony_Profiler和Web_Debug_Toolbar.html.vue"]]),c=JSON.parse('{"path":"/content/php/symfony/%E5%85%B3%E4%BA%8ESymfony_Profiler%E5%92%8CWeb_Debug_Toolbar.html","title":"关于Symfony_Profiler和Web_Debug_Toolbar","lang":"en-US","frontmatter":{"sidebar":false,"title":"关于Symfony_Profiler和Web_Debug_Toolbar","description":"关于Symfony_Profiler和Web_Debug_Toolbar"},"headers":[],"git":{},"filePathRelative":"content/php/symfony/关于Symfony_Profiler和Web_Debug_Toolbar.md"}');export{r as comp,c as data};
