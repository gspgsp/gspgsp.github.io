import{_ as s,c as a,d as p,o as t}from"./app-CHrRue27.js";const e={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<p>通过 bcrypt 对数据加密，这个和Laravel里的 bcrypt() 方法原理是一样的</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;fmt&quot;</span></span>
<span class="line">    <span class="token string">&quot;golang.org/x/crypto/bcrypt&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">HashPassword</span><span class="token punctuation">(</span>password <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    bytes<span class="token punctuation">,</span> err <span class="token operator">:=</span> bcrypt<span class="token punctuation">.</span><span class="token function">GenerateFromPassword</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">string</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">,</span> err</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">CheckPasswordHash</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> password <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span></span>
<span class="line">	err <span class="token operator">:=</span> bcrypt<span class="token punctuation">.</span><span class="token function">CompareHashAndPassword</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">return</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token comment">//直接比较，返回bool</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    password <span class="token operator">:=</span> <span class="token string">&quot;123456&quot;</span></span>
<span class="line">    hash<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">HashPassword</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token comment">// 先生成password的hash码，这个码存到数据库，也就是password字段</span></span>
<span class="line"></span>
<span class="line">    res <span class="token operator">:=</span> <span class="token function">CheckPasswordHash</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token comment">// 将hash后的password和hash前的password作比较</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;比较结果为:&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const i=s(e,[["render",o],["__file","golang之bcript加密和验证.html.vue"]]),u=JSON.parse('{"path":"/content/go/base/golang%E4%B9%8Bbcript%E5%8A%A0%E5%AF%86%E5%92%8C%E9%AA%8C%E8%AF%81.html","title":"golang之bcript加密和验证","lang":"en-US","frontmatter":{"sidebar":false,"title":"golang之bcript加密和验证","description":"golang之bcript加密和验证"},"headers":[],"git":{},"filePathRelative":"content/go/base/golang之bcript加密和验证.md"}');export{i as comp,u as data};
