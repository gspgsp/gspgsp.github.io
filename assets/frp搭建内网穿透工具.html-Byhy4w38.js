import{_ as s,c as n,d as t,o as e}from"./app-CHrRue27.js";const p={};function r(d,a){return e(),n("div",null,a[0]||(a[0]=[t(`<h3 id="frp搭建内网穿透工具" tabindex="-1"><a class="header-anchor" href="#frp搭建内网穿透工具"><span>frp搭建内网穿透工具</span></a></h3><h4 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h4><p>帮助您将NAT或防火墙后的本地服务器暴露给互联网的快速反向代理。 A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet.</p><h4 id="工作原理" tabindex="-1"><a class="header-anchor" href="#工作原理"><span>工作原理</span></a></h4><h5 id="_1️⃣-frp-工作原理总结" tabindex="-1"><a class="header-anchor" href="#_1️⃣-frp-工作原理总结"><span>1️⃣ frp 工作原理总结</span></a></h5><p>frp 是一个 <strong>内网穿透（NAT/防火墙穿透）工具</strong>，通过 <strong>反向代理</strong> 的方式把内网服务暴露到公网。 它由两部分组成：</p><table><thead><tr><th>组件</th><th>作用</th></tr></thead><tbody><tr><td><strong>frps</strong>（服务端）</td><td>部署在公网服务器上，接收外部请求并转发到对应的 frpc。</td></tr><tr><td><strong>frpc</strong>（客户端）</td><td>部署在内网主机上，注册自己提供的服务，并通过 frps 转发流量到内网服务。</td></tr></tbody></table><hr><h5 id="🔹-核心机制" tabindex="-1"><a class="header-anchor" href="#🔹-核心机制"><span>🔹 核心机制</span></a></h5><ol><li><p><strong>注册映射</strong></p><ul><li>frpc 启动时主动连到 frps，并注册自己负责的域名、端口或服务类型。</li><li>frps 内部维护一张映射表：<code>域名/端口 → frpc 通道</code>。</li></ul></li><li><p><strong>外部访问</strong></p><ul><li>浏览器或客户端访问公网服务器（frps）上的域名或端口。</li><li>frps 查映射表，找到对应的 frpc。</li><li>frps 将请求通过 frp 内部通道转发到 frpc。</li><li>frpc 再转发到本地内网服务（如 <code>localhost:8080</code>）。</li></ul></li><li><p><strong>响应返回</strong></p><ul><li>内网服务响应 → frpc → frps → 外部客户端。</li></ul></li></ol><hr><h5 id="🔹-流程图-简化" tabindex="-1"><a class="header-anchor" href="#🔹-流程图-简化"><span>🔹 流程图（简化）</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">浏览器 / 外部客户端</span>
<span class="line">       |</span>
<span class="line">       v</span>
<span class="line">    [frps 公网服务器]</span>
<span class="line">       | 反向通道</span>
<span class="line">       v</span>
<span class="line">    [frpc 内网主机]</span>
<span class="line">       |</span>
<span class="line">       v</span>
<span class="line">   内网服务（本地端口）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h5 id="_2️⃣-简单示例-http" tabindex="-1"><a class="header-anchor" href="#_2️⃣-简单示例-http"><span>2️⃣ 简单示例（HTTP）</span></a></h5><p>假设：</p><ul><li>公网服务器 IP：<code>1.2.3.4</code></li><li>内网电脑服务端口：<code>8080</code></li><li>公网域名：<code>www.example.com</code> 需要DNS解析到 <code>1.2.3.4</code></li></ul><h5 id="服务器端-frps-ini" tabindex="-1"><a class="header-anchor" href="#服务器端-frps-ini"><span>服务器端 frps.ini</span></a></h5><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">common</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">bind_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">7000</span></span>
<span class="line"><span class="token key attr-name">vhost_http_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">80</span></span>
<span class="line"><span class="token key attr-name">vhost_https_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">443</span></span>
<span class="line"><span class="token key attr-name">dashboard_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">7500</span></span>
<span class="line"><span class="token key attr-name">dashboard_user</span> <span class="token punctuation">=</span> <span class="token value attr-value">admin</span></span>
<span class="line"><span class="token key attr-name">dashboard_pwd</span> <span class="token punctuation">=</span> <span class="token value attr-value">123456</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="内网主机-frpc-ini" tabindex="-1"><a class="header-anchor" href="#内网主机-frpc-ini"><span>内网主机 frpc.ini</span></a></h5><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">common</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">server_addr</span> <span class="token punctuation">=</span> <span class="token value attr-value">1.2.3.4</span></span>
<span class="line"><span class="token key attr-name">server_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">7000</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">web</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">http</span></span>
<span class="line"><span class="token key attr-name">local_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">8080</span></span>
<span class="line"><span class="token key attr-name">custom_domains</span> <span class="token punctuation">=</span> <span class="token value attr-value">www.example.com</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="外部访问效果" tabindex="-1"><a class="header-anchor" href="#外部访问效果"><span>外部访问效果</span></a></h5><ul><li><code>http://www.example.com</code> → 自动访问内网 8080 服务</li><li>HTTPS 情况可在 frps 上配置 <code>https2http</code> 插件和证书</li></ul><hr><h5 id="_3️⃣-常用参数说明" tabindex="-1"><a class="header-anchor" href="#_3️⃣-常用参数说明"><span>3️⃣ 常用参数说明</span></a></h5><h5 id="🔹-frps-服务端" tabindex="-1"><a class="header-anchor" href="#🔹-frps-服务端"><span>🔹 frps（服务端）</span></a></h5><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>bind_port</code></td><td>frpc 连接 frps 的控制端口（必须开放）</td></tr><tr><td><code>vhost_http_port</code></td><td>用于 HTTP 代理的公网端口（一般 80）</td></tr><tr><td><code>vhost_https_port</code></td><td>用于 HTTPS 代理的公网端口（一般 443）</td></tr><tr><td><code>dashboard_port</code></td><td>frps 内置监控界面端口</td></tr><tr><td><code>dashboard_user</code> / <code>dashboard_pwd</code></td><td>Dashboard 登录用户名/密码</td></tr><tr><td><code>token</code></td><td>安全认证，必须与 frpc 对应</td></tr></tbody></table><h5 id="🔹-frpc-客户端" tabindex="-1"><a class="header-anchor" href="#🔹-frpc-客户端"><span>🔹 frpc（客户端）</span></a></h5><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>server_addr</code></td><td>frps 公网 IP</td></tr><tr><td><code>server_port</code></td><td>frps 控制端口（bind_port）</td></tr><tr><td><code>type</code></td><td>代理类型：<code>http</code> / <code>tcp</code> / <code>udp</code> / <code>stcp</code> 等</td></tr><tr><td><code>local_port</code></td><td>内网服务端口（本地服务）</td></tr><tr><td><code>custom_domains</code></td><td>HTTP 类型使用的自定义域名</td></tr><tr><td><code>subdomain</code></td><td>可用子域名，结合 <code>subdomain_host</code> 使用</td></tr><tr><td><code>remote_port</code></td><td>TCP/UDP 类型的外部访问端口</td></tr><tr><td><code>token</code></td><td>与 frps 对应，认证使用</td></tr></tbody></table><hr><h5 id="🔹-https-特殊参数-插件方式" tabindex="-1"><a class="header-anchor" href="#🔹-https-特殊参数-插件方式"><span>🔹 HTTPS 特殊参数（插件方式）</span></a></h5><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>plugin = https2http</code></td><td>frps 插件，把 HTTPS 转成 HTTP 内部转发</td></tr><tr><td><code>plugin_local_addr</code></td><td>转发解密后的请求到 frpc 通道</td></tr><tr><td><code>plugin_crt_path</code></td><td>TLS 证书路径</td></tr><tr><td><code>plugin_key_path</code></td><td>TLS 私钥路径</td></tr></tbody></table><hr><p>总结一句话：</p><blockquote><p>frp 的本质是 <strong>frps 管理映射表，frpc 注册服务，外部访问 → frps → frpc → 内网服务</strong>， 支持 HTTP、HTTPS、TCP/UDP 等多种类型，核心就是 <strong>注册和转发</strong>。</p></blockquote><h5 id="多个不同的本地客户端使用" tabindex="-1"><a class="header-anchor" href="#多个不同的本地客户端使用"><span>多个不同的本地客户端使用</span></a></h5><p>可以解析多个 example.com 的子域名， 比如 a.www.example.com b.www.example.com c.www.example.com, 然后让不同的本地主机使用，这就和 ngrok 使用一样了，不过通过frp可以实现自建服务，很安全</p><h5 id="站点" tabindex="-1"><a class="header-anchor" href="#站点"><span>站点</span></a></h5><p>https://github.com/fatedier/frp</p>`,39)]))}const c=s(p,[["render",r],["__file","frp搭建内网穿透工具.html.vue"]]),i=JSON.parse('{"path":"/content/tool/back/frp%E6%90%AD%E5%BB%BA%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7.html","title":"frp搭建内网穿透工具","lang":"en-US","frontmatter":{"sidebar":false,"title":"frp搭建内网穿透工具","head":[["meta",{"name":"title","content":"frp搭建内网穿透工具"}],["meta",{"name":"description","content":"frp搭建内网穿透工具"}],["meta",{"name":"keywords","content":"frp"}],["meta",{"property":"og:title","content":"frp搭建内网穿透工具"}],["meta",{"property":"og:description","content":"frp搭建内网穿透工具"}]]},"headers":[{"level":3,"title":"frp搭建内网穿透工具","slug":"frp搭建内网穿透工具","link":"#frp搭建内网穿透工具","children":[]}],"git":{},"filePathRelative":"content/tool/back/frp搭建内网穿透工具.md"}');export{c as comp,i as data};
