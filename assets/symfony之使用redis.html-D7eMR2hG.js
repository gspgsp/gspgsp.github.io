import{_ as n,c as a,d as e,o as p}from"./app-CHrRue27.js";const t={};function l(i,s){return p(),a("div",null,s[0]||(s[0]=[e(`<p>symfony框架使用redis:</p><ul><li>安装拓展</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">composer</span> require snc/redis-bundle</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>client选择</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">这里使用predis: composer require predis/predis</span>
<span class="line">默认使用的是phpredis(需要 ext-redis 拓展，直接 use Redis;即可)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改配置 config/packages/snc_redis.yaml</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">snc_redis</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">clients</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Define your clients here. The example below connects to database 0 of the default Redis server.</span></span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># See https://github.com/snc/SncRedisBundle/blob/master/docs/README.md for instructions on</span></span>
<span class="line"><span class="token comment"># how to configure the bundle.</span></span>
<span class="line"><span class="token comment">#</span></span>
<span class="line">        <span class="token key atrule">default</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token key atrule">type</span><span class="token punctuation">:</span> predis</span>
<span class="line">            <span class="token key atrule">alias</span><span class="token punctuation">:</span> default</span>
<span class="line">            <span class="token key atrule">dsn</span><span class="token punctuation">:</span> <span class="token string">&quot;%env(REDIS_URL)%&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用<br> 首先在services.yaml里添加配置</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># default configuration for services in *this* file</span></span>
<span class="line">    <span class="token key atrule">_defaults</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">autowire</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token comment"># Automatically injects dependencies in your services.</span></span>
<span class="line">        <span class="token key atrule">autoconfigure</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># Automatically registers your services as commands, event subscribers, etc.</span></span>
<span class="line">    <span class="token comment"># makes classes in src/ available to be used as services</span></span>
<span class="line">    <span class="token comment"># this creates a service per class whose id is the fully-qualified class name</span></span>
<span class="line">    <span class="token key atrule">App\\</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">resource</span><span class="token punctuation">:</span> <span class="token string">&#39;../src/&#39;</span></span>
<span class="line">        <span class="token key atrule">exclude</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token punctuation">-</span> <span class="token string">&#39;../src/DependencyInjection/&#39;</span></span>
<span class="line">            <span class="token punctuation">-</span> <span class="token string">&#39;../src/Entity/&#39;</span></span>
<span class="line">            <span class="token punctuation">-</span> <span class="token string">&#39;../src/Kernel.php&#39;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># add more service definitions when explicit configuration is needed</span></span>
<span class="line">    <span class="token comment"># please note that last definitions always *replace* previous ones</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">#使用predis的client，service为 snc_redis.default</span></span>
<span class="line">    <span class="token key atrule">Predis\\ClientInterface</span><span class="token punctuation">:</span> <span class="token string">&#39;@snc_redis.default&#39;</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>控制器中使用:</li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Controller<span class="token punctuation">\\</span>Admin</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Bundle<span class="token punctuation">\\</span>FrameworkBundle<span class="token punctuation">\\</span>Controller<span class="token punctuation">\\</span>AbstractController</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>HttpFoundation<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>HttpFoundation<span class="token punctuation">\\</span>Response</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Routing<span class="token punctuation">\\</span>Annotation<span class="token punctuation">\\</span>Route</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Predis<span class="token punctuation">\\</span>ClientInterface</span><span class="token punctuation">;</span><span class="token comment">//使用上面配置的predis client，会自动注入</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name-definition class-name">IndexController</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractController</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">Route</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/admin&#39;</span><span class="token punctuation">,</span> <span class="token attribute-class-name class-name">name</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;admin&#39;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">ClientInterface</span> <span class="token variable">$client</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Response</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//通过redis 命令进行操作</span></span>
<span class="line">        <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;wuhan&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token function">dd</span><span class="token punctuation">(</span><span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">renderForm</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin/index.html.twig&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11)]))}const o=n(t,[["render",l],["__file","symfony之使用redis.html.vue"]]),u=JSON.parse('{"path":"/content/php/symfony/symfony%E4%B9%8B%E4%BD%BF%E7%94%A8redis.html","title":"symfony之使用redis","lang":"en-US","frontmatter":{"sidebar":false,"title":"symfony之使用redis","description":"symfony之使用redis"},"headers":[],"git":{},"filePathRelative":"content/php/symfony/symfony之使用redis.md"}');export{o as comp,u as data};
