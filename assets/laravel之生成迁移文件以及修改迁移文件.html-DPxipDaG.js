import{_ as t,c as e,d as s,b as a,f as l,o}from"./app-CHrRue27.js";const c={},i=["src"];function r(p,n){return o(),e("div",null,[n[1]||(n[1]=s(`<p>laravel开发过程中，总是要执行迁移文件，创建或修改数据，还是把几个常用的命令记下来:</p><p>1.通过迁移文件生成数据库</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">php artisan migrate  <span class="token comment">#生成数据库</span></span>
<span class="line">php artisan migrate <span class="token operator">--</span>seed生成数据表同时初始化数据</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>2.seeder创建</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">php artisan make<span class="token punctuation">:</span>seeder AdminTableSeeder <span class="token comment">#新建一个seeder</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>3.给数据库初始化数据</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">php artisan db<span class="token punctuation">:</span>seed <span class="token operator">--</span><span class="token keyword">class</span><span class="token operator">=</span>UsersTableSeeder</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,7)),a("p",null,[n[0]||(n[0]=l("如果在执行:php artisan db:seed --class=UsersTableSeeder的时候报类似下面的错误，可以通过composer dump-autoload命令解决 ")),a("img",{src:p.$withBase("/images/php/laravel_composr_dump.png"),style:{width:"100%"}},null,8,i)]),n[2]||(n[2]=s(`<p>4.创建生成表的迁移文件</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">php artisan make<span class="token punctuation">:</span>migration create_<span class="token punctuation">{</span><span class="token variable">$table_name</span><span class="token punctuation">}</span>_table <span class="token operator">--</span>create<span class="token operator">=</span><span class="token punctuation">{</span><span class="token variable">$table_name</span><span class="token punctuation">}</span> <span class="token comment">#注意 {$table_name} 就是table_name 实际不用加 {$}符号</span></span>
<span class="line"></span>
<span class="line">php artisan make<span class="token punctuation">:</span>migration create_users_table <span class="token operator">--</span>create<span class="token operator">=</span>users <span class="token comment">#同上，用于创建users表</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.修改迁移文件</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">php artisan make<span class="token punctuation">:</span>migration add_votes_to_users_table <span class="token operator">--</span>table<span class="token operator">=</span>users <span class="token comment">#用于修改users表，给votes加个字段</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>6.注意点: 通过指定migrate的path来选择性生成数据库，避免重复 导致报错</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">php artisan migrate <span class="token operator">--</span>path<span class="token operator">=</span><span class="token operator">/</span>database<span class="token operator">/</span>migrations<span class="token operator">/</span><span class="token number">2018_12_13_082054</span>_create_coupon_category_table<span class="token operator">.</span><span class="token function">php</span> <span class="token punctuation">(</span>up<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">php artisan migrate<span class="token punctuation">:</span>rollback <span class="token operator">--</span>path<span class="token operator">=</span><span class="token operator">/</span>database<span class="token operator">/</span>migrations<span class="token operator">/</span><span class="token number">2020_03_25_104544</span>_add_repair_type_to_edu_chapters_table<span class="token operator">.</span><span class="token function">php</span> <span class="token punctuation">(</span>down<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>7.数据库回滚操作</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">php artisan migrate<span class="token punctuation">:</span>reset  <span class="token comment">// 这个命令会将之前所有的迁移文件全部删除，就像格式化一样(回滚所有)</span></span>
<span class="line">php artisan migrate<span class="token punctuation">:</span>rollback  <span class="token comment">// 这个命令会回滚最新的一次迁移操作，有一种场景很奇怪，很危险，就是我迁移文件里有的执行失败了，有的成功了，结果我想重新执行，自然会报 表已经存在的错误，于是乎 就想回滚一下，我没有指定任何迁移文件，结果我之前的迁移表全部没有了，而不是把我当前执行有错的回滚了，相当于  1  2  3(有错误) ， 就剩1了，2 没了 3 也没了</span></span>
<span class="line">php artisan migrate<span class="token punctuation">:</span>refresh <span class="token comment">//这个命令会回滚所有操作，然后再执行migrate </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>8.个人建议，如果一个迁移文件下有多个表操作，可以按照下面的方式执行</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name-definition class-name">CreateUsersTable</span> <span class="token keyword">extends</span> <span class="token class-name">Migration</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * Run the migrations.</span>
<span class="line">     *</span>
<span class="line">     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">void</span></span></span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">up</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//通过 try catch 捕获异常，然后drop，算是回滚了，这个是 mysql的 DDL 操作，自然不能用 transaction 操作，这个对 DML 有效</span></span>
<span class="line">        <span class="token keyword">try</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 用户表</span></span>
<span class="line">            <span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Blueprint</span> <span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">bigIncrements</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">comment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ID&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;avatar&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">comment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;头像&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;nickname&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">comment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;昵称&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">timestamp</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">comment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;创建时间&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">timestamp</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;updated_at&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">comment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;修改时间&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">statement</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;alter table &#39;</span> <span class="token operator">.</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;database.connections.mysql.prefix&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;users comment &quot;用户表&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">// 用户日志表</span></span>
<span class="line">            <span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_logs&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Blueprint</span> <span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">bigIncrements</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">comment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ID&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">timestamp</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">comment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;创建时间&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">timestamp</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;updated_at&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">comment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;修改时间&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">unsignedBigInteger</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">comment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;用户ID&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">foreign</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">references</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">onDelete</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;cascade&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">statement</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;alter table &#39;</span> <span class="token operator">.</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;database.connections.mysql.prefix&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;user_logs comment &quot;用户日志表&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">PDOException</span> <span class="token variable">$ex</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token variable">$ex</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * Reverse the migrations.</span>
<span class="line">     *</span>
<span class="line">     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">void</span></span></span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">dropIfExists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">dropIfExists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_logs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10))])}const k=t(c,[["render",r],["__file","laravel之生成迁移文件以及修改迁移文件.html.vue"]]),d=JSON.parse('{"path":"/content/php/laravel/laravel%E4%B9%8B%E7%94%9F%E6%88%90%E8%BF%81%E7%A7%BB%E6%96%87%E4%BB%B6%E4%BB%A5%E5%8F%8A%E4%BF%AE%E6%94%B9%E8%BF%81%E7%A7%BB%E6%96%87%E4%BB%B6.html","title":"laravel之生成迁移文件以及修改迁移文件","lang":"en-US","frontmatter":{"sidebar":false,"title":"laravel之生成迁移文件以及修改迁移文件","description":"laravel之生成迁移文件以及修改迁移文件"},"headers":[],"git":{},"filePathRelative":"content/php/laravel/laravel之生成迁移文件以及修改迁移文件.md"}');export{k as comp,d as data};
