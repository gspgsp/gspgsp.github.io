import{_ as n,c as a,d as e,o as p}from"./app-CHrRue27.js";const t={};function l(c,s){return p(),a("div",null,s[0]||(s[0]=[e(`<p>最近做项目需要使用到消息队列，所以记录一下，本次消息队列基于redis</p><ul><li>安装需要的依赖</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">composer</span> require symfony/messenger</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>在App\\Message下创建消息文件</li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Message</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">CourseMessage</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$user_course_id</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$user_course_id</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">user_course_id</span> <span class="token operator">=</span> <span class="token variable">$user_course_id</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getCourseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">user_course_id</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在App\\MessageHandler下创建消息处理函数</li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>MessageHandler</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Entity<span class="token punctuation">\\</span>UserCourse</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Message<span class="token punctuation">\\</span>CourseMessage</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Service<span class="token punctuation">\\</span>TimeService</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Doctrine<span class="token punctuation">\\</span>ORM<span class="token punctuation">\\</span>EntityManagerInterface</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Psr<span class="token punctuation">\\</span>Log<span class="token punctuation">\\</span>LoggerInterface</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Messenger<span class="token punctuation">\\</span>Handler<span class="token punctuation">\\</span>MessageHandlerInterface</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">CourseMessageHandler</span> <span class="token keyword">implements</span> <span class="token class-name">MessageHandlerInterface</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name type-declaration">EntityManagerInterface</span> <span class="token variable">$entityManager</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name type-declaration">LoggerInterface</span> <span class="token variable">$logger</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token class-name type-declaration">EntityManagerInterface</span> <span class="token variable">$entityManager</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">LoggerInterface</span> <span class="token variable">$logger</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">entityManager</span> <span class="token operator">=</span> <span class="token variable">$entityManager</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">logger</span> <span class="token operator">=</span> <span class="token variable">$logger</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 通过__invoke处理相关的逻辑</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__invoke</span><span class="token punctuation">(</span><span class="token class-name type-declaration">CourseMessage</span> <span class="token variable">$message</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// do something with your message</span></span>
<span class="line">        <span class="token variable">$user_course_id</span> <span class="token operator">=</span> <span class="token variable">$message</span><span class="token operator">-&gt;</span><span class="token function">getCourseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$userCourse</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">entityManager</span><span class="token operator">-&gt;</span><span class="token function">getRepository</span><span class="token punctuation">(</span><span class="token class-name static-context">UserCourse</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$user_course_id</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token variable">$dateTime</span> <span class="token operator">=</span> <span class="token class-name static-context">TimeService</span><span class="token operator">::</span><span class="token function">getDateTime</span><span class="token punctuation">(</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$userCourse</span><span class="token operator">-&gt;</span><span class="token function">setFinishedAt</span><span class="token punctuation">(</span><span class="token variable">$dateTime</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">entityManager</span><span class="token operator">-&gt;</span><span class="token function">getRepository</span><span class="token punctuation">(</span><span class="token class-name static-context">UserCourse</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token variable">$userCourse</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">logger</span><span class="token operator">-&gt;</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;user course done!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">关键是里面的 __invoke 方法，根据参数判断要消费的消息类型<span class="token punctuation">,</span> 可以为同一个消息类，配置多个不同的handler<span class="token punctuation">,</span> 但是invoke的参数一致<span class="token punctuation">,</span> Symfony 会扫描所有被注册的 Handler 服务，自动根据类型提示找到对应的 Handler。</span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在配置文件 config/packages/messager.yaml下配置</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">framework</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">messenger</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">failure_transport</span><span class="token punctuation">:</span> failed</span>
<span class="line"></span>
<span class="line">        <span class="token key atrule">transports</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token comment"># https://symfony.com/doc/current/messenger.html#transport-configuration</span></span>
<span class="line">            <span class="token key atrule">async</span><span class="token punctuation">:</span></span>
<span class="line">                <span class="token key atrule">dsn</span><span class="token punctuation">:</span> <span class="token string">&#39;%env(MESSENGER_TRANSPORT_DSN)%&#39;</span></span>
<span class="line">                <span class="token key atrule">options</span><span class="token punctuation">:</span></span>
<span class="line">                    <span class="token key atrule">use_notify</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">                    <span class="token key atrule">check_delayed_interval</span><span class="token punctuation">:</span> <span class="token number">60000</span></span>
<span class="line">                <span class="token key atrule">retry_strategy</span><span class="token punctuation">:</span></span>
<span class="line">                    <span class="token key atrule">max_retries</span><span class="token punctuation">:</span> <span class="token number">3</span></span>
<span class="line">                    <span class="token key atrule">multiplier</span><span class="token punctuation">:</span> <span class="token number">2</span></span>
<span class="line">            <span class="token key atrule">failed</span><span class="token punctuation">:</span> <span class="token string">&#39;doctrine://default?queue_name=failed&#39;</span></span>
<span class="line">            <span class="token key atrule">sync</span><span class="token punctuation">:</span> <span class="token string">&#39;sync://&#39;</span></span>
<span class="line"></span>
<span class="line">        <span class="token key atrule">routing</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token key atrule">Symfony\\Component\\Mailer\\Messenger\\SendEmailMessage</span><span class="token punctuation">:</span> sync</span>
<span class="line">            <span class="token key atrule">Symfony\\Component\\Notifier\\Message\\ChatMessage</span><span class="token punctuation">:</span> async</span>
<span class="line">            <span class="token key atrule">Symfony\\Component\\Notifier\\Message\\SmsMessage</span><span class="token punctuation">:</span> async</span>
<span class="line">            <span class="token key atrule">App\\Message\\CourseMessage</span><span class="token punctuation">:</span> async</span>
<span class="line"></span>
<span class="line">            <span class="token comment"># Route your messages to the transports</span></span>
<span class="line">            <span class="token comment"># &#39;App\\Message\\YourMessage&#39;: async</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>触发message</li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Controller<span class="token punctuation">\\</span>Admin</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Message<span class="token punctuation">\\</span>CourseMessage</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Bundle<span class="token punctuation">\\</span>FrameworkBundle<span class="token punctuation">\\</span>Controller<span class="token punctuation">\\</span>AbstractController</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>HttpFoundation<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>HttpFoundation<span class="token punctuation">\\</span>Response</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Messenger<span class="token punctuation">\\</span>MessageBusInterface</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Routing<span class="token punctuation">\\</span>Annotation<span class="token punctuation">\\</span>Route</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name-definition class-name">IndexController</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractController</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">Route</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/admin&#39;</span><span class="token punctuation">,</span> <span class="token attribute-class-name class-name">name</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;admin&#39;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">MessageBusInterface</span> <span class="token variable">$bus</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Response</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//这里通过 $bus 手动触发 message</span></span>
<span class="line">        <span class="token variable">$bus</span><span class="token operator">-&gt;</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CourseMessage</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">renderForm</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin/index.html.twig&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>消费消息</li></ul><p>1.通过命令行的方式</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">php bin<span class="token operator">/</span>console messenger<span class="token punctuation">:</span>consume async <span class="token operator">-</span>vv</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2.通过supervisor守护进程方式</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">通过supervisor操作<span class="token punctuation">:</span></span>
<span class="line"><span class="token punctuation">;</span><span class="token operator">/</span>etc<span class="token operator">/</span>supervisor<span class="token operator">/</span>conf<span class="token operator">.</span>d<span class="token operator">/</span>messenger<span class="token operator">-</span>worker<span class="token operator">.</span>conf</span>
<span class="line"><span class="token punctuation">[</span>program<span class="token punctuation">:</span>messenger<span class="token operator">-</span>consume<span class="token punctuation">]</span></span>
<span class="line">command<span class="token operator">=</span>php <span class="token operator">/</span>path<span class="token operator">/</span>to<span class="token operator">/</span>your<span class="token operator">/</span>app<span class="token operator">/</span>bin<span class="token operator">/</span>console messenger<span class="token punctuation">:</span>consume async <span class="token operator">--</span>time<span class="token operator">-</span>limit<span class="token operator">=</span><span class="token number">3600</span> <span class="token comment">#async 为异步使用的transport</span></span>
<span class="line">user<span class="token operator">=</span>ubuntu</span>
<span class="line">numprocs<span class="token operator">=</span><span class="token number">2</span></span>
<span class="line">startsecs<span class="token operator">=</span><span class="token number">0</span></span>
<span class="line">autostart<span class="token operator">=</span><span class="token constant boolean">true</span></span>
<span class="line">autorestart<span class="token operator">=</span><span class="token constant boolean">true</span></span>
<span class="line">startretries<span class="token operator">=</span><span class="token number">10</span></span>
<span class="line">process_name<span class="token operator">=</span><span class="token operator">%</span><span class="token punctuation">(</span>program_name<span class="token punctuation">)</span>s_<span class="token operator">%</span><span class="token punctuation">(</span>process_num<span class="token punctuation">)</span><span class="token number">02</span>d</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>官方文档(https://symfony.com/doc/current/messenger.html)</p>`,17)]))}const i=n(t,[["render",l],["__file","symfony之消息发布与消费.html.vue"]]),u=JSON.parse('{"path":"/content/php/symfony/symfony%E4%B9%8B%E6%B6%88%E6%81%AF%E5%8F%91%E5%B8%83%E4%B8%8E%E6%B6%88%E8%B4%B9.html","title":"symfony之消息发布与消费","lang":"en-US","frontmatter":{"sidebar":false,"title":"symfony之消息发布与消费","description":"symfony之消息发布与消费"},"headers":[],"git":{},"filePathRelative":"content/php/symfony/symfony之消息发布与消费.md"}');export{i as comp,u as data};
