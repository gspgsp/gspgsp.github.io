import{_ as d,c as i,d as c,o as l}from"./app-CHrRue27.js";const r={};function s(t,e){return l(),i("div",null,e[0]||(e[0]=[c(`<p>docker build 和 docker buildx 策略:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">https://docs.docker.com/reference/cli/docker/build-legacy/</span>
<span class="line">https://docs.docker.com/reference/cli/docker/buildx/build/</span>
<span class="line">  </span>
<span class="line">在go项目使用: https://waynerv.com/posts/building-multi-architecture-images-with-docker-buildx/  //优秀博客</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const a=d(r,[["render",s],["__file","docker-build和docker-buildx策略.html.vue"]]),o=JSON.parse('{"path":"/content/service/docker/docker-build%E5%92%8Cdocker-buildx%E7%AD%96%E7%95%A5.html","title":"docker build 和 docker buildx 策略","lang":"en-US","frontmatter":{"sidebar":false,"title":"docker build 和 docker buildx 策略","description":"docker build 和 docker buildx 策略"},"headers":[],"git":{},"filePathRelative":"content/service/docker/docker-build和docker-buildx策略.md"}');export{a as comp,o as data};
