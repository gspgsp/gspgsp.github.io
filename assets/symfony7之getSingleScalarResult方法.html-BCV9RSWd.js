import{_ as s,c as a,d as e,o as t}from"./app-CHrRue27.js";const p={};function l(i,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h5 id="symfony7之getsinglescalarresult方法" tabindex="-1"><a class="header-anchor" href="#symfony7之getsinglescalarresult方法"><span>symfony7之getSingleScalarResult方法</span></a></h5><p><code>getSingleScalarResult()</code> 是 Doctrine 中 <code>Query</code> 对象的方法之一，用于<strong>返回查询结果中的单个标量值</strong>，比如：</p><ul><li>一个整数数量（如 <code>COUNT()</code> 的结果）；</li><li>一个单个字段的值（比如 <code>MAX(price)</code>）；</li></ul><hr><h3 id="✅-常见用法场景" tabindex="-1"><a class="header-anchor" href="#✅-常见用法场景"><span>✅ 常见用法场景</span></a></h3><h4 id="_1-count" tabindex="-1"><a class="header-anchor" href="#_1-count"><span>1. <code>COUNT(...)</code></span></a></h4><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$count</span> <span class="token operator">=</span> <span class="token variable">$qb</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;COUNT(o.id)&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">getQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">getSingleScalarResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回的是一个字符串，需要手动强转为 <code>int</code>：</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$count</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h4 id="_2-sum-max-min" tabindex="-1"><a class="header-anchor" href="#_2-sum-max-min"><span>2. <code>SUM(...)</code> / <code>MAX(...)</code> / <code>MIN(...)</code></span></a></h4><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$sum</span> <span class="token operator">=</span> <span class="token variable">$qb</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;SUM(o.amount)&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">getQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">getSingleScalarResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 string，例如 &#39;1234.50&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="⚠️-注意事项" tabindex="-1"><a class="header-anchor" href="#⚠️-注意事项"><span>⚠️ 注意事项</span></a></h3><ol><li><p><strong>返回的是字符串</strong>（无论是数字还是其他类型），因此常常需要 <code>(int)</code> 或 <code>(float)</code> 转换；</p></li><li><p><strong>只能用于返回单个结果</strong>，否则抛出异常：</p><blockquote><p><code>Doctrine\\ORM\\NonUniqueResultException</code></p></blockquote></li></ol><hr><h3 id="🚫-不适用的情况" tabindex="-1"><a class="header-anchor" href="#🚫-不适用的情况"><span>🚫 不适用的情况：</span></a></h3><p>如果你查询的是多列、多行（比如列表或多字段结构），应使用：</p><ul><li><code>getResult()</code> → 返回多行多列（数组）</li><li><code>getOneOrNullResult()</code> → 仅用于一个实体对象（或 null）</li><li><code>getArrayResult()</code> → 返回数组结构</li></ul><hr><h5 id="symfony7对于-getsingleresult-的使用" tabindex="-1"><a class="header-anchor" href="#symfony7对于-getsingleresult-的使用"><span>symfony7对于 getSingleResult 的使用</span></a></h5><blockquote><p>在 Symfony 7（Doctrine ORM）中，<code>getSingleResult()</code> <strong>仍然会生效</strong>，即使执行的是一个 <code>SELECT COUNT(...)</code>, <code>SUM(...)</code> 这样的聚合查询，并返回多列别名字段。</p></blockquote><p>来看一下这段代码：</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;COUNT(p.id) as total&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string double-quoted-string">&quot;SUM(CASE WHEN p.status = :accepted THEN 1 ELSE 0 END) as accepted&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string double-quoted-string">&quot;SUM(CASE WHEN p.status = :rejected THEN 1 ELSE 0 END) as rejected&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是一个只会返回一行结果的聚合查询（没有 <code>GROUP BY</code>）, 调用：</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$qb</span><span class="token operator">-&gt;</span><span class="token function">getQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getSingleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>它将返回一个<strong>关联数组</strong>（如果你使用的是 <code>Query::HYDRATE_ARRAY</code> 或默认的 hydrate mode）：</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token punctuation">[</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;total&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;10&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;accepted&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;5&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;rejected&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;1&#39;</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意返回值中的数字是字符串形式（因为 SQL 查询返回的是字符串类型），所以你用：</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token keyword">return</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;intval&#39;</span><span class="token punctuation">,</span> <span class="token variable">$qb</span><span class="token operator">-&gt;</span><span class="token function">getQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getSingleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>是<strong>正确且常见的做法</strong> —— 把这些聚合数值字段全部转为 <code>int</code> 类型。</p><p><code>array_map(&#39;intval&#39;, $array)</code> 会对数组中 <strong>每一个值</strong> 执行 <code>intval()</code> 转换操作，无论键名是什么（键名会保留）。</p><p>例如：</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;total&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;10&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;accepted&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;5&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;rejected&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;1&#39;</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;intval&#39;</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行后 <code>$result</code> 为：</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token punctuation">[</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;total&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;accepted&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;rejected&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="✅-总结" tabindex="-1"><a class="header-anchor" href="#✅-总结"><span>✅ 总结：</span></a></h5><ul><li>✅ 会转换每个 <strong>值</strong> 为整数。</li><li>✅ 键名不变。</li><li>❌ 不会处理嵌套数组（只是浅层转换）。</li></ul><p>如果你只想转换某些字段，可以单独写：</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$qb</span><span class="token operator">-&gt;</span><span class="token function">getQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getSingleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$result</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;total&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$result</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;total&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h5 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明：</span></a></h5><h5 id="如果用的是-dql-doctrine-query-language" tabindex="-1"><a class="header-anchor" href="#如果用的是-dql-doctrine-query-language"><span>如果用的是 DQL（Doctrine Query Language）：</span></a></h5><p><code>getSingleResult()</code> 会返回一个索引数组或对象，取决于你的 DQL 查询和 hydration 方式。</p><h5 id="如果你想确保返回关联数组" tabindex="-1"><a class="header-anchor" href="#如果你想确保返回关联数组"><span>如果你想确保返回关联数组：</span></a></h5><p>你可以显示设置 hydration mode 为 <code>HYDRATE_ARRAY</code>：</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token keyword">return</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;intval&#39;</span><span class="token punctuation">,</span> <span class="token variable">$qb</span><span class="token operator">-&gt;</span><span class="token function">getQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getSingleResult</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Doctrine<span class="token punctuation">\\</span>ORM<span class="token punctuation">\\</span>Query</span><span class="token operator">::</span><span class="token constant">HYDRATE_ARRAY</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>但在使用 <code>QueryBuilder</code> 默认是 <code>HYDRATE_ARRAY</code>，你写法就已经 OK。</p><hr><p>✅ <strong>结论</strong>：</p><ul><li><code>getSingleResult()</code> 在你的这个 SQL 聚合查询中<strong>是生效的</strong>，会返回一行数组，<code>array_map(&#39;intval&#39;, ...)</code> 用于转整型也完全合理。可以放心使用。</li><li>适用于单行数据，而无论是单个字段还是多个字段</li></ul>`,51)]))}const c=s(p,[["render",l],["__file","symfony7之getSingleScalarResult方法.html.vue"]]),r=JSON.parse('{"path":"/content/php/symfony/symfony7%E4%B9%8BgetSingleScalarResult%E6%96%B9%E6%B3%95.html","title":"symfony7之getSingleScalarResult方法","lang":"en-US","frontmatter":{"sidebar":false,"title":"symfony7之getSingleScalarResult方法","head":[["meta",{"name":"title","content":"symfony7之getSingleScalarResult方法"}],["meta",{"name":"description","content":"symfony7之getSingleScalarResult方法"}],["meta",{"name":"keywords","content":"symfony7"}],["meta",{"property":"og:title","content":"symfony7之getSingleScalarResult方法"}],["meta",{"property":"og:description","content":"symfony7之getSingleScalarResult方法"}]]},"headers":[{"level":3,"title":"✅ 常见用法场景","slug":"✅-常见用法场景","link":"#✅-常见用法场景","children":[]},{"level":3,"title":"⚠️ 注意事项","slug":"⚠️-注意事项","link":"#⚠️-注意事项","children":[]},{"level":3,"title":"🚫 不适用的情况：","slug":"🚫-不适用的情况","link":"#🚫-不适用的情况","children":[]}],"git":{},"filePathRelative":"content/php/symfony/symfony7之getSingleScalarResult方法.md"}');export{c as comp,r as data};
