import{_ as n,c as a,d as e,o as p}from"./app-CHrRue27.js";const t={};function l(i,s){return p(),a("div",null,s[0]||(s[0]=[e(`<p>1.按照特殊字符分割字符串</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;a,b,c&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>2.按照长度分割字符串</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;abc&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token function">str_split</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 这个在答题系统用的多，用于分割答案</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>3.利用正则分割字符串</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;a b,c&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token function">preg_split</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/[\\s,]+/&quot;</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>以上的三种方式，涵盖了PHP字符串切割成数组的常见的应用场景。每一个场景PHP都提供了相应的函数解决，我们要根据具体场景来选择适合的函数，即使preg_split也能够解决所有的字符串分割，但是能够避免正则切割的尽量去避免，相比explode、str_split而言效率低很多，因为需要调用正则引擎这是比较耗费资源的。</p>`,7)]))}const c=n(t,[["render",l],["__file","php字符串转数组的三种场景.html.vue"]]),r=JSON.parse('{"path":"/content/php/base/php%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%89%E7%A7%8D%E5%9C%BA%E6%99%AF.html","title":"php字符串转数组的三种场景","lang":"en-US","frontmatter":{"sidebar":false,"title":"php字符串转数组的三种场景","description":"php字符串转数组的三种场景"},"headers":[],"git":{},"filePathRelative":"content/php/base/php字符串转数组的三种场景.md"}');export{c as comp,r as data};
