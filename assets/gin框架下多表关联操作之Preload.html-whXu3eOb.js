import{_ as t,c as l,d as r,a as e,o as d,r as s}from"./app-CHrRue27.js";const o={};function c(m,n){const a=s("BackBtn"),i=s("CommentService");return d(),l("div",null,[n[0]||(n[0]=r('<p>数据库结构如下:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">type Product struct {</span>\n<span class="line">    ID          uint      `gorm:&quot;primarykey&quot;`</span>\n<span class="line">    Name        string    `gorm:&quot;type:varchar(15);default:NULL;comment:名称&quot;`</span>\n<span class="line">    CoverImage  string    `gorm:&quot;type:varchar(255);default:NULL;comment:封面图&quot;`</span>\n<span class="line">    Description string    `gorm:&quot;type:varchar(255);default:NULL;comment:描述&quot;`</span>\n<span class="line">    Detail      string    `gorm:&quot;type:text;default:NULL;comment:详情&quot;`</span>\n<span class="line">    Price       string    `gorm:&quot;type:decimal(10, 2);default:NULL;comment:价格&quot;`</span>\n<span class="line">    Sales       uint      `gorm:&quot;type:bigint;default:NULL;comment:销量&quot;`</span>\n<span class="line">    Remark      uint      `gorm:&quot;type:bigint;default:NULL;comment:评价&quot;`</span>\n<span class="line">    Kind        string    `gorm:&quot;type:varchar(255);default:NULL;comment:品类&quot;`</span>\n<span class="line">    CreatedAt   time.Time `gorm:&quot;type:timestamp;default:NULL;comment:创建时间&quot;`</span>\n<span class="line">    UpdatedAt   time.Time `gorm:&quot;type:timestamp;default:NULL;comment:更新时间&quot;`</span>\n<span class="line"></span>\n<span class="line">    //一对一，注意：references 为主表的外键，foreignKey：为附表的主键，可以大写为struct 字段名，也可以直接小写为数据库对应字段</span>\n<span class="line">    //Category   Kind      `gorm:&quot;foreignKey:ID;references:KindId;&quot;`</span>\n<span class="line"></span>\n<span class="line">    //一对多，注意：references 为主表的主键，foreignKey：为附表的外键</span>\n<span class="line">    //Attributes []ProductAttribute `gorm:&quot;foreignKey:ProductId;references:ID&quot;`</span>\n<span class="line">    Attributes []ProductAttribute `gorm:&quot;foreignKey:product_id;references:id&quot;`</span>\n<span class="line">}</span>\n<span class="line"></span>\n<span class="line">type Kind struct {</span>\n<span class="line">	ID   uint   `gorm:&quot;primarykey&quot;`</span>\n<span class="line">	Name string `gorm:&quot;type:varchar(15);default:NULL;comment:名称&quot;`</span>\n<span class="line">}</span>\n<span class="line"></span>\n<span class="line">type ProductAttribute struct {</span>\n<span class="line">	ID             uint      `gorm:&quot;primarykey;column:id;&quot;`</span>\n<span class="line">	ProductId      string    `gorm:&quot;type:int;default:NULL;comment:产品ID&quot;`</span>\n<span class="line">	Attribute      string    `gorm:&quot;type:varchar(255);default:NULL;comment:属性&quot;`</span>\n<span class="line">	AttributeValue string    `gorm:&quot;type:varchar(255);default:NULL;comment:属性值&quot;`</span>\n<span class="line">	CreatedAt      time.Time `gorm:&quot;type:timestamp;default:NULL;comment:创建时间&quot;`</span>\n<span class="line">	UpdatedAt      time.Time `gorm:&quot;type:timestamp;default:NULL;comment:更新时间&quot;`</span>\n<span class="line">}</span>\n<span class="line"></span>\n<span class="line">①一对一</span>\n<span class="line">//common.Db.Model(&amp;model.InnerProduct{}).Preload(&quot;Category&quot;).Find(&amp;products)</span>\n<span class="line">//common.Db.Model(&amp;model.InnerProduct{}).Joins(&quot;Category&quot;).Find(&amp;products)</span>\n<span class="line"></span>\n<span class="line">这里Preload和Joins 都可以实现关联查询</span>\n<span class="line">②一对多</span>\n<span class="line">common.Db.Preload(&quot;Attributes&quot;).Where(&quot;kind = ? and name like ?&quot;, res.Kind.Kind, &quot;%&quot;+keywords+&quot;%&quot;).Find(&amp;products)</span>\n<span class="line">这里只能用Preload 关联，因为 Attributes 是一个slice</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2)),e(a),e(i)])}const p=t(o,[["render",c],["__file","gin框架下多表关联操作之Preload.html.vue"]]),v=JSON.parse('{"path":"/content/go/gin/gin%E6%A1%86%E6%9E%B6%E4%B8%8B%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E6%93%8D%E4%BD%9C%E4%B9%8BPreload.html","title":"gin框架下多表关联操作之Preload","lang":"en-US","frontmatter":{"sidebar":false,"title":"gin框架下多表关联操作之Preload","description":"gin框架下多表关联操作之Preload"},"headers":[],"git":{},"filePathRelative":"content/go/gin/gin框架下多表关联操作之Preload.md"}');export{p as comp,v as data};
