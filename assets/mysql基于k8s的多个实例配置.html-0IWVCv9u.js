import{_ as n,c as e,d as a,o as l}from"./app-CHrRue27.js";const i={};function d(c,s){return l(),e("div",null,s[0]||(s[0]=[a(`<p>mysql基于k8s的多个实例配置:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">#mysql-cluster.yaml</span>
<span class="line">apiVersion: apps/v1</span>
<span class="line">kind: StatefulSet</span>
<span class="line">metadata:</span>
<span class="line">  name: mysql-cluster</span>
<span class="line">  namespace: default</span>
<span class="line">spec:</span>
<span class="line">  serviceName: &quot;mysql-cluster&quot;</span>
<span class="line">  replicas: 3</span>
<span class="line">  selector:</span>
<span class="line">    matchLabels:</span>
<span class="line">      app: mysql-cluster</span>
<span class="line">  template:</span>
<span class="line">    metadata:</span>
<span class="line">      labels:</span>
<span class="line">        app: mysql-cluster</span>
<span class="line">    spec:</span>
<span class="line">      containers:</span>
<span class="line">      - name: mysql</span>
<span class="line">        image: mysql:8.0</span>
<span class="line">        ports:</span>
<span class="line">        - containerPort: 3306</span>
<span class="line">        env:</span>
<span class="line">        - name: MYSQL_ROOT_PASSWORD</span>
<span class="line">          value: &quot;rootpassword&quot;</span>
<span class="line">        - name: MYSQL_DATABASE</span>
<span class="line">          value: &quot;testdb&quot;</span>
<span class="line">        volumeMounts:</span>
<span class="line">        - name: mysql-data</span>
<span class="line">          mountPath: /var/lib/mysql</span>
<span class="line">  volumeClaimTemplates:</span>
<span class="line">  - metadata:</span>
<span class="line">      name: mysql-data</span>
<span class="line">    spec:</span>
<span class="line">      accessModes: [&quot;ReadWriteOnce&quot;]</span>
<span class="line">      resources:</span>
<span class="line">        requests:</span>
<span class="line">          storage: 1Gi</span>
<span class="line">---</span>
<span class="line">apiVersion: v1</span>
<span class="line">kind: Service</span>
<span class="line">metadata:</span>
<span class="line">  name: mysql-cluster</span>
<span class="line">  namespace: default</span>
<span class="line">spec:</span>
<span class="line">  ports:</span>
<span class="line">  - port: 3306</span>
<span class="line">    targetPort: 3306</span>
<span class="line">    nodePort: 30036</span>
<span class="line">  selector:</span>
<span class="line">    app: mysql-cluster</span>
<span class="line">  type: NodePort</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个只是一个具有多实例的mysql集群，通过nodePort访问数据库</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">$ kubectl apply -f mysql-cluster.yaml</span>
<span class="line">statefulset.apps/mysql-cluster created</span>
<span class="line">service/mysql-cluster created</span>
<span class="line">  </span>
<span class="line">$ kubectl get pods</span>
<span class="line">NAME              READY   STATUS    RESTARTS   AGE</span>
<span class="line">mysql-cluster-0   1/1     Running   0          18s</span>
<span class="line">mysql-cluster-1   1/1     Running   0          14s</span>
<span class="line">mysql-cluster-2   1/1     Running   0          7s</span>
<span class="line">  </span>
<span class="line">$ kubectl get svc mysql-cluster</span>
<span class="line">NAME            TYPE       CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE</span>
<span class="line">mysql-cluster   NodePort   10.101.179.247   &lt;none&gt;        3306:30036/TCP   11m</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以从宿主机使用以下命令连接到集群节点：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">mysql -h &lt;minikube-ip&gt; -P 30036 -u root -p</span>
<span class="line">其中 &lt;minikube-ip&gt; 可以通过以下命令获取：</span>
<span class="line">$ minikube ip</span>
<span class="line">192.168.49.2</span>
<span class="line">  </span>
<span class="line">使用: $ mysql -h 192.168.49.2 -P 30036 -u root -p</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面配置service端口解析:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">ports:</span>
<span class="line">  - port: 3306         # Kubernetes 服务的逻辑端口</span>
<span class="line">    targetPort: 3306   # Pod 内容器的端口</span>
<span class="line">    nodePort: 30036    # 暴露到宿主机的高位端口</span>
<span class="line">  </span>
<span class="line">port: 3306</span>
<span class="line">表示服务的逻辑端口，客户端通过此端口访问服务。</span>
<span class="line">当客户端发送请求到服务时，它会通过这个端口进行访问。</span>
<span class="line">在 Kubernetes 集群内，其他 Pod 可以通过 mysql-cluster:3306 访问该服务。</span>
<span class="line">  </span>
<span class="line">targetPort: 3306</span>
<span class="line">表示后端容器的端口，即运行在 Pod 内部容器的实际端口。</span>
<span class="line">服务会将从 port 接收的请求转发到 Pod 中监听 targetPort 的容器。</span>
<span class="line">  </span>
<span class="line">nodePort: 30036</span>
<span class="line">表示服务暴露在 Kubernetes 节点上的固定端口。</span>
<span class="line">通过 NodePort 类型的服务，外部客户端可以通过 NodeIP:nodePort 访问该服务。</span>
<span class="line">例如，如果 minikube ip 的值是 192.168.49.2，则可以通过 192.168.49.2:30036 从外部访问 MySQL。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)]))}const r=n(i,[["render",d],["__file","mysql基于k8s的多个实例配置.html.vue"]]),t=JSON.parse('{"path":"/content/database/mysql/mysql%E5%9F%BA%E4%BA%8Ek8s%E7%9A%84%E5%A4%9A%E4%B8%AA%E5%AE%9E%E4%BE%8B%E9%85%8D%E7%BD%AE.html","title":"mysql基于k8s的多个实例配置","lang":"en-US","frontmatter":{"sidebar":false,"title":"mysql基于k8s的多个实例配置","description":"mysql基于k8s的多个实例配置"},"headers":[],"git":{},"filePathRelative":"content/database/mysql/mysql基于k8s的多个实例配置.md"}');export{r as comp,t as data};
