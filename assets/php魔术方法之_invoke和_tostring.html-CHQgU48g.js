import{_ as n,c as a,d as p,o as e}from"./app-CHrRue27.js";const l={};function t(i,s){return e(),a("div",null,s[0]||(s[0]=[p(`<p>__tostring()魔术方法 　　将一个对象当做一个字符串来使用时，会自动调用该方法，并且在该方法中，可以返回一定的字符串，以表明该对象转换为字符串之后的结果。该魔术方法比较常用。 　　注意：如果没有定义该方法，则对象无法当做字符串来使用！</p><p>类里面未定义__tostring()方法的例子：</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;display_errors&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name-definition class-name">A</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token variable">$name</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token variable">$age</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token variable">$sex</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$sex</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">name</span> <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">age</span> <span class="token operator">=</span> <span class="token variable">$age</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">sex</span> <span class="token operator">=</span> <span class="token variable">$sex</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$obj1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;周伯通&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">echo</span> <span class="token variable">$obj1</span><span class="token punctuation">;</span>    <span class="token comment">//echo 后面为字符串，而对象不是字符串，会报错</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$v1</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;asd&quot;</span> <span class="token operator">.</span> <span class="token variable">$obj1</span><span class="token punctuation">;</span>  <span class="token comment">//.为字符串连接符，会报错</span></span>
<span class="line"><span class="token variable">$v2</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;123&quot;</span> <span class="token operator">+</span> <span class="token variable">$obj1</span><span class="token punctuation">;</span>  <span class="token comment">//+为加法运算符，会报错</span></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span>
<span class="line">这样会报错,那么我们加入__tostring()方法</span>
<span class="line"></span>
<span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;display_errors&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name-definition class-name">A</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token variable">$name</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token variable">$age</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token variable">$sex</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$sex</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">name</span> <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">age</span> <span class="token operator">=</span> <span class="token variable">$age</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">sex</span> <span class="token operator">=</span> <span class="token variable">$sex</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function-definition function">__tostring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;姓名：&quot;</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$str</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">&quot;年龄：&quot;</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">age</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$str</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">&quot;，性别：&quot;</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">sex</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> <span class="token variable">$str</span><span class="token punctuation">;</span>   <span class="token comment">//这里可以返回“任何字符串内容”</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$obj1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">echo</span> <span class="token variable">$obj1</span><span class="token punctuation">;</span>    <span class="token comment">//调用__tostring(),不会报错</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span>
<span class="line">姓名：张三年龄：28，性别：男</span>
<span class="line">可以看到__tostring自动将对象转字符串了</span>
<span class="line"></span>
<span class="line">__invoke()魔术方法</span>
<span class="line">　　将对象当作函数来使用时，会自动调用该方法。通常不推荐这么做。</span>
<span class="line"></span>
<span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name-definition class-name">A</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function-definition function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;br /&gt;函数来调用会出发这里哦！&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$obj</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$obj</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//此时就会调用类中的方法：__invoke()</span></span>
<span class="line"></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)]))}const c=n(l,[["render",t],["__file","php魔术方法之_invoke和_tostring.html.vue"]]),r=JSON.parse('{"path":"/content/php/base/php%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95%E4%B9%8B_invoke%E5%92%8C_tostring.html","title":"php魔术方法之_invoke和_tostring_call","lang":"en-US","frontmatter":{"sidebar":false,"title":"php魔术方法之_invoke和_tostring_call","description":"php魔术方法之_invoke和_tostring_call"},"headers":[],"git":{},"filePathRelative":"content/php/base/php魔术方法之_invoke和_tostring.md"}');export{c as comp,r as data};
