import{_ as n,c as a,d as e,o as p}from"./app-CHrRue27.js";const t={};function l(c,s){return p(),a("div",null,s[0]||(s[0]=[e(`<p>nuxt3 获取接口数据遇到的问题，通过useFetch 在测试服务器没法获取到数据，但是 $fetch 可以；不知道为什么，设置server:false的时候 是可以拿到数据的，本地环境 dev/build 都是没问题的，但是放到测试服务器就有问题，不知道是不是和nodejs 版本有关，我本地是：v19.3.0 测试环境是:v18.15.0</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCourseDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">     <span class="token function-variable function">getCourseDetail</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">       <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">$fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api/course/&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">         <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span></span>
<span class="line">         <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">&#39;X-Requested-With&#39;</span><span class="token operator">:</span> <span class="token string">&#39;XMLHttpRequest&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">       <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">         <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">               <span class="token keyword">this</span><span class="token punctuation">.</span>courseDetail<span class="token punctuation">.</span>id <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>id</span>
<span class="line">               <span class="token keyword">this</span><span class="token punctuation">.</span>courseDetail<span class="token punctuation">.</span>title <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>title</span>
<span class="line">         <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">           <span class="token keyword">this</span><span class="token punctuation">.</span>$toast<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>msg<span class="token punctuation">)</span></span>
<span class="line">         <span class="token punctuation">}</span></span>
<span class="line">       <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">         <span class="token keyword">this</span><span class="token punctuation">.</span>$toast<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;require api failed&#39;</span><span class="token punctuation">)</span></span>
<span class="line">       <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">       <span class="token comment">// const {data, error} = await useFetch(&#39;/api/course/&#39; + this.$route.params.id, {</span></span>
<span class="line">       <span class="token comment">//   method: &#39;get&#39;,</span></span>
<span class="line">       <span class="token comment">//   headers: {&#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;},</span></span>
<span class="line">       <span class="token comment">// })</span></span>
<span class="line"></span>
<span class="line">       <span class="token comment">// if (error._value) {</span></span>
<span class="line">       <span class="token comment">//   this.$toast.error(error._value.data.msg)</span></span>
<span class="line">       <span class="token comment">// } else {</span></span>
<span class="line">       <span class="token comment">//   if (data._value.code === 0) {</span></span>
<span class="line">       <span class="token comment">//     console.log(11111)</span></span>
<span class="line">       <span class="token comment">//     this.courseDetail.id = data._value.data.id</span></span>
<span class="line">       <span class="token comment">//     this.courseDetail.title = data._value.data.title</span></span>
<span class="line">       <span class="token comment">//   } else {</span></span>
<span class="line">       <span class="token comment">//     this.$toast.info(data._value.msg)</span></span>
<span class="line">       <span class="token comment">//   }</span></span>
<span class="line">       <span class="token comment">// }</span></span>
<span class="line">     <span class="token punctuation">}</span></span>
<span class="line">     <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const o=n(t,[["render",l],["__file","nuxt3在测试环境遇到useFetch数据获取不到的问题.html.vue"]]),u=JSON.parse('{"path":"/content/front/js/nuxt3%E5%9C%A8%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E9%81%87%E5%88%B0useFetch%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.html","title":"nuxt3在测试环境遇到useFetch数据获取不到的问题","lang":"en-US","frontmatter":{"sidebar":false,"title":"nuxt3在测试环境遇到useFetch数据获取不到的问题","description":"nuxt3在测试环境遇到useFetch数据获取不到的问题"},"headers":[],"git":{},"filePathRelative":"content/front/js/nuxt3在测试环境遇到useFetch数据获取不到的问题.md"}');export{o as comp,u as data};
