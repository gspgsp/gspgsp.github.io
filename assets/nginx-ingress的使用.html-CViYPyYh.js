import{_ as t,c as p,d as l,a as s,o as c,r as a}from"./app-CHrRue27.js";const o={};function r(u,n){const e=a("BackBtn"),i=a("CommentService");return c(),p("div",null,[n[0]||(n[0]=l(`<p>nginx-ingress的使用</p><p>为什么用到nginx-ingress？，在配置完k8s以后，比如说我通过go开发的api对外提供服务，我可能需要对外提供服务，在这个过程中，需要将IP地址解析到域名，开始我准备使用istio配置的， 但是后来由于版本的问题，一直有问题，我的k8s是1.18.6，后来想到nginx-ingress，这个一定要注意版本的选择，在github 上基本上只列出了k8s1.19+以上的版本的兼容信息，我就选择了 v0.45.0版本，结果没有任何问题</p><p>这是我的ingress配置文件</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token comment"># test-ingress.yaml</span></span>
<span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1beta1</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> Ingress</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>network<span class="token punctuation">-</span>ingress</span>
<span class="line">  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>ingress<span class="token punctuation">-</span>namespace</span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token comment"># 1.18及以后版本需要通过ingressClassName指定使用的controller，或者在ingressClass中设置默认controller，否则ingress不生效</span></span>
<span class="line">  <span class="token key atrule">ingressClassName</span><span class="token punctuation">:</span> nginx</span>
<span class="line">  <span class="token key atrule">rules</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> ingress.xxx.com</span>
<span class="line">      <span class="token key atrule">http</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">paths</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /</span>
<span class="line">            <span class="token key atrule">backend</span><span class="token punctuation">:</span></span>
<span class="line">              <span class="token key atrule">serviceName</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>ingress<span class="token punctuation">-</span>app<span class="token punctuation">-</span>service</span>
<span class="line">              <span class="token key atrule">servicePort</span><span class="token punctuation">:</span> <span class="token number">8082</span></span>
<span class="line">  <span class="token key atrule">tls</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">hosts</span><span class="token punctuation">:</span></span>
<span class="line">       <span class="token punctuation">-</span> ingress.xxx.com</span>
<span class="line">      <span class="token key atrule">secretName</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>ingress<span class="token punctuation">-</span>app<span class="token punctuation">-</span>secret</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后执行：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">[root@k8smaster k8s-nginx-ingress]# kubectl apply -f network-ingress.yaml</span>
<span class="line">ingress.networking.k8s.io/nginx-network-ingress created</span>
<span class="line"></span>
<span class="line">检查域名映射情况:</span>
<span class="line">[root@k8smaster k8s-nginx-ingress]# kubectl get ingresses -n nginx-ingress-namespace</span>
<span class="line">NAME                    CLASS   HOSTS                   ADDRESS           PORTS     AGE</span>
<span class="line">nginx-network-ingress   nginx   ingress.xxx.com           nodeIp          80, 443   2m38s</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于配置了tls，所以这里可以通过https访问，至于怎么配置https我在下一篇会讲到</p>`,7)),s(e),s(i)])}const k=t(o,[["render",r],["__file","nginx-ingress的使用.html.vue"]]),m=JSON.parse('{"path":"/content/service/k8s/nginx-ingress%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"nginx-ingress的使用","lang":"en-US","frontmatter":{"sidebar":false,"title":"nginx-ingress的使用","description":"nginx-ingress的使用"},"headers":[],"git":{},"filePathRelative":"content/service/k8s/nginx-ingress的使用.md"}');export{k as comp,m as data};
