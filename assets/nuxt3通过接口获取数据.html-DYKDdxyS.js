import{_ as s,c as a,d as t,o as p}from"./app-CHrRue27.js";const e={};function o(c,n){return p(),a("div",null,n[0]||(n[0]=[t(`<p>nuxt3通过接口获取数据</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// getCourseDetail: async function () {</span></span>
<span class="line">    <span class="token comment">//   let data = await useFetch(&#39;/api/course-detail?id=&#39;+this.$route.query.id)</span></span>
<span class="line">    <span class="token comment">//   console.log(&#39;data is:&#39;, data)</span></span>
<span class="line">    <span class="token comment">// }</span></span>
<span class="line">    <span class="token comment">// getCourseDetail:  function () {</span></span>
<span class="line">    <span class="token comment">//   let data =  useFetch(&#39;/api/course-detail&#39;, {query: {id:this.$route.query.id}})</span></span>
<span class="line">    <span class="token comment">//   console.log(&#39;data is:&#39;, data)</span></span>
<span class="line">    <span class="token comment">// }</span></span>
<span class="line"></span>
<span class="line">    <span class="token function-variable function">getCourseDetail</span><span class="token operator">:</span>  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">useFetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api/course-detail&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data is:&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>_value<span class="token punctuation">.</span>data<span class="token punctuation">)</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data is:&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>_value<span class="token punctuation">.</span>code<span class="token punctuation">)</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">isLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">注意useFetch 后的接口地址一定要加 <span class="token operator">/</span> <span class="token function">，否则就是相对地址，可能会被自动添加前缀，导致接口报错，泪奔呀。。。，比如：useFetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api/course-detail&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token function">写成了useFetch</span><span class="token punctuation">(</span><span class="token string">&#39;api/course-detail&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>，那么最后接口地址可能变成了：course<span class="token operator">/</span>api<span class="token operator">/</span>course<span class="token operator">-</span>detail<span class="token punctuation">,</span>而不是 api<span class="token operator">/</span>course<span class="token operator">-</span>detail</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const i=s(e,[["render",o],["__file","nuxt3通过接口获取数据.html.vue"]]),u=JSON.parse('{"path":"/content/front/js/nuxt3%E9%80%9A%E8%BF%87%E6%8E%A5%E5%8F%A3%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE.html","title":"nuxt3通过接口获取数据","lang":"en-US","frontmatter":{"sidebar":false,"title":"nuxt3通过接口获取数据","description":"nuxt3通过接口获取数据"},"headers":[],"git":{},"filePathRelative":"content/front/js/nuxt3通过接口获取数据.md"}');export{i as comp,u as data};
