import{_ as s,c as l,d as n,o as t}from"./app-CHrRue27.js";const a={};function i(c,e){return t(),l("div",null,e[0]||(e[0]=[n(`<p>使用display: flex;属性时，Flex容器的默认行为是让其子元素填充整个可用空间。如果你想要根据内容确定宽度，而不是整行，可以考虑使用以下方法：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">使用inline-flex： 将display: flex;更改为display: inline-flex;。这会使Flex容器变成行内元素，根据内容调整宽度。</span>
<span class="line">.flex-container {</span>
<span class="line">  display: inline-flex;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const d=s(a,[["render",i],["__file","css之设置flex元组的子元素根据自生内容占宽.html.vue"]]),p=JSON.parse('{"path":"/content/front/html/css%E4%B9%8B%E8%AE%BE%E7%BD%AEflex%E5%85%83%E7%BB%84%E7%9A%84%E5%AD%90%E5%85%83%E7%B4%A0%E6%A0%B9%E6%8D%AE%E8%87%AA%E7%94%9F%E5%86%85%E5%AE%B9%E5%8D%A0%E5%AE%BD.html","title":"css之设置flex元组的子元素根据自生内容占宽","lang":"en-US","frontmatter":{"sidebar":false,"title":"css之设置flex元组的子元素根据自生内容占宽","description":"css之设置flex元组的子元素根据自生内容占宽"},"headers":[],"git":{},"filePathRelative":"content/front/html/css之设置flex元组的子元素根据自生内容占宽.md"}');export{d as comp,p as data};
