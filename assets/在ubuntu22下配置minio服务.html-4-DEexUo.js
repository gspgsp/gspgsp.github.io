import{_ as v,c as b,d as l,b as g,a as e,g as a,r as i,o as h,f as s}from"./app-CHrRue27.js";const x={};function k(y,n){const t=i("Code"),d=i("Message"),p=i("Key"),r=i("BucketName"),c=i("Resource"),o=i("RequestId"),u=i("HostId"),m=i("Error");return h(),b("div",null,[n[13]||(n[13]=l(`<h3 id="在ubuntu22下配置minio服务" tabindex="-1"><a class="header-anchor" href="#在ubuntu22下配置minio服务"><span>在ubuntu22下配置minio服务</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">vim docker-compose.yml (这里不需要加 version信息，不然启动会报 docker-compose.yml: \`version\` is obsolete)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>添加如下内容:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">services:</span>
<span class="line">minio:</span>
<span class="line">image: minio/minio:latest</span>
<span class="line">container_name: minio</span>
<span class="line">ports:</span>
<span class="line">- &quot;9002:9000&quot;  # API 端口 (宿主机访问需要的话保留)</span>
<span class="line">- &quot;9003:9001&quot;  # 控制台端口</span>
<span class="line">environment:</span>
<span class="line">MINIO_ROOT_USER: admin</span>
<span class="line">MINIO_ROOT_PASSWORD: secret123</span>
<span class="line">volumes:</span>
<span class="line">- minio_data:/data</span>
<span class="line">command: server /data --console-address &quot;:9001&quot;</span>
<span class="line">restart: unless-stopped</span>
<span class="line">networks:</span>
<span class="line">- docker_network-internal   # ✅ 和 symfony 一样的网络</span>
<span class="line"></span>
<span class="line">volumes:</span>
<span class="line">minio_data:</span>
<span class="line"></span>
<span class="line">networks:</span>
<span class="line">docker_network-internal:        # ✅ 定义内部网络</span>
<span class="line">external: true         # ⚠️ 如果这个网络已经在 Symfony 的 compose 文件里定义过，就加 external</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">docker-compose up -d</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看容器运行状态:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">$ docker ps</span>
<span class="line">CONTAINER ID   IMAGE                    COMMAND                  CREATED          STATUS          PORTS                                                                                  NAMES</span>
<span class="line">d4ee821f0460   minio/minio:latest       &quot;/usr/bin/docker-ent…&quot;   51 seconds ago   Up 50 seconds   0.0.0.0:9002-&gt;9000/tcp, :::9002-&gt;9000/tcp, 0.0.0.0:9003-&gt;9001/tcp, :::9003-&gt;9001/tcp   minio</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>资源访问，默认访问会报如下错误</p>`,9)),g("blockquote",null,[e(m,null,{default:a(()=>[e(t,null,{default:a(()=>n[0]||(n[0]=[s("AccessDenied")])),_:1}),n[7]||(n[7]=s()),e(d,null,{default:a(()=>n[1]||(n[1]=[s("Access Denied.")])),_:1}),n[8]||(n[8]=s()),e(p,null,{default:a(()=>n[2]||(n[2]=[s("Artificial_Intelligence_(AI)_and_AI-assisted_technology_in_publishing.mp4")])),_:1}),n[9]||(n[9]=s()),e(r,null,{default:a(()=>n[3]||(n[3]=[s("media")])),_:1}),n[10]||(n[10]=s()),e(c,null,{default:a(()=>n[4]||(n[4]=[s("/media/Artificial_Intelligence_(AI)_and_AI-assisted_technology_in_publishing.mp4")])),_:1}),n[11]||(n[11]=s()),e(o,null,{default:a(()=>n[5]||(n[5]=[s("1866451F7FF248B7")])),_:1}),n[12]||(n[12]=s()),e(u,null,{default:a(()=>n[6]||(n[6]=[s("dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8")])),_:1})]),_:1})]),n[14]||(n[14]=l(`<p>需要设置内容为public，默认是不能对外访问的</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># Mac / Linux</span>
<span class="line">wget https://dl.min.io/client/mc/release/linux-amd64/mc</span>
<span class="line">chmod +x mc</span>
<span class="line">sudo mv mc /usr/local/bin/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加别名</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">mc alias set localminio http://localhost:9002 admin secret123</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将 Bucket 设置为公开（匿名访问）</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">mc anonymous set download localminio/media</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>设置为私有</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">mc anonymous set none localminio/media</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>参数说明:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">download → 允许匿名下载（公开读取）</span>
<span class="line">media → 你的 Bucket 名称</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>验证:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">$ mc anonymous list localminio/media</span>
<span class="line">media/* =&gt; readonly</span>
<span class="line"></span>
<span class="line">    返回 Bucket 对象列表</span>
<span class="line">    访问 URL 就不再报 Access Denied</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="使用问题" tabindex="-1"><a class="header-anchor" href="#使用问题"><span>使用问题</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">发现第一次上传图片的size一直为0,然后我手动上传一张图片</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="上传图片并设置-mime" tabindex="-1"><a class="header-anchor" href="#上传图片并设置-mime"><span>上传图片并设置 MIME</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">mc cp --attr &quot;Content-Type=image/jpeg&quot; ./image.jpg localminio/media/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后再通过控制面板上传就可以了，不知道为什么. 但是通过控制面板上传视频的时候是可以的.</p><hr><h4 id="在项目中使用-使用s3上传" tabindex="-1"><a class="header-anchor" href="#在项目中使用-使用s3上传"><span>在项目中使用,使用S3上传</span></a></h4><ul><li><p>symfony7下使用, 安装包:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">composer require aws/aws-sdk-php</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>环境变量:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">MINIO_ENDPOINT=http://minio:9000</span>
<span class="line">MINIO_ACCESS_KEY=admin</span>
<span class="line">MINIO_SECRET_KEY=secret123</span>
<span class="line">MINIO_BUCKET=media</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>测试路由:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">#[Route(&#39;/test&#39;, name: &#39;test&#39;, methods: [&#39;GET&#39;])]</span>
<span class="line">public function test()</span>
<span class="line">{</span>
<span class="line">$s3 = new S3Client([</span>
<span class="line">&#39;version&#39;     =&gt; &#39;latest&#39;,</span>
<span class="line">&#39;region&#39;      =&gt; &#39;us-east-1&#39;, // 只需填写任意字符串</span>
<span class="line">&#39;endpoint&#39;    =&gt; $_ENV[&#39;MINIO_ENDPOINT&#39;],</span>
<span class="line">&#39;use_path_style_endpoint&#39; =&gt; true, // MinIO 必须开启 path style</span>
<span class="line">&#39;credentials&#39; =&gt; [</span>
<span class="line">&#39;key&#39;    =&gt; $_ENV[&#39;MINIO_ACCESS_KEY&#39;],</span>
<span class="line">&#39;secret&#39; =&gt; $_ENV[&#39;MINIO_SECRET_KEY&#39;],</span>
<span class="line">],</span>
<span class="line">]);</span>
<span class="line"></span>
<span class="line">    //$filePath = $this-&gt;getParameter(&#39;kernel.project_dir&#39;) . &#39;/public/images/logo_test.png&#39;;</span>
<span class="line">    $filePath   = $this-&gt;getParameter(&#39;kernel.project_dir&#39;) . &#39;/public/images/publishing.mp4&#39;;</span>
<span class="line">    $bucket     = $_ENV[&#39;MINIO_BUCKET&#39;];</span>
<span class="line">    //$key      = &#39;uploads/example.jpg&#39;;</span>
<span class="line">    $key        = &#39;uploads/wuhan.mp4&#39;;</span>
<span class="line"></span>
<span class="line">    $s3-&gt;putObject([</span>
<span class="line">        &#39;Bucket&#39; =&gt; $bucket,</span>
<span class="line">        &#39;Key&#39;    =&gt; $key,</span>
<span class="line">        &#39;SourceFile&#39; =&gt; $filePath,</span>
<span class="line">        &#39;ACL&#39;    =&gt; &#39;public-read&#39;, // 公开访问</span>
<span class="line">    ]);</span>
<span class="line"></span>
<span class="line">    echo &quot;File uploaded: {$key}&quot;;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>访问上传图片:</p><blockquote><p>http://localhost:9002/media/uploads/example.jpg</p></blockquote></li></ul><hr><h4 id="相关拓展" tabindex="-1"><a class="header-anchor" href="#相关拓展"><span>相关拓展</span></a></h4><ul><li>视频播放配置</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;video</span>
<span class="line">src=&quot;http://localhost:9002/media/Artificial_Intelligence_(AI)_and_AI-assisted_technology_in_publishing.mp4&quot;</span>
<span class="line">autoplay muted playsinline controls&gt;</span>
<span class="line">&lt;/video&gt;</span>
<span class="line"></span>
<span class="line">其中:</span>
<span class="line">controls</span>
<span class="line">必须要有，不然啥都没有</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="什么是s3" tabindex="-1"><a class="header-anchor" href="#什么是s3"><span>什么是s3</span></a></h4><p>S3 是什么，以及为什么 MinIO / Laravel / Symfony 里老是提到它。</p><h5 id="_1-s3-的本质" tabindex="-1"><a class="header-anchor" href="#_1-s3-的本质"><span><strong>1. S3 的本质</strong></span></a></h5><ul><li><strong>S3</strong> 全称：<strong>Amazon Simple Storage Service</strong></li><li>是 <strong>亚马逊云（AWS）</strong> 提供的一种 <strong>对象存储服务</strong></li><li>类似网盘，但专门为程序和服务器使用，而不是人手动上传/下载</li></ul><p><strong>特点：</strong></p><ul><li>以 <strong>Bucket（桶）</strong> 组织文件</li><li>文件叫 <strong>Object（对象）</strong>，有 <code>Key</code>（路径+文件名）</li><li>访问通过 <strong>HTTP(S) API</strong></li><li>可以存放不限大小、数量的文件</li><li>提供权限控制、临时签名 URL、版本管理等</li></ul><h5 id="_2-s3-api" tabindex="-1"><a class="header-anchor" href="#_2-s3-api"><span><strong>2. S3 API</strong></span></a></h5><ul><li><strong>S3 API</strong> 是 Amazon 定义的一套 <strong>HTTP 接口规范</strong></li><li>全世界几乎所有对象存储（阿里 OSS、腾讯 COS、七牛云 Kodo、MinIO…）都 <strong>兼容 S3 API</strong></li><li>这样一来，开发者只需要学会 S3 的 SDK 或 API，就能无缝切换存储服务</li></ul><p><strong>例子：上传一个文件 (HTTP PUT 请求)</strong></p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http" data-title="http"><pre><code><span class="line"><span class="token request-line"><span class="token method property">PUT</span> <span class="token request-target url">/mybucket/uploads/photo.jpg</span> <span class="token http-version property">HTTP/1.1</span></span></span>
<span class="line"><span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">s3.amazonaws.com</span></span></span>
<span class="line"><span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span> <span class="token header-value">AWS4-HMAC-SHA256 Credential=xxxx</span></span></span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">1234</span></span></span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">image/jpeg</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-minio-与-s3-的关系" tabindex="-1"><a class="header-anchor" href="#_3-minio-与-s3-的关系"><span><strong>3. MinIO 与 S3 的关系</strong></span></a></h5><ul><li>MinIO 并不是 AWS 的一部分</li><li>它是一个开源项目，目标就是 <strong>100% 兼容 S3 API</strong></li><li>这样，你用 <strong>AWS SDK / S3 SDK</strong> 写的代码，不改动就能用 MinIO</li></ul><p>换句话说： 👉 MinIO = <strong>自己搭建一个小型的 AWS S3</strong></p><h5 id="_4-在-laravel-symfony-里为什么用-s3-驱动" tabindex="-1"><a class="header-anchor" href="#_4-在-laravel-symfony-里为什么用-s3-驱动"><span><strong>4. 在 Laravel / Symfony 里为什么用 <code>s3</code> 驱动</strong></span></a></h5><ul><li><p>Laravel 的 <strong>filesystem</strong> 是基于 <strong>Flysystem</strong></p></li><li><p>Flysystem 内置很多适配器：<code>local</code>、<code>ftp</code>、<code>sftp</code>、<code>s3</code>…</p></li><li><p><code>s3</code> 驱动的意思是：<strong>通过 S3 API 访问对象存储</strong></p></li><li><p>所以：</p><ul><li>配 AWS → <code>s3</code></li><li>配 MinIO → <code>s3</code></li><li>配七牛云（兼容 S3）→ 也用 <code>s3</code></li></ul></li></ul><h5 id="_5-举个例子" tabindex="-1"><a class="header-anchor" href="#_5-举个例子"><span><strong>5. 举个例子</strong></span></a></h5><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token class-name static-context">Storage</span><span class="token operator">::</span><span class="token function">disk</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;s3&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;hello.txt&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>如果你配置了 AWS S3 → 存到 AWS</li><li>配了 MinIO → 存到 MinIO</li><li>配了七牛云（兼容 S3）→ 存到七牛云</li></ul><p>因为大家都兼容 <strong>S3 API</strong>，所以 Laravel/Flysystem 只需要一个 <code>s3</code> 驱动即可。</p><hr><p>✅ <strong>总结</strong>：</p><ul><li><strong>S3 = Amazon 的对象存储服务</strong></li><li><strong>S3 API = 一套事实上的对象存储行业标准</strong></li><li>MinIO 兼容 S3 API，所以 Laravel/Symfony 里配置 <code>s3</code> 驱动就能直接用 MinIO</li></ul>`,48))])}const I=v(x,[["render",k],["__file","在ubuntu22下配置minio服务.html.vue"]]),S=JSON.parse('{"path":"/content/other/spread/%E5%9C%A8ubuntu22%E4%B8%8B%E9%85%8D%E7%BD%AEminio%E6%9C%8D%E5%8A%A1.html","title":"在ubuntu22下配置minio服务","lang":"en-US","frontmatter":{"sidebar":false,"title":"在ubuntu22下配置minio服务","head":[["meta",{"name":"title","content":"在ubuntu22下配置minio服务"}],["meta",{"name":"description","content":"在ubuntu22下配置minio服务"}],["meta",{"name":"keywords","content":"minio"}],["meta",{"property":"og:title","content":"在ubuntu22下配置minio服务"}],["meta",{"property":"og:description","content":"在ubuntu22下配置minio服务"}]]},"headers":[{"level":3,"title":"在ubuntu22下配置minio服务","slug":"在ubuntu22下配置minio服务","link":"#在ubuntu22下配置minio服务","children":[]}],"git":{},"filePathRelative":"content/other/spread/在ubuntu22下配置minio服务.md"}');export{I as comp,S as data};
