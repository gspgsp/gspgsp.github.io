import{_ as t,c as n,d as e,o as a}from"./app-CHrRue27.js";const l={};function i(r,s){return a(),n("div",null,s[0]||(s[0]=[e(`<h3 id="ssl和tls区别" tabindex="-1"><a class="header-anchor" href="#ssl和tls区别"><span>SSL和TLS区别</span></a></h3><p>SSL 和 TLS 经常被混用，但它们其实有区别，而且 TLS 可以看作是 SSL 的升级版。我们可以从几个方面来理解它们的区别：</p><h4 id="_1-定义" tabindex="-1"><a class="header-anchor" href="#_1-定义"><span>1. <strong>定义</strong></span></a></h4><ul><li><strong>SSL (Secure Sockets Layer)</strong>：由 Netscape 开发的加密协议，用于在客户端和服务器之间建立安全连接。历史版本有 SSL 2.0、SSL 3.0。</li><li><strong>TLS (Transport Layer Security)</strong>：SSL 的继任者，由 IETF 标准化，更安全、更高效。TLS 1.0~1.3 版本中，1.2 和 1.3 最常用。</li></ul><h4 id="_2-安全性" tabindex="-1"><a class="header-anchor" href="#_2-安全性"><span>2. <strong>安全性</strong></span></a></h4><ul><li><p>SSL 已经被认为不安全：</p><ul><li>SSL 2.0 有多种漏洞，已经废弃。</li><li>SSL 3.0 存在 POODLE 攻击漏洞。</li></ul></li><li><p>TLS 修复了 SSL 的很多问题，并且支持更强的加密算法。</p></li></ul><h4 id="_3-协议版本" tabindex="-1"><a class="header-anchor" href="#_3-协议版本"><span>3. <strong>协议版本</strong></span></a></h4><table><thead><tr><th>协议</th><th>发布年份</th><th>特点</th></tr></thead><tbody><tr><td>SSL 2.0</td><td>1995</td><td>弱加密，不推荐使用</td></tr><tr><td>SSL 3.0</td><td>1996</td><td>修复部分漏洞，但仍有安全隐患</td></tr><tr><td>TLS 1.0</td><td>1999</td><td>SSL 3.0 升级版，支持更强算法</td></tr><tr><td>TLS 1.1</td><td>2006</td><td>弱加密改进，支持更安全模式</td></tr><tr><td>TLS 1.2</td><td>2008</td><td>常用版本，支持 AEAD 加密和 SHA-2</td></tr><tr><td>TLS 1.3</td><td>2018</td><td>连接握手更快、更安全，去掉不安全算法</td></tr></tbody></table><h4 id="_4-握手方式" tabindex="-1"><a class="header-anchor" href="#_4-握手方式"><span>4. <strong>握手方式</strong></span></a></h4><ul><li><p><strong>SSL</strong>：</p><ul><li>允许多种加密套件，但某些套件不安全。</li><li>握手过程较复杂，通信加密过程较慢。</li></ul></li><li><p><strong>TLS</strong>：</p><ul><li>改进握手流程（TLS 1.3 更简化，只需一次 RTT）。</li><li>强制使用更安全的加密算法，防止降级攻击。</li></ul></li></ul><h4 id="_5-协议兼容性" tabindex="-1"><a class="header-anchor" href="#_5-协议兼容性"><span>5. <strong>协议兼容性</strong></span></a></h4><ul><li>TLS 向下兼容 SSL，但通常现代浏览器和服务器只支持 TLS。</li><li>所以你现在在浏览器看到的 <code>https://</code>，实际上用的是 TLS，而不是传统 SSL。</li></ul><hr><h4 id="总结一句话" tabindex="-1"><a class="header-anchor" href="#总结一句话"><span><strong>总结一句话</strong></span></a></h4><blockquote><p><strong>TLS 是 SSL 的安全升级版，支持更强加密算法和更高效的握手，SSL 已经过时。</strong></p></blockquote><hr><h3 id="案例" tabindex="-1"><a class="header-anchor" href="#案例"><span>案例:</span></a></h3><p>在 <strong>现代 Nginx</strong> 配置中，<code>ssl</code> 这个标记 <strong>在某些情况下仍然需要，但其意义已经和以前略有不同</strong>：</p><hr><h4 id="_1-作用" tabindex="-1"><a class="header-anchor" href="#_1-作用"><span>1. <strong>作用</strong></span></a></h4><ul><li><p><code>listen 443 ssl;</code></p><ul><li>告诉 Nginx 该端口是 HTTPS，需要使用证书进行加密。</li><li>如果不加 <code>ssl</code>，Nginx 会把这个端口当作普通 HTTP（明文）端口，即使你配置了证书，也不会启用 TLS。</li></ul></li><li><p>所以它主要是<strong>端口绑定和加密开关</strong>，而不是说“使用 SSL 协议”。</p></li></ul><h4 id="_2-现代-nginx-的变化" tabindex="-1"><a class="header-anchor" href="#_2-现代-nginx-的变化"><span>2. <strong>现代 Nginx 的变化</strong></span></a></h4><ul><li>在 <strong>Nginx 1.15.0 之后</strong>，你可以使用 <code>listen 443 http2;</code> 并且配合 <code>ssl_certificate</code> 和 <code>ssl_certificate_key</code> 自动启用 TLS。</li><li>也就是说，如果你已经配置了证书，现代 Nginx 会自动启用 TLS，即使没有显式写 <code>ssl</code>。</li><li>但是为了兼容老配置或明确标识，这个 <code>ssl</code> 仍然常用。</li></ul><h4 id="_3-推荐做法" tabindex="-1"><a class="header-anchor" href="#_3-推荐做法"><span>3. <strong>推荐做法</strong></span></a></h4><div class="language-nginx line-numbers-mode" data-highlighter="prismjs" data-ext="nginx" data-title="nginx"><pre><code><span class="line"><span class="token comment"># 推荐明确写 ssl</span></span>
<span class="line"><span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span> ssl http2</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token directive"><span class="token keyword">ssl_certificate</span> /etc/nginx/certs/example.com.crt</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token directive"><span class="token keyword">ssl_certificate_key</span> /etc/nginx/certs/example.com.key</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token directive"><span class="token keyword">ssl_protocols</span> TLSv1.2 TLSv1.3</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>明确写 <code>ssl</code> 可以：</p><ol><li>保证向下兼容老版本 Nginx。</li><li>让配置语义更清晰：这个端口是 HTTPS/TLS。</li></ol></li></ul><hr><h4 id="总结一句话-1" tabindex="-1"><a class="header-anchor" href="#总结一句话-1"><span><strong>总结一句话：</strong></span></a></h4><ul><li><strong>不写 <code>ssl</code> 也可能生效（现代 Nginx）</strong>，但<strong>写上 <code>ssl</code> 更安全、明确、兼容</strong>。</li></ul>`,29)]))}const d=t(l,[["render",i],["__file","SSL和TLS区别.html.vue"]]),c=JSON.parse('{"path":"/content/other/spread/SSL%E5%92%8CTLS%E5%8C%BA%E5%88%AB.html","title":"SSL和TLS区别","lang":"en-US","frontmatter":{"sidebar":false,"title":"SSL和TLS区别","head":[["meta",{"name":"title","content":"SSL和TLS区别"}],["meta",{"name":"description","content":"SSL和TLS区别"}],["meta",{"name":"keywords","content":"SSL,TLS"}],["meta",{"property":"og:title","content":"SSL和TLS区别"}],["meta",{"property":"og:description","content":"SSL和TLS区别"}]]},"headers":[{"level":3,"title":"SSL和TLS区别","slug":"ssl和tls区别","link":"#ssl和tls区别","children":[]},{"level":3,"title":"案例:","slug":"案例","link":"#案例","children":[]}],"git":{},"filePathRelative":"content/other/spread/SSL和TLS区别.md"}');export{d as comp,c as data};
