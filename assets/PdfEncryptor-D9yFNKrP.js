import{_ as k,e as l,o as c,c as d,b as o,F as x,x as B,i as S,h as D,v as J,t as _,B as T,f as z}from"./app-CHrRue27.js";import{J as w,F as A,C as p}from"./jszip.min-ZwSeMA6g.js";import"./commonjsHelpers-BosuxZz1.js";import"./vite-browser-external_commonjs-proxy-wZpHG6Gx.js";const Z={__name:"PdfEncryptor",setup(E,{expose:t}){t();const n=l([]),e=l(""),f=l(!1),u=l(""),a=l("");function m(s){const r=Array.from(s.target.files);n.value=[...n.value,...r],i("文件已添加","success")}function g(s){n.value.splice(s,1)}function i(s,r="info"){u.value=s,a.value=r,setTimeout(()=>{u.value=""},3e3)}function b(s,r){const y=p.lib.WordArray.create(s);return p.AES.encrypt(y,r,{mode:p.mode.CBC,padding:p.pad.Pkcs7}).toString()}async function h(){f.value=!0,i("正在加密文件...","info");try{const s=new w;for(let v of n.value){const F=await v.arrayBuffer(),P=b(F,e.value);s.file(v.name+".enc",P)}s.file("README.txt",`=== 文件解密说明 ===

这些文件使用 AES-256 加密。

解密方法：
1. 访问原网站使用配套的解密工具
2. 上传 .enc 文件并输入密码即可恢复原始 PDF

技术说明：
- 加密算法：AES-256-CBC
- 填充方式：PKCS7
- 使用 CryptoJS 库实现
`);const y=await s.generateAsync({type:"blob",compression:"DEFLATE",compressionOptions:{level:9}});A.saveAs(y,"encrypted_pdfs.zip"),i("加密完成！文件已下载","success")}catch(s){console.error(s),i("加密失败："+s.message,"error")}finally{f.value=!1}}const C={files:n,password:e,processing:f,message:u,messageType:a,handleUpload:m,removeFile:g,showMessage:i,encryptFile:b,downloadZip:h,ref:l,get JSZip(){return w},get saveAs(){return A.saveAs},get CryptoJS(){return p}};return Object.defineProperty(C,"__isScriptSetup",{enumerable:!1,value:!0}),C}},I={class:"pdf-zip-encryptor"},V={class:"upload-area"},M={key:0,class:"file-list"},N=["onClick"],U={class:"input-group"},L=["disabled"];function O(E,t,n,e,f,u){return c(),d("div",I,[t[4]||(t[4]=o("h2",{class:"title"},"PDF 压缩加密下载",-1)),o("div",V,[o("input",{type:"file",accept:"application/pdf",multiple:"",onChange:e.handleUpload,id:"pdfInput",hidden:""},null,32),t[1]||(t[1]=o("label",{for:"pdfInput",class:"upload-btn"},"选择 PDF 文件",-1)),e.files.length?(c(),d("div",M,[(c(!0),d(x,null,B(e.files,(a,m)=>(c(),d("div",{key:m,class:"file-item"},[z(_(a.name)+" ",1),o("button",{class:"delete-btn",onClick:g=>e.removeFile(m)},"删除",8,N)]))),128))])):S("",!0)]),o("div",U,[t[2]||(t[2]=o("label",null,"压缩密码（至少6位）：",-1)),D(o("input",{"onUpdate:modelValue":t[0]||(t[0]=a=>e.password=a),type:"password",placeholder:"请输入密码",minlength:"6"},null,512),[[J,e.password]]),t[3]||(t[3]=o("small",{class:"hint"}," 使用 AES-256 双层加密（文件加密 + ZIP 打包），最安全 ",-1))]),o("button",{class:"encrypt-btn",disabled:!e.files.length||e.password.length<6||e.processing,onClick:e.downloadZip},_(e.processing?"加密中...":"压缩并下载"),9,L),e.message?(c(),d("div",{key:0,class:T(["message",e.messageType])},_(e.message),3)):S("",!0)])}const q=k(Z,[["render",O],["__scopeId","data-v-91a719b6"],["__file","PdfEncryptor.vue"]]);export{q as default};
