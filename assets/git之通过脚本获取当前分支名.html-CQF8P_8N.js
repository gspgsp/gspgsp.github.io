import{_ as s,c as n,d as a,o as i}from"./app-CHrRue27.js";const t={};function r(l,e){return i(),n("div",null,e[0]||(e[0]=[a('<p>git之通过脚本获取当前分支名: git rev-parse --abbrev-ref HEAD</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">分析:</span>\n<span class="line">这段脚本使用了 Git 命令 `git rev-parse --abbrev-ref HEAD`，结合了 shell 变量定义，分析如下：</span>\n<span class="line"></span>\n<span class="line">- **`git rev-parse --abbrev-ref HEAD`**: 这个命令用于获取当前检出的分支的名称。`--abbrev-ref` 选项返回简短的引用名称，而不是完整的引用路径。`HEAD` 表示当前分支的引用，因此该命令输出的是当前分支的名称（例如 `main`、`feature/new-feature` 等）。</span>\n<span class="line">  </span>\n<span class="line">- **`LOCAL_BRANCH_NAME=&quot;$(git rev-parse --abbrev-ref HEAD)&quot;`**: 这是 shell 脚本中的变量赋值语法，`$()` 用于执行括号内的命令，并将其输出作为结果。这里，执行 `git rev-parse --abbrev-ref HEAD` 命令，并将输出值赋给 `LOCAL_BRANCH_NAME` 变量。</span>\n<span class="line"></span>\n<span class="line">总结：这个脚本片段的作用是通过 Git 命令获取当前分支的名称，并将其存储在名为 `LOCAL_BRANCH_NAME` 的变量中。</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2)]))}const d=s(t,[["render",r],["__file","git之通过脚本获取当前分支名.html.vue"]]),p=JSON.parse('{"path":"/content/other/git/git%E4%B9%8B%E9%80%9A%E8%BF%87%E8%84%9A%E6%9C%AC%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E5%88%86%E6%94%AF%E5%90%8D.html","title":"git之通过脚本获取当前分支名","lang":"en-US","frontmatter":{"sidebar":false,"title":"git之通过脚本获取当前分支名","description":"git之通过脚本获取当前分支名"},"headers":[],"git":{},"filePathRelative":"content/other/git/git之通过脚本获取当前分支名.md"}');export{d as comp,p as data};
