import{_ as s,c as a,d as i,o as e}from"./app-CHrRue27.js";const l={};function t(c,n){return e(),a("div",null,n[0]||(n[0]=[i(`<h3 id="symfony7之dto递归验证的问题" tabindex="-1"><a class="header-anchor" href="#symfony7之dto递归验证的问题"><span>symfony7之DTO递归验证的问题</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">use App\\Validator as MainAssert;</span>
<span class="line">use Symfony\\Component\\Validator\\Constraints as Assert;</span>
<span class="line"></span>
<span class="line">#[MainAssert\\LiveSession]</span>
<span class="line">class LiveSessionDto</span>
<span class="line">{</span>
<span class="line">    /**</span>
<span class="line">     * @param ?FileMetadataDto $liveSessionReport</span>
<span class="line">     * @param ?LiveSessionDataDto[] $liveSessionData</span>
<span class="line">     */</span>
<span class="line">    public function __construct(</span>
<span class="line">        protected readonly ?FileMetadataDto $liveSessionReport,</span>
<span class="line">        #[Assert\\Valid]</span>
<span class="line">        protected readonly ?array $liveSessionData,</span>
<span class="line">    ) {</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function getLiveSessionReport(): ?FileMetadataDto</span>
<span class="line">    {</span>
<span class="line">        return $this-&gt;liveSessionReport;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function getLiveSessionData(): ?array</span>
<span class="line">    {</span>
<span class="line">        return $this-&gt;liveSessionData;</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">然后在LiveSessionDataDto下对title属性使用了NotBlank验证:</span>
<span class="line">&lt;?php</span>
<span class="line"></span>
<span class="line">namespace App\\Model\\Dto\\Input;</span>
<span class="line"></span>
<span class="line">use Symfony\\Component\\Validator\\Constraints as Assert;</span>
<span class="line"></span>
<span class="line">class LiveSessionDataDto</span>
<span class="line">{</span>
<span class="line">    public function __construct(</span>
<span class="line">        protected ?int $id,</span>
<span class="line">        #[Assert\\NotBlank(message: &#39;This field is required.&#39;)]</span>
<span class="line">        protected string $title,</span>
<span class="line">    ) {</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function getId(): ?int</span>
<span class="line">    {</span>
<span class="line">        return $this-&gt;id;</span>
<span class="line">    }</span>
<span class="line"></span>
<span class="line">    public function getTitle(): string</span>
<span class="line">    {</span>
<span class="line">        return $this-&gt;title;</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">要想让这个DTO中的 NotBlank 生效，需要给父级添加 #[Assert\\Valid], 否则不生效.</span>
<span class="line"></span>
<span class="line">总结： 在 Symfony 里，递归验证需要用 #[Assert\\Valid] 标记在父 DTO 的属性上。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const p=s(l,[["render",t],["__file","symfony7之DTO递归验证的问题.html.vue"]]),r=JSON.parse('{"path":"/content/php/symfony/symfony7%E4%B9%8BDTO%E9%80%92%E5%BD%92%E9%AA%8C%E8%AF%81%E7%9A%84%E9%97%AE%E9%A2%98.html","title":"symfony7之DTO递归验证的问题","lang":"en-US","frontmatter":{"sidebar":false,"title":"symfony7之DTO递归验证的问题","head":[["meta",{"name":"title","content":"symfony7之DTO递归验证的问题"}],["meta",{"name":"description","content":"symfony7之DTO递归验证的问题"}],["meta",{"name":"keywords","content":"php,symfony"}],["meta",{"property":"og:title","content":"symfony7之DTO递归验证的问题"}],["meta",{"property":"og:description","content":"symfony7之DTO递归验证的问题"}]]},"headers":[{"level":3,"title":"symfony7之DTO递归验证的问题","slug":"symfony7之dto递归验证的问题","link":"#symfony7之dto递归验证的问题","children":[]}],"git":{},"filePathRelative":"content/php/symfony/symfony7之DTO递归验证的问题.md"}');export{p as comp,r as data};
