import{_ as n,c as e,d as l,o as a}from"./app-CHrRue27.js";const i={};function p(v,s){return a(),e("div",null,s[0]||(s[0]=[l(`<p>laravel11使用vue3作为组件创建非单页面应用:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">// laravel11默认使用vite打包，相关配置在vite.config.js下</span>
<span class="line">  </span>
<span class="line">import { defineConfig } from &#39;vite&#39;;</span>
<span class="line">import laravel from &#39;laravel-vite-plugin&#39;;</span>
<span class="line">import vue from &#39;@vitejs/plugin-vue&#39;</span>
<span class="line">  </span>
<span class="line">export default defineConfig({</span>
<span class="line">    plugins: [</span>
<span class="line">        laravel({</span>
<span class="line">            input: [&#39;resources/css/app.css&#39;, &#39;resources/css/welcome.css&#39; , &#39;resources/js/app.js&#39;], // 除了app.css 也可以配置多个css入口文件(比如这里的welcome.css)，以前都是习惯在一个app.css,其实可以多个相当于对css分组打包了</span>
<span class="line">            refresh: true,</span>
<span class="line">        }),</span>
<span class="line">        vue({</span>
<span class="line">            template: {</span>
<span class="line">                transformAssetUrls: {</span>
<span class="line">                    // Vue 插件会重写 Single File Components 中引用的资产 URL，</span>
<span class="line">                    // 指向 Laravel web 服务器。设置此值为 \`null\` 允许 Laravel 插件</span>
<span class="line">                    // 重新指向 Vite 服务器。</span>
<span class="line">                    base: null,</span>
<span class="line"></span>
<span class="line">                    // Vue 插件会解析绝对 URL 并将它们视为磁盘上文件的绝对路径。</span>
<span class="line">                    // 设置此值为 \`false\` 将不处理绝对 URL，所以它们可以如预期</span>
<span class="line">                    // 那样引用公共目录中的资产。</span>
<span class="line">                    includeAbsolute: false</span>
<span class="line">                }</span>
<span class="line">            }</span>
<span class="line">        }),</span>
<span class="line"></span>
<span class="line">    ],</span>
<span class="line">});</span>
<span class="line">  </span>
<span class="line">默认是没有 vue 相关的配置的，但是可以通过 @vitejs/plugin-vue 插件添加，但是发现 vue 组件不生效, 下面是我的 app.js</span>
<span class="line">import &#39;./bootstrap&#39;;</span>
<span class="line">  </span>
<span class="line">// 非单页面应用</span>
<span class="line">import { createApp } from &#39;vue&#39;;</span>
<span class="line">  </span>
<span class="line">import ExampleComponent from &#39;./components/ExampleComponent.vue&#39;</span>
<span class="line">  </span>
<span class="line">const app = createApp({})</span>
<span class="line">app.component(&#39;example-component&#39;, ExampleComponent)</span>
<span class="line">  </span>
<span class="line">app.mount(&#39;#app&#39;)</span>
<span class="line">  </span>
<span class="line">console.log(&#39;Vue app mounted&#39;)</span>
<span class="line">  </span>
<span class="line">没有任何问题，最后发现控制台有个警告:</span>
<span class="line">Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias &quot;vue&quot; to &quot;vue/dist/vue.esm-bundler.js&quot;.</span>
<span class="line">  </span>
<span class="line">开始没有注意，以为只是一个警告，但是后台添加到 vite.config.js下，问题解决了:</span>
<span class="line">import { defineConfig } from &#39;vite&#39;;</span>
<span class="line">import laravel from &#39;laravel-vite-plugin&#39;;</span>
<span class="line">import vue from &#39;@vitejs/plugin-vue&#39;</span>
<span class="line">  </span>
<span class="line">export default defineConfig({</span>
<span class="line">    plugins: [</span>
<span class="line">        laravel({</span>
<span class="line">            input: [&#39;resources/css/app.css&#39;, &#39;resources/css/welcome.css&#39; , &#39;resources/js/app.js&#39;], // 除了app.css 也可以配置多个css入口文件(比如这里的welcome.css)，以前都是习惯在一个app.css,其实可以多个相当于对css分组打包了</span>
<span class="line">            refresh: true,</span>
<span class="line">        }),</span>
<span class="line">        vue({</span>
<span class="line">            template: {</span>
<span class="line">                transformAssetUrls: {</span>
<span class="line">                    // Vue 插件会重写 Single File Components 中引用的资产 URL，</span>
<span class="line">                    // 指向 Laravel web 服务器。设置此值为 \`null\` 允许 Laravel 插件</span>
<span class="line">                    // 重新指向 Vite 服务器。</span>
<span class="line">                    base: null,</span>
<span class="line"></span>
<span class="line">                    // Vue 插件会解析绝对 URL 并将它们视为磁盘上文件的绝对路径。</span>
<span class="line">                    // 设置此值为 \`false\` 将不处理绝对 URL，所以它们可以如预期</span>
<span class="line">                    // 那样引用公共目录中的资产。</span>
<span class="line">                    includeAbsolute: false</span>
<span class="line">                }</span>
<span class="line">            }</span>
<span class="line">        }),</span>
<span class="line"></span>
<span class="line">    ],</span>
<span class="line">    resolve: {</span>
<span class="line">        alias: {</span>
<span class="line">            &#39;vue&#39;: &#39;vue/dist/vue.esm-bundler.js&#39;,</span>
<span class="line">        },</span>
<span class="line">    },</span>
<span class="line">});</span>
<span class="line">  </span>
<span class="line">这行配置确保 Vite 使用了包含模板编译器的 Vue 版本，这对于在运行时编译模板是必要的.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const d=n(i,[["render",p],["__file","laravel11使用vue3作为组件创建非单页面应用.html.vue"]]),r=JSON.parse('{"path":"/content/php/laravel/laravel11%E4%BD%BF%E7%94%A8vue3%E4%BD%9C%E4%B8%BA%E7%BB%84%E4%BB%B6%E5%88%9B%E5%BB%BA%E9%9D%9E%E5%8D%95%E9%A1%B5%E9%9D%A2%E5%BA%94%E7%94%A8.html","title":"laravel11使用vue3作为组件创建非单页面应用","lang":"en-US","frontmatter":{"sidebar":false,"title":"laravel11使用vue3作为组件创建非单页面应用","description":"laravel11使用vue3作为组件创建非单页面应用"},"headers":[],"git":{},"filePathRelative":"content/php/laravel/laravel11使用vue3作为组件创建非单页面应用.md"}');export{d as comp,r as data};
