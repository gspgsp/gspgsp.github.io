import{_ as s,c as a,d as e,o as t}from"./app-CHrRue27.js";const p={};function i(o,n){return t(),a("div",null,n[0]||(n[0]=[e(`<p>这个主要是解决nuxt3下的图片缩放的问题的，本来使用viewerjs挺好的，但是奈何nuxt3太调皮了，问题多，转而使用这个zoom</p><p>1.安装</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">yarn add --dev medium-zoom</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2.配置 Add following client-side (file name suffix .client.(ts|js)) plugin: ./plugins/medium-zoom.client.ts 注意这个client前缀，表示当process.client的时候才会加载,还是很有用的，之前一直没能弄明白这个前缀干啥用的</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineNuxtPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;#app&#39;</span></span>
<span class="line"><span class="token keyword">import</span> mediumZoom<span class="token punctuation">,</span> <span class="token punctuation">{</span> Zoom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;medium-zoom&#39;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineNuxtPlugin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>nuxtApp<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> selector <span class="token operator">=</span> <span class="token string">&#39;.image-zoomable&#39;</span></span>
<span class="line">  <span class="token keyword">const</span> zoom<span class="token operator">:</span> Zoom <span class="token operator">=</span> <span class="token function">mediumZoom</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token comment">// (re-)init for newly rendered page, also to work in SPA mode (client-side routing)</span></span>
<span class="line">  nuxtApp<span class="token punctuation">.</span><span class="token function">hook</span><span class="token punctuation">(</span><span class="token string">&#39;page:finish&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    zoom<span class="token punctuation">.</span><span class="token function">detach</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token comment">// make available as helper to NuxtApp </span></span>
<span class="line">  nuxtApp<span class="token punctuation">.</span><span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">&#39;mediumZoom&#39;</span><span class="token punctuation">,</span> zoom<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.解释</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Now for each page rendered / client-side navigated to, medium-zoom is applied accordingly for all images in the DOM matching the chosen selector. In our plugin we chose a CSS selector to match all img elements with the class image-zoomable.</span>
<span class="line">You can find all supported selector types in the module&#39;s docs.</span>
<span class="line">Running on nuxt - client-side app navigation is done via vue-router. For medium-zoom to do it&#39;s magic, it has to be &#39;re-attached&#39; following changes to image on the page. We use the page:finish nuxt3 lifecycle hook as a trigger.</span>
<span class="line">Finally, we also provide the mediumZoom instance as a helper.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.使用</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/images/fluffy-cat.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>A fluffy cat<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image-zoomable<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>，必须加上 class=&quot;image-zoomable&quot;，方便上面的ts选择图片</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>5.注意</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">需要特别注意的是，这个img的src内容，需要再页面加载完成的时候，或者 之前就把img的src数据渲染出来，不能使用await 获取数据，否则上面的ts 不生效，我分析了原因</span>
<span class="line">可能是上面的ts 会在 nuxtApp添加 hook page:finish，所以我的解决办法是通过middleware 调用 获取数据存储到localstorage 然后在mounted 中取出数据，进行渲染。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,11)]))}const c=s(p,[["render",i],["__file","图片缩放之medium-zoom使用.html.vue"]]),u=JSON.parse('{"path":"/content/front/js/%E5%9B%BE%E7%89%87%E7%BC%A9%E6%94%BE%E4%B9%8Bmedium-zoom%E4%BD%BF%E7%94%A8.html","title":"图片缩放之medium-zoom使用","lang":"en-US","frontmatter":{"sidebar":false,"title":"图片缩放之medium-zoom使用","description":"图片缩放之medium-zoom使用"},"headers":[],"git":{},"filePathRelative":"content/front/js/图片缩放之medium-zoom使用.md"}');export{c as comp,u as data};
