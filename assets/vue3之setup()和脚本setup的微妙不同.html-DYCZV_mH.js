import{_ as t,c as s,d as n,o as a}from"./app-CHrRue27.js";const i={};function p(l,e){return a(),s("div",null,e[0]||(e[0]=[n(`<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">不要为已经可以用 &lt;script setup&gt; 定义的选项使用单独的 &lt;script&gt; 部分，如 props 和 emits。</span>
<span class="line">在 &lt;script setup&gt; 中创建的变量不会作为属性添加到组件实例中，这使得它们无法从选项式 API 中访问。我们强烈反对以这种方式混合 API。//重点是这句话，就是不能混合开发，实际上这样的需求还少，无奈...</span>
<span class="line">如果你发现自己处于以上任一不被支持的场景中，那么你应该考虑切换到一个显式的 setup() 函数，而不是使用 &lt;script setup&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)]))}const u=t(i,[["render",p],["__file","vue3之setup()和脚本setup的微妙不同.html.vue"]]),c=JSON.parse('{"path":"/content/front/js/vue3%E4%B9%8Bsetup()%E5%92%8C%E8%84%9A%E6%9C%ACsetup%E7%9A%84%E5%BE%AE%E5%A6%99%E4%B8%8D%E5%90%8C.html","title":"vue3之setup()和脚本setup的微妙不同","lang":"en-US","frontmatter":{"sidebar":false,"title":"vue3之setup()和脚本setup的微妙不同","description":"vue3之setup()和脚本setup的微妙不同"},"headers":[],"git":{},"filePathRelative":"content/front/js/vue3之setup()和脚本setup的微妙不同.md"}');export{u as comp,c as data};
