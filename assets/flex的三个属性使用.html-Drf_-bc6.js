import{_ as t,c as p,d as l,o as f}from"./app-CHrRue27.js";const a={};function r(n,e){return f(),p("div",null,e[0]||(e[0]=[l("<p>最近做项目遇到个需求：水平方向有四个元素，间距大小不一样，需要做自适应，开始通过设置之间的padding<br> 后来发现屏幕大小变化以后，会出现滚动条，不能自适应，之前用过flex:1，没有仔细研究这个属性，今天特意<br> 研究一下： flex: param1 param2 param3 ,主要是：控制 Flex 子元素在主轴上的比例，这个写法其实是：</p><p>flex-grow: 这个 flex 子元素得到（伸张）多少 positive free space? //解决除去自身的宽度，如果还有剩余空间，如何分配的问题 flex-shrink: 从这个 flex 子元素要消除（收缩）多少 negative free space? // 解决父级空间小于子元素的宽度时候，子元素如何收缩的问题，一般直接设为1，表示支持缩放 flex-basis: 在 flex 子元素未伸张和收缩之前，它的大小是多少？ // 子元素默认大小</p><p>的缩写。</p><p>比如我这里有三个元素： A B C</p><p>16---A----20----B----50-----C-----60</p><p>那么可以分别加样式(加入 A B C的宽度分别为：10 20 30 )：</p><p>A: flex: 20 1 10px margin-left:16px</p><p>B: flex: 50 1 20px</p><p>C: flex: 60 1 20px</p><p>即可实现自适应</p>",10)]))}const o=t(a,[["render",r],["__file","flex的三个属性使用.html.vue"]]),s=JSON.parse('{"path":"/content/front/html/flex%E7%9A%84%E4%B8%89%E4%B8%AA%E5%B1%9E%E6%80%A7%E4%BD%BF%E7%94%A8.html","title":"flex的三个属性使用","lang":"en-US","frontmatter":{"sidebar":false,"title":"flex的三个属性使用","description":"flex的三个属性使用"},"headers":[],"git":{},"filePathRelative":"content/front/html/flex的三个属性使用.md"}');export{o as comp,s as data};
