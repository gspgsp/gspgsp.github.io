import{_ as s,c as a,d as e,o as p}from"./app-CHrRue27.js";const t={};function l(i,n){return p(),a("div",null,n[0]||(n[0]=[e(`<p>symfony之doctrine添加查询结果处理的额外拓展:</p><p>场景：现在需要把查询到的结果集，直接返回匹配到的数据的id数组，可以通过下面的方式实现</p><ul><li>在 App\\Extensions\\DoctrineHydrators 目录下创建如下类:</li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Extensions<span class="token punctuation">\\</span>DoctrineHydrators</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Doctrine<span class="token punctuation">\\</span>DBAL<span class="token punctuation">\\</span>Exception</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Doctrine<span class="token punctuation">\\</span>ORM<span class="token punctuation">\\</span>Internal<span class="token punctuation">\\</span>Hydration<span class="token punctuation">\\</span>AbstractHydrator</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name-definition class-name">PluckHydrator</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractHydrator</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">const</span> <span class="token constant">HYDRATE_PLUCK</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;hydrate_pluck&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * <span class="token keyword">@return</span> <span class="token class-name">list</span>&lt;mixed&gt;</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">hydrateAllData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token variable">$pluckValues</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">statement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">fetchFirstColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> <span class="token variable">$pluckValues</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>将 PluckHydrator 配置到 doctrine.yaml 文件里</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">doctrine</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">dbal</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">&#39;%env(resolve:DATABASE_URL)%&#39;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment"># IMPORTANT: You MUST configure your server version,</span></span>
<span class="line">        <span class="token comment"># either here or in the DATABASE_URL env var (see .env file)</span></span>
<span class="line">        <span class="token comment">#server_version: &#39;13&#39;</span></span>
<span class="line">    <span class="token key atrule">orm</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">auto_generate_proxy_classes</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">        <span class="token key atrule">naming_strategy</span><span class="token punctuation">:</span> doctrine.orm.naming_strategy.underscore_number_aware</span>
<span class="line">        <span class="token key atrule">auto_mapping</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">        <span class="token key atrule">mappings</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token key atrule">App</span><span class="token punctuation">:</span></span>
<span class="line">                <span class="token key atrule">is_bundle</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span>
<span class="line">                <span class="token key atrule">dir</span><span class="token punctuation">:</span> <span class="token string">&#39;%kernel.project_dir%/src/Entity&#39;</span></span>
<span class="line">                <span class="token key atrule">prefix</span><span class="token punctuation">:</span> <span class="token string">&#39;App\\Entity&#39;</span></span>
<span class="line">                <span class="token key atrule">alias</span><span class="token punctuation">:</span> App</span>
<span class="line">        <span class="token comment">#添加下面这行配置即可        </span></span>
<span class="line">        <span class="token key atrule">hydrators</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token key atrule">hydrate_pluck</span><span class="token punctuation">:</span> App\\Extensions\\DoctrineHydrators\\PluckHydrator</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用</li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">createQueryBuilder</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token operator">-&gt;</span><span class="token function">getQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token operator">-&gt;</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token class-name static-context">PluckHydrator</span><span class="token operator">::</span><span class="token constant">HYDRATE_PLUCK</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//这样就可以通过自定义模式返回想要的数据，不需要先返回结果集，再去处理得到想要的数据</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)]))}const o=s(t,[["render",l],["__file","symfony之doctrine添加查询结果处理的额外拓展.html.vue"]]),r=JSON.parse('{"path":"/content/php/symfony/symfony%E4%B9%8Bdoctrine%E6%B7%BB%E5%8A%A0%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E5%A4%84%E7%90%86%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8B%93%E5%B1%95.html","title":"symfony之doctrine添加查询结果处理的额外拓展","lang":"en-US","frontmatter":{"sidebar":false,"title":"symfony之doctrine添加查询结果处理的额外拓展","description":"symfony之doctrine添加查询结果处理的额外拓展"},"headers":[],"git":{},"filePathRelative":"content/php/symfony/symfony之doctrine添加查询结果处理的额外拓展.md"}');export{o as comp,r as data};
